 Resolving package versions...
 Installed Requires ──────────────────── v0.5.2
 Installed NaNMath ───────────────────── v0.3.3
 Installed Inflate ───────────────────── v0.1.1
 Installed DiffEqDiffTools ───────────── v1.4.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed DocStringExtensions ───────── v0.8.1
 Installed Petri ─────────────────────── v0.1.2
 Installed Catlab ────────────────────── v0.3.0
 Installed RecursiveArrayTools ───────── v1.0.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DiffRules ─────────────────── v0.1.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed AutoHashEquals ────────────── v0.2.0
 Installed ArrayInterface ────────────── v1.2.1
 Installed Parsers ───────────────────── v0.3.10
 Installed LightXML ──────────────────── v0.8.1
 Installed NameResolution ────────────── v0.1.3
 Installed ModelingToolkit ───────────── v0.8.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed JuliaVariables ────────────── v0.2.0
 Installed MacroTools ────────────────── v0.5.2
 Installed BinDeps ───────────────────── v0.8.10
 Installed Reexport ──────────────────── v0.2.0
 Installed DataStructures ────────────── v0.17.6
 Installed JSON ──────────────────────── v0.21.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed UnionFind ─────────────────── v0.1.0
 Installed MetaGraphs ────────────────── v0.6.4
 Installed GeneralizedGenerated ──────── v0.2.0
 Installed SpecialFunctions ──────────── v0.8.0
 Installed DiffEqBase ────────────────── v6.6.0
 Installed Roots ─────────────────────── v0.8.3
 Installed URIParser ─────────────────── v0.4.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed PrettyPrint ───────────────── v0.1.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed CanonicalTraits ───────────── v0.1.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed StaticArrays ──────────────── v0.11.1
 Installed Match ─────────────────────── v1.0.2
 Installed FileIO ────────────────────── v1.0.7
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed CodecZlib ─────────────────── v0.6.0
 Installed Parameters ────────────────── v0.12.0
 Installed MuladdMacro ───────────────── v0.2.1
 Installed JLD2 ──────────────────────── v0.1.8
 Installed LightGraphs ───────────────── v1.3.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed Compat ────────────────────── v2.2.0
 Installed MLStyle ───────────────────── v0.3.1
 Installed TranscodingStreams ────────── v0.9.5
  Updating `~/.julia/environments/v1.0/Project.toml`
  [4259d249] + Petri v0.1.2
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v1.2.1
  [15f4f7f2] + AutoHashEquals v0.2.0
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [a603d957] + CanonicalTraits v0.1.0
  [134e5e36] + Catlab v0.3.0
  [944b1d66] + CodecZlib v0.6.0
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.6
  [2b5f629d] + DiffEqBase v6.6.0
  [01453d9d] + DiffEqDiffTools v1.4.0
  [b552c78f] + DiffRules v0.1.0
  [ffbed154] + DocStringExtensions v0.8.1
  [5789e2e9] + FileIO v1.0.7
  [069b7b12] + FunctionWrappers v1.0.0
  [6b9d7cbe] + GeneralizedGenerated v0.2.0
  [d25df0c9] + Inflate v0.1.1
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [033835bb] + JLD2 v0.1.8
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.0
  [093fc24a] + LightGraphs v1.3.0
  [9c8b4983] + LightXML v0.8.1
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.2
  [7eb4fadd] + Match v1.0.2
  [626554b9] + MetaGraphs v0.6.4
  [961ee093] + ModelingToolkit v0.8.0
  [46d2c3a1] + MuladdMacro v0.2.1
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [4259d249] + Petri v0.1.2
  [8162dcfd] + PrettyPrint v0.1.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [f2b01f46] + Roots v0.8.3
  [699a6c99] + SimpleTraits v0.9.1
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.11.1
  [3783bdb8] + TableTraits v1.0.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [a2a6695c] + TreeViews v0.3.0
  [30578b45] + URIParser v0.4.0
  [99c6138d] + UnionFind v0.1.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building LightXML ────────→ `~/.julia/packages/LightXML/W8FVT/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
  Building CodecZlib ───────→ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Testing Petri
 Resolving package versions...
 Installed LabelledArrays ─────── v0.7.1
 Installed VertexSafeGraphs ───── v0.1.0
 Installed Adapt ──────────────── v1.0.0
 Installed SparseDiffTools ────── v0.10.3
 Installed DiffResults ────────── v0.0.4
 Installed GenericSVD ─────────── v0.2.2
 Installed CommonSubexpressions ─ v0.2.0
 Installed ExponentialUtilities ─ v1.5.1
 Installed ForwardDiff ────────── v0.10.6
 Installed OrdinaryDiffEq ─────── v5.23.0
    Status `/tmp/tmpHm3YBS/Manifest.toml`
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v1.2.1
  [15f4f7f2] AutoHashEquals v0.2.0
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [a603d957] CanonicalTraits v0.1.0
  [134e5e36] Catlab v0.3.0
  [944b1d66] CodecZlib v0.6.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [864edb3b] DataStructures v0.17.6
  [2b5f629d] DiffEqBase v6.6.0
  [01453d9d] DiffEqDiffTools v1.4.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.5.1
  [5789e2e9] FileIO v1.0.7
  [f6369f11] ForwardDiff v0.10.6
  [069b7b12] FunctionWrappers v1.0.0
  [6b9d7cbe] GeneralizedGenerated v0.2.0
  [01680d73] GenericSVD v0.2.2
  [d25df0c9] Inflate v0.1.1
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.1.8
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.0
  [2ee39098] LabelledArrays v0.7.1
  [093fc24a] LightGraphs v1.3.0
  [9c8b4983] LightXML v0.8.1
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.2
  [7eb4fadd] Match v1.0.2
  [626554b9] MetaGraphs v0.6.4
  [961ee093] ModelingToolkit v0.8.0
  [46d2c3a1] MuladdMacro v0.2.1
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.23.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [4259d249] Petri v0.1.2
  [8162dcfd] PrettyPrint v0.1.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v1.0.2
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [f2b01f46] Roots v0.8.3
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v0.10.3
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.11.1
  [3783bdb8] TableTraits v1.0.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [a2a6695c] TreeViews v0.3.0
  [30578b45] URIParser v0.4.0
  [99c6138d] UnionFind v0.1.0
  [19fa3120] VertexSafeGraphs v0.1.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary: | Pass  Total
Equality      |    4      4
MacroTools.striplines(q) = quote
    begin
        state.S > 0 || return nothing
        state.I > 0 || return nothing
        state.S -= 1
        state.I -= 1
    end
    state.I += 2
end
MacroTools.striplines(q) = quote
    begin
        state.I > 0 || return nothing
        state.I -= 1
    end
    state.R += 1
end
MacroTools.striplines(q) = :((state.I / 1) * (state.S / 1) * params[1])
MacroTools.striplines(q) = :((state.I / 1) * params[2])
MacroTools.striplines(q) = quote
    begin
        state.S > 0 || return nothing
        state.I > 0 || return nothing
        state.S -= 1
        state.I -= 1
    end
    begin
        state.E += 1
        state.I += 1
    end
end
MacroTools.striplines(q) = quote
    begin
        state.E > 0 || return nothing
        state.E -= 1
    end
    state.I += 1
end
MacroTools.striplines(q) = quote
    begin
        state.I > 0 || return nothing
        state.I -= 1
    end
    state.R += 1
end
MacroTools.striplines(q) = quote
    begin
        state.R > 0 || return nothing
        state.R -= 1
    end
    state.S += 1
end
MacroTools.striplines(q) = :((state.I / 1) * (state.S / 1) * params[1])
MacroTools.striplines(q) = :((state.E / 1) * params[2])
MacroTools.striplines(q) = :((state.I / 1) * params[3])
MacroTools.striplines(q) = :((state.R / 1) * params[4])
m′ = Model{Missing,Array{Operation,1},Array{Expr,1},Array{Expr,1},Missing}(missing, Operation[S(), E(), I(), R()], Expr[:(##δ#365(state) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:96 =#
          begin
              #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:80 =#
              begin
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.S > 0 || return nothing
                  state.I > 0 || return nothing
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.S -= 1
                  state.I -= 1
              end
              begin
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:47 =#
                  state.E += 1
                  state.I += 1
              end
          end
      end), :(##δ#366(state) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:96 =#
          begin
              #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:80 =#
              begin
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.E > 0 || return nothing
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.E -= 1
              end
              state.I += 1
          end
      end), :(##δ#367(state) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:96 =#
          begin
              #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:80 =#
              begin
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.I > 0 || return nothing
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.I -= 1
              end
              state.R += 1
          end
      end), :(##δ#368(state) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:96 =#
          begin
              #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:80 =#
              begin
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.R > 0 || return nothing
                  #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:75 =#
                  state.R -= 1
              end
              state.S += 1
          end
      end)], Expr[:(##λ#369(state, params) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:142 =#
          (state.I / 1) * (state.S / 1) * params[1]
      end), :(##λ#370(state, params) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:142 =#
          (state.E / 1) * params[2]
      end), :(##λ#371(state, params) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:142 =#
          (state.I / 1) * params[3]
      end), :(##λ#372(state, params) = begin
          #= /root/.julia/packages/Petri/1JIxf/src/stochastic.jl:142 =#
          (state.R / 1) * params[4]
      end)], missing)
Test Summary:         | Pass  Total
Stochastic Simulation |    4      4
MacroTools.striplines(q) = quote
    begin
        state.S > 0 || return nothing
        state.I > 0 || return nothing
        state.S -= 1
        state.I -= 1
    end
    begin
        state.E += 1
        state.I += 1
    end
end
MacroTools.striplines(q) = quote
    begin
        state.E > 0 || return nothing
        state.E -= 1
    end
    state.I += 1
end
MacroTools.striplines(q) = quote
    begin
        state.I > 0 || return nothing
        state.I -= 1
    end
    state.R += 1
end
MacroTools.striplines(q) = quote
    begin
        state.R > 0 || return nothing
        state.R -= 1
    end
    state.S += 1
end
MacroTools.striplines(q) = :((state.I / 1) * (state.S / 1) * params[1])
MacroTools.striplines(q) = :((state.E / 1) * params[2])
MacroTools.striplines(q) = :((state.I / 1) * params[3])
MacroTools.striplines(q) = :((state.R / 1) * params[4])
state′ = f(p, p.initial) = [S=100, E=0, I=1, R=0]
sol = [S=31, E=28, I=22, R=20]
Test Summary:             |
Unrolled Stochastic Solve | No tests
Petri.funcbody(λ) = (:(((state.β * state.S) * state.I) / ((state.S + state.I) + state.R)), Set(Symbol[:I, :R, :S, :β]))
Petri.funcbody(λ) = (:(state.γ * state.I), Set(Symbol[:γ, :I]))
Petri.funcbody(λ) = (:(state.μ * state.R), Set(Symbol[:μ, :R]))
Test Summary:              | Pass  Total
Generation of ODE formulas |    3      3
dusir = [S=-0.3465346534653465, I=0.2965346534653465, R=0.05]
Test Summary:               | Pass  Total
Generation of ODE solutions |   15     15
   Testing Petri tests passed 
