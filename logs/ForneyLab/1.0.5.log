 Resolving package versions...
 Installed URIParser ──────── v0.4.0
 Installed Compat ─────────── v2.2.0
 Installed BinDeps ────────── v0.8.10
 Installed SpecialFunctions ─ v0.8.0
 Installed BinaryProvider ─── v0.5.8
 Installed ForneyLab ──────── v0.10.0
  Updating `~/.julia/environments/v1.0/Project.toml`
  [9fc3f58a] + ForneyLab v0.10.0
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [34da2185] + Compat v2.2.0
  [9fc3f58a] + ForneyLab v0.10.0
  [276daf66] + SpecialFunctions v0.8.0
  [30578b45] + URIParser v0.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
   Testing ForneyLab
    Status `/tmp/tmpGhJkaH/Manifest.toml`
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [34da2185] Compat v2.2.0
  [9fc3f58a] ForneyLab v0.10.0
  [276daf66] SpecialFunctions v0.8.0
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = differentialEntropy(::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Gamma}) at gamma.jl:78
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/gamma.jl:78
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = averageEnergy(::Type{ForneyLab.Gamma}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Gamma}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}) at gamma.jl:86
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/gamma.jl:86
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = (::getfield(ForneyLab, Symbol("##65#67")){ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.Wishart}})(::Int64) at none:0
└ @ ForneyLab ./none:0
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = (::getfield(ForneyLab, Symbol("##69#70")){ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}})(::Int64) at none:0
└ @ ForneyLab ./none:0
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = differentialEntropy(::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Beta}) at beta.jl:84
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/beta.jl:84
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = averageEnergy(::Type{ForneyLab.Beta}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.Beta}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Univariate,ForneyLab.PointMass}) at beta.jl:92
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/beta.jl:92
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = differentialEntropy(::ForneyLab.ProbabilityDistribution{ForneyLab.Multivariate,ForneyLab.Dirichlet}) at dirichlet.jl:107
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:107
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:582 [inlined]
└ @ Core ./broadcast.jl:582
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = averageEnergy(::Type{ForneyLab.Dirichlet}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Multivariate,ForneyLab.Dirichlet}, ::ForneyLab.ProbabilityDistribution{ForneyLab.Multivariate,ForneyLab.PointMass}) at dirichlet.jl:129
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:129
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = differentialEntropy(::ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.Dirichlet}) at dirichlet.jl:117
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:117
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = averageEnergy(::Type{ForneyLab.Dirichlet}, ::ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.Dirichlet}, ::ForneyLab.ProbabilityDistribution{ForneyLab.MatrixVariate,ForneyLab.PointMass}) at dirichlet.jl:143
└ @ ForneyLab ~/.julia/packages/ForneyLab/Hz4kD/src/factor_nodes/dirichlet.jl:143
┌ Warning: `lfactorial(x)` is deprecated, use `logfactorial(x)` instead.
│   caller = (::getfield(ForneyLab, Symbol("##106#107")){Float64})(::Int64) at none:0
└ @ ForneyLab ./none:0
┌ Warning: `lfactorial(x)` is deprecated, use `logfactorial(x)` instead.
│   caller = (::getfield(ForneyLab, Symbol("##106#107")){Float64})(::Int64) at none:0
└ @ ForneyLab ./none:0
Test Summary: | Pass  Total
ForneyLab     | 1475   1475
   Testing ForneyLab tests passed 
