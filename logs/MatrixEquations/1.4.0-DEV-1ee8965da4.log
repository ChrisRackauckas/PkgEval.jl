 Resolving package versions...
 Installed FastClosures ──── v0.3.2
 Installed MatrixEquations ─ v1.0.0
 Installed LinearOperators ─ v0.6.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [99c1a7ee] + MatrixEquations v1.0.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9aa1b823] + FastClosures v0.3.2
  [5c8ed15e] + LinearOperators v0.6.0
  [99c1a7ee] + MatrixEquations v1.0.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing MatrixEquations
Status `/tmp/jl_JngbaS/Manifest.toml`
  [9aa1b823] FastClosures v0.3.2
  [5c8ed15e] LinearOperators v0.6.0
  [99c1a7ee] MatrixEquations v1.0.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
  0.000000 seconds
  0.000000 seconds
  1.225507 seconds (12.41 k allocations: 2.133 MiB)
  0.134891 seconds (2.51 k allocations: 440.609 KiB)
  0.152872 seconds (2.81 k allocations: 383.375 KiB)
  0.125435 seconds (296 allocations: 1.469 MiB, 25.46% gc time)
  3.615077 seconds (150.20 k allocations: 11.077 MiB)
  0.069310 seconds (35.56 k allocations: 5.649 MiB)
  0.165010 seconds (788 allocations: 1.649 MiB)
  0.147647 seconds (332 allocations: 1.624 MiB)
  0.097034 seconds (310 allocations: 1.623 MiB)
  0.108308 seconds (335 allocations: 1.624 MiB)
  1.541078 seconds (809.05 k allocations: 41.485 MiB, 2.17% gc time)
  0.303869 seconds (446.78 k allocations: 21.641 MiB)
  0.299527 seconds (435.33 k allocations: 21.145 MiB)
  0.091198 seconds (15.63 k allocations: 1.503 MiB)
  7.096422 seconds (8.69 M allocations: 406.139 MiB, 4.68% gc time)
  0.048205 seconds (48.29 k allocations: 4.619 MiB)
  0.112682 seconds (38.28 k allocations: 2.721 MiB)
  0.057203 seconds (16.88 k allocations: 1.632 MiB)
  0.064083 seconds (16.04 k allocations: 1.588 MiB)
  0.107693 seconds (17.90 k allocations: 1.688 MiB)
  0.000000 seconds
  0.000000 seconds
  1.090475 seconds (10.43 k allocations: 2.552 MiB)
  0.268715 seconds (1.39 k allocations: 1.671 MiB)
  0.218140 seconds (76 allocations: 1.608 MiB, 19.31% gc time)
  0.070947 seconds (83 allocations: 1.609 MiB)
  0.013248 seconds (257 allocations: 328.391 KiB)
  0.324660 seconds (3.86 k allocations: 2.420 MiB)
  0.231586 seconds (98 allocations: 1.610 MiB)
  0.283933 seconds (98 allocations: 1.610 MiB)
  0.198063 seconds (509 allocations: 2.235 MiB)
  0.221853 seconds (533 allocations: 2.389 MiB)
  1.789797 seconds (129.45 k allocations: 19.227 MiB)
  0.366787 seconds (465 allocations: 2.386 MiB)
  0.366677 seconds (73.77 k allocations: 17.346 MiB, 8.84% gc time)
  0.101949 seconds (69.01 k allocations: 16.439 MiB)
  0.196043 seconds (69.04 k allocations: 16.502 MiB, 10.70% gc time)
  0.245481 seconds (429 allocations: 2.231 MiB)
  0.198796 seconds (536 allocations: 2.389 MiB)
  0.234591 seconds (548 allocations: 2.389 MiB)
  0.113015 seconds (570 allocations: 2.543 MiB)
  0.082882 seconds (45 allocations: 2.359 MiB)
  0.118396 seconds (580 allocations: 2.468 MiB)
  0.215461 seconds (581 allocations: 2.468 MiB)
  0.207923 seconds (602 allocations: 2.545 MiB)
  1.477348 seconds (590.94 k allocations: 29.986 MiB, 1.31% gc time)
  0.549711 seconds (241.70 k allocations: 12.607 MiB)
  0.343303 seconds (1.90 k allocations: 923.197 KiB)
  0.111156 seconds (3.56 k allocations: 1017.323 KiB)
  0.037275 seconds (8.31 k allocations: 547.981 KiB)
  0.768442 seconds (538.52 k allocations: 27.451 MiB)
  0.158029 seconds (4.81 k allocations: 1.062 MiB)
  0.335380 seconds (3.03 k allocations: 982.722 KiB)
  0.168538 seconds (25.12 k allocations: 2.369 MiB)
  0.139544 seconds (27.57 k allocations: 2.558 MiB)
  2.087004 seconds (1.69 M allocations: 85.396 MiB, 3.18% gc time)
  0.122009 seconds (27.18 k allocations: 2.544 MiB)
  0.420518 seconds (539.11 k allocations: 33.870 MiB)
  0.120709 seconds (95.71 k allocations: 12.240 MiB, 33.47% gc time)
  0.072179 seconds (98.17 k allocations: 12.397 MiB)
  0.100505 seconds (25.62 k allocations: 2.399 MiB)
  0.095199 seconds (31.26 k allocations: 2.754 MiB)
  0.113252 seconds (26.38 k allocations: 2.489 MiB)
  0.185052 seconds (28.84 k allocations: 2.688 MiB)
  0.055388 seconds (45 allocations: 1.181 MiB)
  0.131259 seconds (34.21 k allocations: 2.930 MiB)
  0.106163 seconds (27.63 k allocations: 2.584 MiB)
  0.161617 seconds (30.03 k allocations: 2.743 MiB)
  0.008534 seconds (40 allocations: 4.281 KiB)
  0.026541 seconds (363 allocations: 18.469 KiB)
  0.011706 seconds (84 allocations: 6.734 KiB)
  0.023418 seconds (73.08 k allocations: 16.078 MiB)
  3.939675 seconds (275.68 k allocations: 33.509 MiB, 1.11% gc time)
  0.039194 seconds (36.12 k allocations: 5.189 MiB)
  0.015834 seconds (35.71 k allocations: 5.171 MiB)
  0.028251 seconds (51.54 k allocations: 8.679 MiB)
  0.054182 seconds (70.05 k allocations: 16.032 MiB, 42.59% gc time)
  0.017759 seconds (35 allocations: 2.312 KiB)
  0.016231 seconds (79 allocations: 4.766 KiB)
  0.008470 seconds (35.68 k allocations: 5.170 MiB)
  0.007953 seconds (39.11 k allocations: 5.222 MiB)
  0.008839 seconds (40 allocations: 4.281 KiB)
  0.039633 seconds (12.26 k allocations: 645.975 KiB)
  0.013993 seconds (84 allocations: 6.734 KiB)
  0.034339 seconds (68.60 k allocations: 10.310 MiB)
  6.529187 seconds (6.55 M allocations: 308.875 MiB, 8.47% gc time)
  0.038948 seconds (44.73 k allocations: 4.325 MiB)
  0.016059 seconds (33.93 k allocations: 3.766 MiB)
  0.086250 seconds (49.16 k allocations: 5.769 MiB, 61.08% gc time)
  0.017737 seconds (65.58 k allocations: 10.158 MiB)
  0.007541 seconds (603 allocations: 37.737 KiB)
  0.013470 seconds (79 allocations: 4.766 KiB)
  0.006739 seconds (33.34 k allocations: 3.730 MiB)
  0.006619 seconds (36.53 k allocations: 3.777 MiB)
  0.000000 seconds
  0.000000 seconds
  0.425557 seconds (4.08 k allocations: 1.642 MiB)
  0.089428 seconds (1.59 k allocations: 234.656 KiB)
  0.093423 seconds (1.45 k allocations: 231.969 KiB)
  0.128544 seconds (296 allocations: 1.469 MiB)
  0.610271 seconds (67.73 k allocations: 9.885 MiB)
  0.208065 seconds (39.79 k allocations: 8.971 MiB)
  0.070837 seconds (311 allocations: 1.623 MiB)
  0.178669 seconds (332 allocations: 1.624 MiB)
  0.340362 seconds (310 allocations: 1.623 MiB)
  0.228512 seconds (335 allocations: 1.624 MiB)
  0.402096 seconds (178.18 k allocations: 9.456 MiB)
  0.163736 seconds (247.24 k allocations: 11.780 MiB)
  0.181601 seconds (259.46 k allocations: 12.781 MiB)
  0.194713 seconds (15.61 k allocations: 1.503 MiB)
  0.937672 seconds (458.32 k allocations: 23.993 MiB)
  0.238339 seconds (52.38 k allocations: 6.383 MiB, 13.35% gc time)
  0.380096 seconds (15.95 k allocations: 1.582 MiB)
  0.186490 seconds (16.87 k allocations: 1.632 MiB)
  0.276297 seconds (16.04 k allocations: 1.587 MiB)
  0.458928 seconds (17.90 k allocations: 1.687 MiB)
  0.990585 seconds (6.28 k allocations: 2.332 MiB)
  0.096398 seconds (114 allocations: 1.763 MiB)
  0.059313 seconds (131 allocations: 1.764 MiB)
  0.228873 seconds (233 allocations: 1.770 MiB)
  0.228663 seconds (138 allocations: 1.765 MiB)
  0.012770 seconds (252 allocations: 171.781 KiB)
  0.011584 seconds (348 allocations: 177.938 KiB)
  0.184372 seconds (499 allocations: 2.235 MiB)
  0.213586 seconds (234 allocations: 1.770 MiB)
  0.155114 seconds (248 allocations: 1.771 MiB)
  0.315388 seconds (510 allocations: 2.235 MiB)
  0.180734 seconds (534 allocations: 2.389 MiB)
  0.951527 seconds (112.92 k allocations: 18.318 MiB)
  0.378062 seconds (73.73 k allocations: 17.069 MiB, 9.01% gc time)
  0.318088 seconds (67.42 k allocations: 16.278 MiB)
  0.121520 seconds (67.44 k allocations: 16.342 MiB, 8.74% gc time)
  0.152513 seconds (430 allocations: 2.231 MiB)
  0.173827 seconds (536 allocations: 2.389 MiB)
  0.210019 seconds (549 allocations: 2.390 MiB)
  0.138619 seconds (571 allocations: 2.543 MiB)
  0.117694 seconds (466 allocations: 2.386 MiB)
  0.124756 seconds (580 allocations: 2.468 MiB)
  0.144404 seconds (582 allocations: 2.468 MiB)
  0.142678 seconds (603 allocations: 2.545 MiB)
  0.854237 seconds (242.06 k allocations: 12.410 MiB)
  0.186455 seconds (6.41 k allocations: 1.206 MiB)
  0.279700 seconds (3.02 k allocations: 1.022 MiB)
  0.092018 seconds (6.62 k allocations: 1.176 MiB)
  0.117192 seconds (3.56 k allocations: 1.046 MiB)
  0.017763 seconds (7.53 k allocations: 421.900 KiB)
  0.017246 seconds (10.20 k allocations: 548.202 KiB)
  0.181706 seconds (33.96 k allocations: 2.834 MiB)
  0.142795 seconds (6.85 k allocations: 1.196 MiB)
  0.184140 seconds (7.54 k allocations: 1.227 MiB)
  0.257280 seconds (25.35 k allocations: 2.379 MiB)
  0.145066 seconds (27.80 k allocations: 2.568 MiB)
  1.130691 seconds (579.27 k allocations: 32.169 MiB, 2.91% gc time)
  0.268904 seconds (101.43 k allocations: 12.315 MiB)
  0.307407 seconds (94.28 k allocations: 12.098 MiB)
  0.123190 seconds (96.74 k allocations: 12.255 MiB, 21.20% gc time)
  0.104393 seconds (25.10 k allocations: 2.365 MiB)
  0.109250 seconds (31.48 k allocations: 2.765 MiB)
  0.118241 seconds (26.61 k allocations: 2.499 MiB)
  0.112989 seconds (29.06 k allocations: 2.697 MiB)
  0.107164 seconds (26.61 k allocations: 2.507 MiB)
  0.106466 seconds (34.44 k allocations: 2.940 MiB)
  0.148383 seconds (27.85 k allocations: 2.594 MiB)
  0.115191 seconds (30.26 k allocations: 2.754 MiB)
  0.026044 seconds (43.51 k allocations: 8.708 MiB)
  0.475317 seconds (93.07 k allocations: 15.229 MiB, 9.68% gc time)
  0.028569 seconds (43.55 k allocations: 8.705 MiB)
  0.452020 seconds (270.63 k allocations: 20.361 MiB)
  0.012357 seconds (40 allocations: 4.281 KiB)
  0.027537 seconds (363 allocations: 18.469 KiB)
  0.010629 seconds (84 allocations: 6.734 KiB)
  0.027844 seconds (71.37 k allocations: 15.908 MiB)
  0.029919 seconds (73.20 k allocations: 15.932 MiB)
  0.670941 seconds (143.42 k allocations: 27.565 MiB, 12.79% gc time)
  0.043853 seconds (92.60 k allocations: 22.194 MiB)
  0.019985 seconds (41.41 k allocations: 5.735 MiB)
  0.571448 seconds (407.74 k allocations: 23.615 MiB)
  0.019640 seconds (40.83 k allocations: 5.645 MiB)
  0.159284 seconds (60.50 k allocations: 7.878 MiB, 76.95% gc time)
  0.008751 seconds (40 allocations: 4.281 KiB)
  0.035222 seconds (12.26 k allocations: 646.787 KiB)
  0.011556 seconds (84 allocations: 6.734 KiB)
  0.026625 seconds (67.00 k allocations: 10.164 MiB)
  0.019760 seconds (68.62 k allocations: 10.081 MiB)
  0.776657 seconds (585.14 k allocations: 36.198 MiB)
  0.089778 seconds (90.59 k allocations: 13.604 MiB)
  0.032077 seconds (9 allocations: 3.823 MiB)
  0.027072 seconds (5 allocations: 3.815 MiB)
  0.023463 seconds (13 allocations: 5.730 MiB)
  0.019847 seconds (5 allocations: 3.815 MiB)
  0.017291 seconds (13 allocations: 7.638 MiB)
  0.022340 seconds (5 allocations: 3.815 MiB)
  0.164224 seconds (49.54 k allocations: 11.977 MiB, 11.62% gc time)
  0.021611 seconds (5 allocations: 3.815 MiB)
  0.142831 seconds (74.00 k allocations: 6.661 MiB)
  0.003961 seconds (6 allocations: 2.863 MiB)
  0.002138 seconds (6 allocations: 2.863 MiB)
  0.003057 seconds (6 allocations: 2.863 MiB)
  1.481891 seconds (701.65 k allocations: 33.734 MiB, 10.89% gc time)
  0.097157 seconds (105 allocations: 218.141 KiB)
  0.110845 seconds (447 allocations: 246.359 KiB)
  0.041797 seconds (162 allocations: 221.859 KiB)
  0.022365 seconds (164 allocations: 221.953 KiB)
Continuous Riccati equation (Float64): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:39
  Got exception outside of a @test
  MethodError: hvcat(::Tuple{Int64,Int64}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) is ambiguous. Candidates:
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1634
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:639
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1633
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] arec(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::Array{Float64,2}, ::Array{Float64,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:81
   [2] macro expansion at ./util.jl:162 [inlined]
   [3] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:65 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [5] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:40 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [7] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [8] include(::Module, ::String) at ./Base.jl:377
   [9] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [10] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [12] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  
  1.649178 seconds (30.95 k allocations: 1.920 MiB)
  0.032006 seconds (155 allocations: 255.609 KiB)
  0.023475 seconds (200 allocations: 265.609 KiB)
  3.250939 seconds (140.69 k allocations: 7.665 MiB)
  0.186019 seconds (146 allocations: 578.812 KiB)
  0.220776 seconds (5.42 k allocations: 821.359 KiB)
Generalized continuous control Riccati equation (Float64): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:126
  Got exception outside of a @test
  MethodError: hvcat(::Tuple{Int64,Int64}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::Array{Float64,2}) is ambiguous. Candidates:
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1634
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:639
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1633
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] garec(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:400
   [2] macro expansion at ./util.jl:162 [inlined]
   [3] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:128 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [5] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:128 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [7] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [8] include(::Module, ::String) at ./Base.jl:377
   [9] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [10] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [12] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  
Discrete control Riccati equation (Float64): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:151
  Got exception outside of a @test
  MethodError: vcat(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1351
    vcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:630
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1350
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] gared(::Array{Float64,2}, ::LinearAlgebra.UniformScaling{Bool}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:567
   [2] ared(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:675 (repeats 2 times)
   [3] macro expansion at ./util.jl:162 [inlined]
   [4] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:152 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [6] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:152 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [8] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [9] include(::Module, ::String) at ./Base.jl:377
   [10] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [11] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [13] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at none:6
   [16] eval(::Module, ::Any) at ./boot.jl:331
   [17] exec_options(::Base.JLOptions) at ./client.jl:264
   [18] _start() at ./client.jl:484
  
Generalized discrete control Riccati equation (Float64): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:179
  Got exception outside of a @test
  MethodError: vcat(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1351
    vcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:630
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1350
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] gared(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:567
   [2] macro expansion at ./util.jl:162 [inlined]
   [3] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:180 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [5] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:180 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [7] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [8] include(::Module, ::String) at ./Base.jl:377
   [9] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [10] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [12] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  
  1.481206 seconds (1.29 M allocations: 62.169 MiB, 1.68% gc time)
  0.007443 seconds (1.72 k allocations: 118.989 KiB)
  0.052465 seconds (26.28 k allocations: 1.402 MiB)
  0.018953 seconds (6.49 k allocations: 385.125 KiB)
  0.051204 seconds (6.49 k allocations: 385.125 KiB)
Continuous Riccati equation (Float32): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:39
  Got exception outside of a @test
  MethodError: hvcat(::Tuple{Int64,Int64}, ::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) is ambiguous. Candidates:
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1634
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:639
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1633
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] arec(::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:81
   [2] macro expansion at ./util.jl:162 [inlined]
   [3] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:65 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [5] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:40 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [7] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [8] include(::Module, ::String) at ./Base.jl:377
   [9] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [10] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [12] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  
Continuous control Riccati equation (Float32): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:91
  Got exception outside of a @test
  MethodError: hvcat(::Tuple{Int64,Int64}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}, ::Array{Float32,2}) is ambiguous. Candidates:
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1634
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:639
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1633
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] garec(::Array{Float32,2}, ::LinearAlgebra.UniformScaling{Bool}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:400
   [2] arec(::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:239
   [3] macro expansion at ./util.jl:162 [inlined]
   [4] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:94 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [6] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:94 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [8] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [9] include(::Module, ::String) at ./Base.jl:377
   [10] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [11] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [13] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at none:6
   [16] eval(::Module, ::Any) at ./boot.jl:331
   [17] exec_options(::Base.JLOptions) at ./client.jl:264
   [18] _start() at ./client.jl:484
  
Generalized continuous control Riccati equation (Float32): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:126
  Got exception outside of a @test
  MethodError: hvcat(::Tuple{Int64,Int64}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}, ::Array{Float32,2}) is ambiguous. Candidates:
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1634
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:639
    hvcat(rows::Tuple{Vararg{Int64,N} where N}, xs::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1633
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] garec(::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:400
   [2] macro expansion at ./util.jl:162 [inlined]
   [3] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:128 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [5] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:128 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [7] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [8] include(::Module, ::String) at ./Base.jl:377
   [9] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [10] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [12] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  
Discrete control Riccati equation (Float32): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:151
  Got exception outside of a @test
  MethodError: vcat(::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}, ::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}) is ambiguous. Candidates:
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1351
    vcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:630
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1350
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] gared(::Array{Float32,2}, ::LinearAlgebra.UniformScaling{Bool}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:567
   [2] ared(::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:675 (repeats 2 times)
   [3] macro expansion at ./util.jl:162 [inlined]
   [4] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:152 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [6] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:152 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [8] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [9] include(::Module, ::String) at ./Base.jl:377
   [10] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [11] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [13] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at none:6
   [16] eval(::Module, ::Any) at ./boot.jl:331
   [17] exec_options(::Base.JLOptions) at ./client.jl:264
   [18] _start() at ./client.jl:484
  
Generalized discrete control Riccati equation (Float32): Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:179
  Got exception outside of a @test
  MethodError: vcat(::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}, ::LinearAlgebra.Adjoint{Float32,Array{Float32,2}}) is ambiguous. Candidates:
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1351
    vcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:630
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1350
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] gared(::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/riccati.jl:567
   [2] macro expansion at ./util.jl:162 [inlined]
   [3] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:180 [inlined]
   [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [5] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:180 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [7] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_riccati.jl:10
   [8] include(::Module, ::String) at ./Base.jl:377
   [9] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [10] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:9 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [12] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [13] include(::String) at ./client.jl:439
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:264
   [17] _start() at ./client.jl:484
  
  0.000000 seconds
  0.187092 seconds (2.85 k allocations: 180.531 KiB)
  0.090027 seconds (382 allocations: 38.719 KiB)
  0.019937 seconds (187 allocations: 26.766 KiB)
  0.011854 seconds (84 allocations: 9.672 KiB)
  0.009466 seconds (38 allocations: 7.484 KiB)
  0.098758 seconds (1.88 k allocations: 309.656 KiB)
  0.029107 seconds (534 allocations: 146.156 KiB)
  0.085870 seconds (307 allocations: 11.029 MiB)
  0.088580 seconds (1.67 k allocations: 489.469 KiB)
  0.034116 seconds (474 allocations: 252.328 KiB)
  0.533645 seconds (5.40 k allocations: 22.322 MiB)
  0.095269 seconds (1.06 k allocations: 478.625 KiB)
  0.071561 seconds (1.16 k allocations: 270.516 KiB)
  0.085859 seconds (1.20 k allocations: 275.891 KiB)
  0.070911 seconds (1.07 k allocations: 456.031 KiB)
  0.079149 seconds (1.06 k allocations: 461.828 KiB)
  0.110193 seconds (1.77 k allocations: 502.062 KiB)
  0.275670 seconds (276.99 k allocations: 13.457 MiB)
  0.648134 seconds (451.03 k allocations: 21.943 MiB, 11.50% gc time)
  0.018552 seconds (3.47 k allocations: 179.581 KiB)
  0.026290 seconds (5.63 k allocations: 299.968 KiB)
  0.017189 seconds (2.46 k allocations: 137.315 KiB)
  0.211689 seconds (118.19 k allocations: 6.203 MiB)
  0.057220 seconds (22.07 k allocations: 1.158 MiB)
  0.264595 seconds (15.09 k allocations: 6.273 MiB)
  0.250198 seconds (120.92 k allocations: 6.739 MiB)
  0.063316 seconds (20.25 k allocations: 1.138 MiB)
  3.722436 seconds (2.82 M allocations: 146.915 MiB, 4.05% gc time)
  0.080556 seconds (50.56 k allocations: 2.679 MiB)
  0.108891 seconds (53.75 k allocations: 2.725 MiB)
  0.116191 seconds (53.77 k allocations: 2.728 MiB)
  0.079055 seconds (51.15 k allocations: 2.719 MiB)
  0.113426 seconds (50.63 k allocations: 2.703 MiB)
  0.152777 seconds (78.08 k allocations: 3.986 MiB)
  0.006663 seconds (30 allocations: 2.078 KiB)
  0.006901 seconds (78 allocations: 4.812 KiB)
  0.007754 seconds (78 allocations: 4.812 KiB)
  0.000126 seconds (5 allocations: 272 bytes)
  0.208619 seconds (2.31 k allocations: 154.062 KiB)
  0.014053 seconds (96 allocations: 34.312 KiB)
  0.011541 seconds (96 allocations: 34.312 KiB)
  0.009213 seconds (99 allocations: 34.469 KiB)
  0.005749 seconds (41 allocations: 2.672 KiB)
  0.008843 seconds (86 allocations: 5.203 KiB)
  0.007360 seconds (86 allocations: 5.203 KiB)
  0.007728 seconds (89 allocations: 5.359 KiB)
  0.006858 seconds (634 allocations: 39.663 KiB)
  0.009367 seconds (4.64 k allocations: 257.344 KiB)
  0.007207 seconds (4.64 k allocations: 257.344 KiB)
  0.000114 seconds (5 allocations: 272 bytes)
  0.294993 seconds (253.16 k allocations: 12.362 MiB)
  0.018708 seconds (4.68 k allocations: 274.861 KiB)
  0.012304 seconds (4.68 k allocations: 274.861 KiB)
  0.016172 seconds (5.32 k allocations: 314.261 KiB)
  0.005206 seconds (646 allocations: 40.446 KiB)
  0.013998 seconds (4.65 k allocations: 258.455 KiB)
  0.019290 seconds (4.65 k allocations: 258.424 KiB)
  0.017185 seconds (89 allocations: 5.359 KiB)
  0.000000 seconds
  0.000000 seconds
  0.026518 seconds (38 allocations: 29.062 KiB)
  0.023306 seconds (179 allocations: 29.406 KiB)
  0.024956 seconds (174 allocations: 29.156 KiB)
  0.014852 seconds (84 allocations: 9.672 KiB)
  0.010775 seconds (44 allocations: 7.922 KiB)
  1.026529 seconds (45.22 k allocations: 2.176 MiB)
  0.036999 seconds (6.10 k allocations: 871.359 KiB)
  0.032981 seconds (5.68 k allocations: 859.984 KiB)
  0.054775 seconds (6.18 k allocations: 882.281 KiB)
  0.601247 seconds (26.24 k allocations: 2.149 MiB)
  0.062980 seconds (6.14 k allocations: 1.415 MiB)
  0.029541 seconds (5.73 k allocations: 1.652 MiB)
  0.047434 seconds (6.02 k allocations: 1.669 MiB)
  0.322958 seconds (499 allocations: 16.532 MiB, 12.83% gc time)
  0.000000 seconds
  0.000001 seconds
  0.129637 seconds (3.49 k allocations: 214.550 KiB)
  0.231097 seconds (232.11 k allocations: 11.341 MiB)
  0.025951 seconds (3.11 k allocations: 168.391 KiB)
  0.015567 seconds (2.76 k allocations: 138.698 KiB)
  0.012485 seconds (3.02 k allocations: 164.821 KiB)
  1.029862 seconds (572.33 k allocations: 25.341 MiB)
  0.057135 seconds (34.73 k allocations: 2.094 MiB)
  0.050025 seconds (34.30 k allocations: 2.085 MiB)
  0.082111 seconds (50.08 k allocations: 2.860 MiB)
  0.999856 seconds (608.50 k allocations: 29.200 MiB, 5.57% gc time)
  0.114415 seconds (52.77 k allocations: 3.249 MiB)
  0.060640 seconds (33.39 k allocations: 2.472 MiB)
  0.098483 seconds (54.07 k allocations: 3.508 MiB)
  0.165670 seconds (22.41 k allocations: 9.350 MiB)
  0.016347 seconds (5.32 k allocations: 722.688 KiB)
  0.009791 seconds (5.58 k allocations: 730.047 KiB)
  0.010116 seconds (5.15 k allocations: 718.578 KiB)
  0.001699 seconds (5.29 k allocations: 718.656 KiB)
  0.843639 seconds (45.88 k allocations: 2.420 MiB)
  0.013572 seconds (8.06 k allocations: 1005.547 KiB)
  0.012210 seconds (8.44 k allocations: 1.167 MiB)
  0.011984 seconds (8.25 k allocations: 1001.203 KiB)
  0.007284 seconds (5.20 k allocations: 1.150 MiB)
  0.011564 seconds (5.25 k allocations: 1.414 MiB)
  0.012141 seconds (5.25 k allocations: 1.152 MiB)
  0.012097 seconds (5.25 k allocations: 1.414 MiB)
  0.007800 seconds (6.04 k allocations: 618.054 KiB)
  0.010877 seconds (10.26 k allocations: 840.125 KiB)
  0.010564 seconds (9.84 k allocations: 831.344 KiB)
  0.001501 seconds (5.42 k allocations: 578.656 KiB)
  1.507738 seconds (704.10 k allocations: 29.730 MiB, 3.33% gc time)
  0.016751 seconds (12.82 k allocations: 1023.221 KiB)
  0.017178 seconds (13.22 k allocations: 1.114 MiB)
  0.024846 seconds (13.65 k allocations: 1.038 MiB)
  0.008480 seconds (5.80 k allocations: 849.337 KiB)
  0.019048 seconds (9.81 k allocations: 1.180 MiB)
  0.017568 seconds (9.80 k allocations: 1.042 MiB)
  0.009146 seconds (5.25 k allocations: 955.562 KiB)
  0.032286 seconds (175 allocations: 34.859 KiB)
  0.104778 seconds (1.47 k allocations: 90.938 KiB)
  0.015169 seconds (49 allocations: 20.188 KiB)
  0.014532 seconds (170 allocations: 27.219 KiB)
  0.078196 seconds (1.30 k allocations: 74.391 KiB)
  1.397809 seconds (90.82 k allocations: 4.300 MiB)
  0.174455 seconds (22.53 k allocations: 2.038 MiB)
  1.030146 seconds (65.23 k allocations: 4.717 MiB)
  0.032193 seconds (10.71 k allocations: 2.572 MiB)
  0.059970 seconds (11.32 k allocations: 2.602 MiB)
  0.057251 seconds (11.32 k allocations: 2.595 MiB)
  0.004427 seconds (8.89 k allocations: 1.330 MiB)
  0.041974 seconds (11.02 k allocations: 2.522 MiB)
  0.067344 seconds (21.73 k allocations: 1.939 MiB)
  0.061537 seconds (20.88 k allocations: 1.948 MiB)
  0.069489 seconds (30.22 k allocations: 2.391 MiB)
  0.004102 seconds (8.46 k allocations: 1.331 MiB)
  0.004257 seconds (8.90 k allocations: 1.323 MiB)
  0.004005 seconds (9.33 k allocations: 1.322 MiB)
  0.081006 seconds (23.02 k allocations: 3.147 MiB)
  0.321507 seconds (298 allocations: 11.018 MiB)
  0.297349 seconds (298 allocations: 22.013 MiB, 14.41% gc time)
  0.042634 seconds (299 allocations: 11.025 MiB)
  0.185963 seconds (1.80 k allocations: 22.117 MiB)
  0.013248 seconds (2.62 k allocations: 137.134 KiB)
  0.145560 seconds (217.64 k allocations: 10.583 MiB)
  0.022256 seconds (1.57 k allocations: 90.836 KiB)
  0.025079 seconds (2.55 k allocations: 129.462 KiB)
  0.203059 seconds (250.50 k allocations: 12.382 MiB)
  1.604689 seconds (823.10 k allocations: 35.404 MiB, 1.34% gc time)
  0.156438 seconds (105.84 k allocations: 5.837 MiB)
  1.156143 seconds (609.15 k allocations: 27.823 MiB)
  0.030599 seconds (21.55 k allocations: 2.273 MiB)
  0.080336 seconds (77.29 k allocations: 5.056 MiB)
  0.125448 seconds (77.31 k allocations: 5.050 MiB, 43.15% gc time)
  0.003614 seconds (8.90 k allocations: 1.007 MiB)
  0.056650 seconds (46.87 k allocations: 3.556 MiB)
  0.084173 seconds (75.13 k allocations: 4.294 MiB)
  0.084431 seconds (74.28 k allocations: 4.282 MiB)
  0.089296 seconds (84.53 k allocations: 4.830 MiB)
  0.002843 seconds (8.49 k allocations: 1023.422 KiB)
  0.002763 seconds (8.93 k allocations: 1.005 MiB)
  0.002860 seconds (9.33 k allocations: 1.012 MiB)
  0.101580 seconds (80.30 k allocations: 5.141 MiB)
  0.106650 seconds (12.34 k allocations: 6.115 MiB)
  0.311050 seconds (12.34 k allocations: 11.613 MiB)
  0.053639 seconds (13.56 k allocations: 6.192 MiB)
  0.236158 seconds (129.88 k allocations: 17.459 MiB, 11.70% gc time)
  0.006190 seconds (8.88 k allocations: 1.234 MiB)
  0.008328 seconds (9.37 k allocations: 1.229 MiB)
  0.008023 seconds (8.51 k allocations: 1.237 MiB)
  0.001948 seconds (8.86 k allocations: 1.225 MiB)
  0.962066 seconds (76.12 k allocations: 4.103 MiB)
  0.016752 seconds (12.62 k allocations: 1.635 MiB)
  0.012680 seconds (13.38 k allocations: 2.071 MiB)
  0.017798 seconds (13.00 k allocations: 1.658 MiB)
  0.008835 seconds (10.37 k allocations: 2.297 MiB)
  0.012787 seconds (10.41 k allocations: 2.300 MiB)
  0.013565 seconds (10.41 k allocations: 2.824 MiB)
  0.013338 seconds (10.42 k allocations: 2.824 MiB)
  0.008449 seconds (9.57 k allocations: 1022.188 KiB)
  0.011058 seconds (15.74 k allocations: 1.318 MiB)
  0.011401 seconds (14.91 k allocations: 1.306 MiB)
  0.002110 seconds (8.88 k allocations: 975.828 KiB)
  1.498353 seconds (745.84 k allocations: 31.984 MiB, 2.21% gc time)
  0.017919 seconds (19.01 k allocations: 1.580 MiB)
  0.017396 seconds (19.79 k allocations: 1.810 MiB)
  0.017458 seconds (20.04 k allocations: 1.623 MiB)
  0.013301 seconds (11.05 k allocations: 1.624 MiB)
  0.016047 seconds (16.79 k allocations: 1.939 MiB)
  0.014645 seconds (16.78 k allocations: 2.215 MiB)
  0.012750 seconds (10.42 k allocations: 1.862 MiB)
  0.147710 seconds (2.61 k allocations: 267.625 KiB)
  0.002062 seconds (55 allocations: 127.688 KiB)
  0.144014 seconds (2.60 k allocations: 379.500 KiB)
  0.005573 seconds (53 allocations: 245.266 KiB)
  0.078168 seconds (1.33 k allocations: 313.922 KiB)
  0.084538 seconds (1.55 k allocations: 364.031 KiB)
  0.072604 seconds (1.71 k allocations: 215.062 KiB)
  0.233609 seconds (1.35 k allocations: 33.099 MiB)
  0.109003 seconds (38 allocations: 33.033 MiB, 22.30% gc time)
  0.435792 seconds (1.72 k allocations: 66.136 MiB, 1.26% gc time)
  0.173909 seconds (40 allocations: 66.055 MiB)
  0.264437 seconds (166.88 k allocations: 8.510 MiB, 11.46% gc time)
  0.001863 seconds (55 allocations: 67.688 KiB)
  0.242579 seconds (170.45 k allocations: 8.759 MiB)
  0.003952 seconds (53 allocations: 125.578 KiB)
  0.104668 seconds (55.66 k allocations: 2.961 MiB)
  0.120305 seconds (60.54 k allocations: 3.194 MiB)
  0.109451 seconds (75.03 k allocations: 3.781 MiB)
  0.198703 seconds (65.16 k allocations: 19.661 MiB)
  0.053644 seconds (38 allocations: 16.523 MiB)
  0.473711 seconds (186.15 k allocations: 42.430 MiB, 8.52% gc time)
  0.323252 seconds (38 allocations: 33.033 MiB)
  0.077866 seconds (2.15 k allocations: 243.125 KiB)
  0.074161 seconds (1.41 k allocations: 198.234 KiB)
  0.002005 seconds (62 allocations: 136.531 KiB)
  0.076447 seconds (1.81 k allocations: 232.234 KiB)
  0.086110 seconds (2.13 k allocations: 379.453 KiB)
  0.103831 seconds (22.05 k allocations: 1.336 MiB)
  0.008813 seconds (88 allocations: 264.688 KiB)
  0.074322 seconds (1.79 k allocations: 368.688 KiB)
  0.117597 seconds (13.84 k allocations: 999.751 KiB)
  0.350312 seconds (1.97 k allocations: 33.136 MiB, 6.70% gc time)
  0.085763 seconds (59.37 k allocations: 3.063 MiB)
  0.068468 seconds (54.55 k allocations: 2.866 MiB)
  0.001309 seconds (62 allocations: 72.203 KiB)
  0.064930 seconds (57.09 k allocations: 2.970 MiB)
  0.082838 seconds (59.79 k allocations: 3.148 MiB)
  0.095189 seconds (95.79 k allocations: 4.971 MiB)
  0.010242 seconds (3.33 k allocations: 329.215 KiB)
  0.070777 seconds (58.92 k allocations: 3.135 MiB)
  0.091671 seconds (88.32 k allocations: 4.613 MiB)
  0.198165 seconds (90.42 k allocations: 20.925 MiB)
  0.017961 seconds (82 allocations: 6.531 KiB)
  0.000489 seconds (17 allocations: 1.438 KiB)
  0.017623 seconds (82 allocations: 6.531 KiB)
  0.000566 seconds (17 allocations: 1.438 KiB)
  0.000410 seconds (14 allocations: 1.219 KiB)
  0.000359 seconds (14 allocations: 1.219 KiB)
  0.000508 seconds (14 allocations: 1.219 KiB)
  0.000795 seconds (14 allocations: 1.219 KiB)
  0.029921 seconds (380 allocations: 21.438 KiB)
  0.100298 seconds (1.54 k allocations: 163.391 KiB)
  0.111299 seconds (1.22 k allocations: 82.109 KiB)
  0.052990 seconds (930 allocations: 139.031 KiB)
  0.034485 seconds (351 allocations: 21.438 KiB)
  0.038922 seconds (578 allocations: 61.703 KiB)
  0.023839 seconds (1.01 k allocations: 61.033 KiB)
  0.000648 seconds (17 allocations: 1.438 KiB)
  0.024756 seconds (1.01 k allocations: 60.893 KiB)
  0.000663 seconds (17 allocations: 1.438 KiB)
  0.000551 seconds (14 allocations: 1.219 KiB)
  0.000502 seconds (14 allocations: 1.219 KiB)
  0.000622 seconds (14 allocations: 1.219 KiB)
  0.000569 seconds (14 allocations: 1.219 KiB)
  0.026858 seconds (13.82 k allocations: 712.957 KiB)
  0.103465 seconds (62.36 k allocations: 2.985 MiB)
  0.076085 seconds (60.45 k allocations: 2.920 MiB)
  0.048335 seconds (25.29 k allocations: 1.234 MiB)
  0.023136 seconds (12.81 k allocations: 648.330 KiB)
  0.029850 seconds (15.62 k allocations: 779.692 KiB)
  0.122708 seconds (20 allocations: 157.250 KiB)
  0.564551 seconds (20 allocations: 312.656 KiB)
  0.002209 seconds (16 allocations: 117.500 KiB)
  0.005863 seconds (16 allocations: 233.375 KiB)
  0.010067 seconds (21 allocations: 318.422 KiB)
  0.006978 seconds (22 allocations: 635.391 KiB)
  0.002149 seconds (17 allocations: 238.469 KiB)
  0.005513 seconds (18 allocations: 475.531 KiB)
  0.001128 seconds (19 allocations: 155.922 KiB)
  0.003508 seconds (19 allocations: 310.047 KiB)
  0.000970 seconds (20 allocations: 156.797 KiB)
  0.003727 seconds (23 allocations: 311.859 KiB)
  0.001859 seconds (20 allocations: 316.703 KiB)
  0.005964 seconds (22 allocations: 631.906 KiB)
  0.002100 seconds (21 allocations: 317.578 KiB)
  0.013871 seconds (23 allocations: 633.672 KiB)
  0.005762 seconds (34 allocations: 469.484 KiB)
  0.007707 seconds (36 allocations: 470.453 KiB)
  0.175401 seconds (34 allocations: 935.734 KiB)
  0.199713 seconds (36 allocations: 937.484 KiB)
  0.029295 seconds (38 allocations: 471.047 KiB)
  0.000004 seconds
  0.000000 seconds
  1.992591 seconds (45.77 k allocations: 2.046 MiB)
  0.130634 seconds (371 allocations: 150.031 KiB, 92.66% gc time)
  0.043095 seconds (507 allocations: 157.578 KiB)
  0.318194 seconds (4.51 k allocations: 350.125 KiB)
  0.002072 seconds (400 allocations: 157.266 KiB)
  3.375551 seconds (42.10 k allocations: 2.049 MiB)
  0.002754 seconds (462 allocations: 264.375 KiB)
  0.265991 seconds (4.92 k allocations: 488.938 KiB)
  0.002874 seconds (581 allocations: 288.328 KiB)
  0.026789 seconds (733 allocations: 296.359 KiB)
  0.249903 seconds (4.85 k allocations: 459.469 KiB)
  0.246971 seconds (4.55 k allocations: 467.953 KiB)
  0.310387 seconds (4.85 k allocations: 471.156 KiB)
  0.229141 seconds (4.55 k allocations: 480.531 KiB)
  2.848266 seconds (1.87 M allocations: 88.308 MiB, 4.65% gc time)
  0.000998 seconds (1.02 k allocations: 99.250 KiB)
  0.019736 seconds (9.22 k allocations: 593.132 KiB)
  0.262608 seconds (206.01 k allocations: 10.358 MiB)
  0.000832 seconds (1.20 k allocations: 105.453 KiB)
  2.578302 seconds (2.18 M allocations: 103.585 MiB, 1.28% gc time)
  0.001910 seconds (461 allocations: 149.859 KiB)
  0.287716 seconds (199.13 k allocations: 10.174 MiB)
  0.001727 seconds (581 allocations: 163.750 KiB)
  0.016192 seconds (10.69 k allocations: 774.628 KiB)
  0.155756 seconds (110.41 k allocations: 5.349 MiB)
  0.187085 seconds (103.03 k allocations: 5.040 MiB)
  0.174304 seconds (110.44 k allocations: 5.356 MiB)
  0.220961 seconds (103.03 k allocations: 5.046 MiB)
  0.000001 seconds
  0.000001 seconds
  1.068277 seconds (197.59 k allocations: 9.841 MiB)
  0.002900 seconds (6.17 k allocations: 923.703 KiB)
  0.153823 seconds (10.96 k allocations: 1.110 MiB)
  0.004209 seconds (6.88 k allocations: 952.234 KiB)
  0.841471 seconds (165.46 k allocations: 8.765 MiB)
  0.015352 seconds (3.23 k allocations: 1.202 MiB)
  0.155310 seconds (7.79 k allocations: 1.439 MiB)
  0.004413 seconds (3.41 k allocations: 1.249 MiB)
  0.182186 seconds (8.10 k allocations: 1.437 MiB)
  0.169365 seconds (7.93 k allocations: 1.465 MiB)
  0.235052 seconds (8.05 k allocations: 1.410 MiB)
  0.218545 seconds (7.87 k allocations: 1.444 MiB)
  0.408793 seconds (210.10 k allocations: 10.475 MiB)
  0.016795 seconds (6.18 k allocations: 940.797 KiB)
  0.409692 seconds (197.47 k allocations: 9.908 MiB, 6.04% gc time)
  0.018928 seconds (6.88 k allocations: 957.547 KiB)
  0.501671 seconds (215.24 k allocations: 11.136 MiB)
  0.004387 seconds (3.23 k allocations: 1.218 MiB)
  0.392792 seconds (202.40 k allocations: 10.605 MiB)
  0.014651 seconds (3.41 k allocations: 1.264 MiB)
  0.463156 seconds (219.18 k allocations: 11.336 MiB, 11.91% gc time)
  0.498117 seconds (208.68 k allocations: 10.913 MiB)
  0.456138 seconds (240.70 k allocations: 12.375 MiB)
  0.495522 seconds (202.38 k allocations: 10.603 MiB)
  1.135569 seconds (37.92 k allocations: 1.518 MiB)
  0.000538 seconds (355 allocations: 83.375 KiB)
  0.016575 seconds (634 allocations: 93.906 KiB)
  0.117793 seconds (2.62 k allocations: 195.438 KiB)
  0.000359 seconds (382 allocations: 83.906 KiB)
  0.799407 seconds (25.46 k allocations: 1.055 MiB)
  0.137689 seconds (3.09 k allocations: 268.047 KiB)
  0.038747 seconds (860 allocations: 156.609 KiB)
  0.009921 seconds (443 allocations: 65.688 KiB)
  0.018817 seconds (877 allocations: 80.891 KiB)
  0.000312 seconds (350 allocations: 61.016 KiB)
  0.010264 seconds (633 allocations: 105.734 KiB)
  0.000674 seconds (442 allocations: 90.609 KiB)
  1.098710 seconds (46.51 k allocations: 2.260 MiB)
  0.001749 seconds (6.14 k allocations: 852.172 KiB)
  0.183559 seconds (9.34 k allocations: 996.281 KiB)
  0.002066 seconds (6.85 k allocations: 874.000 KiB)
  0.882698 seconds (36.91 k allocations: 2.275 MiB)
  0.186235 seconds (6.15 k allocations: 1.232 MiB)
  0.027049 seconds (6.92 k allocations: 849.531 KiB)
  0.003131 seconds (6.14 k allocations: 829.812 KiB)
  0.012475 seconds (3.29 k allocations: 1.030 MiB)
  0.001768 seconds (3.38 k allocations: 1.045 MiB)
  2.253064 seconds (3.30 M allocations: 146.816 MiB, 7.84% gc time)
  0.000356 seconds (946 allocations: 65.188 KiB)
  0.037457 seconds (17.20 k allocations: 982.592 KiB)
  0.167438 seconds (77.57 k allocations: 3.814 MiB)
  0.000370 seconds (1.14 k allocations: 68.281 KiB)
  0.934301 seconds (625.45 k allocations: 29.829 MiB, 4.87% gc time)
  0.192082 seconds (81.73 k allocations: 4.043 MiB)
  0.022578 seconds (19.72 k allocations: 1.154 MiB)
  0.009763 seconds (1.19 k allocations: 60.734 KiB)
  0.029788 seconds (16.61 k allocations: 874.561 KiB)
  0.002433 seconds (963 allocations: 54.047 KiB)
  0.009114 seconds (633 allocations: 73.672 KiB)
  0.000630 seconds (442 allocations: 62.000 KiB)
  2.029725 seconds (1.31 M allocations: 58.949 MiB, 2.86% gc time)
  0.002146 seconds (10.06 k allocations: 769.719 KiB)
  0.129663 seconds (97.69 k allocations: 5.032 MiB)
  0.002059 seconds (10.84 k allocations: 770.594 KiB)
  1.981658 seconds (1.40 M allocations: 63.700 MiB, 2.28% gc time)
  0.177670 seconds (94.91 k allocations: 5.174 MiB)
  0.076501 seconds (10.91 k allocations: 760.500 KiB, 82.46% gc time)
  0.002829 seconds (10.05 k allocations: 758.234 KiB)
  0.009100 seconds (3.29 k allocations: 669.703 KiB)
  0.001262 seconds (3.38 k allocations: 677.609 KiB)
  0.000006 seconds
  0.000008 seconds
Positive discrete Lyapunov equations: Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:15
  Got exception outside of a @test
  MethodError: vcat(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1351
    vcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:630
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1350
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] plyapds!(::Array{Float64,2}, ::LinearAlgebra.UpperTriangular{Float64,Array{Float64,2}}; adj::Bool) at /root/.julia/packages/MatrixEquations/MBfWx/src/plyapunov.jl:1921
   [2] plyapd(::Array{Float64,2}, ::Array{Float64,2}) at /root/.julia/packages/MatrixEquations/MBfWx/src/plyapunov.jl:513
   [3] macro expansion at ./util.jl:162 [inlined]
   [4] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:42 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [6] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:17 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [8] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:9
   [9] include(::Module, ::String) at ./Base.jl:377
   [10] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [11] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:13 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [13] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at none:6
   [16] eval(::Module, ::Any) at ./boot.jl:331
   [17] exec_options(::Base.JLOptions) at ./client.jl:264
   [18] _start() at ./client.jl:484
  
  0.000002 seconds
  0.000001 seconds
Positive discrete generalized Lyapunov equations: Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:81
  Got exception outside of a @test
  MethodError: hcat(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::Array{Float64,2}) is ambiguous. Candidates:
    hcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1314
    hcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:601
    hcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1313
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] plyapds!(::Array{Float64,2}, ::Array{Float64,2}, ::LinearAlgebra.UpperTriangular{Float64,Array{Float64,2}}; adj::Bool) at /root/.julia/packages/MatrixEquations/MBfWx/src/plyapunov.jl:2172
   [2] plyapd(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}) at /root/.julia/packages/MatrixEquations/MBfWx/src/plyapunov.jl:716
   [3] macro expansion at ./util.jl:162 [inlined]
   [4] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:112 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [6] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:83 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [8] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:9
   [9] include(::Module, ::String) at ./Base.jl:377
   [10] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [11] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:13 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [13] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at none:6
   [16] eval(::Module, ::Any) at ./boot.jl:331
   [17] exec_options(::Base.JLOptions) at ./client.jl:264
   [18] _start() at ./client.jl:484
  
Positive discrete Lyapunov equations - Schur form: Error During Test at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:206
  Got exception outside of a @test
  MethodError: vcat(::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}, ::LinearAlgebra.Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}}...) where T in Base at abstractarray.jl:1351
    vcat(ops::Union{AbstractArray{T,2} where T, LinearOperators.AbstractLinearOperator}...) in LinearOperators at /root/.julia/packages/LinearOperators/La2Ey/src/LinearOperators.jl:630
    vcat(A::Union{AbstractArray{T,1}, AbstractArray{T,2}} where T...) in Base at abstractarray.jl:1350
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] plyapds!(::Array{Float64,2}, ::LinearAlgebra.UpperTriangular{Float64,Array{Float64,2}}; adj::Bool) at /root/.julia/packages/MatrixEquations/MBfWx/src/plyapunov.jl:1921
   [2] plyaps(::Array{Float64,2}, ::Array{Float64,2}; disc::Bool) at /root/.julia/packages/MatrixEquations/MBfWx/src/plyapunov.jl:897
   [3] macro expansion at ./util.jl:162 [inlined]
   [4] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:224 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [6] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:209 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [8] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/test_dplyap.jl:9
   [9] include(::Module, ::String) at ./Base.jl:377
   [10] include at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:1 [inlined]
   [11] macro expansion at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:13 [inlined]
   [12] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
   [13] top-level scope at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:6
   [14] include(::String) at ./client.jl:439
   [15] top-level scope at none:6
   [16] eval(::Module, ::Any) at ./boot.jl:331
   [17] exec_options(::Base.JLOptions) at ./client.jl:264
   [18] _start() at ./client.jl:484
  
  0.000376 seconds (53 allocations: 26.906 KiB)
  0.055534 seconds (33.59 k allocations: 1.716 MiB)
  0.033836 seconds (5.01 k allocations: 313.010 KiB)
  0.056331 seconds (12.88 k allocations: 687.073 KiB)
  0.078592 seconds (46.21 k allocations: 2.349 MiB)
  0.033272 seconds (12.70 k allocations: 699.524 KiB)
  0.010384 seconds (501 allocations: 61.047 KiB)
  0.025940 seconds (139 allocations: 11.422 KiB)
  0.039952 seconds (6.45 k allocations: 386.494 KiB)
  0.324534 seconds (393.76 k allocations: 19.493 MiB)
  0.019340 seconds (4.90 k allocations: 299.673 KiB)
  0.120520 seconds (41.71 k allocations: 2.001 MiB)
  0.000136 seconds (434 allocations: 48.094 KiB)
  0.142116 seconds (62.04 k allocations: 3.167 MiB)
  0.000149 seconds (478 allocations: 48.641 KiB)
  0.000649 seconds (59 allocations: 49.172 KiB)
  0.015516 seconds (26 allocations: 28.672 KiB)
  0.041127 seconds (12.69 k allocations: 695.993 KiB)
  0.056951 seconds (28 allocations: 28.703 KiB)
  0.050989 seconds (6.44 k allocations: 380.963 KiB)
  0.012513 seconds (134 allocations: 12.375 KiB)
  0.000378 seconds (54 allocations: 26.922 KiB)
  0.000056 seconds (12 allocations: 3.875 KiB)
  0.001026 seconds (2.38 k allocations: 269.891 KiB)
  0.063164 seconds (41.85 k allocations: 2.284 MiB)
  0.012882 seconds (1.45 k allocations: 155.469 KiB)
  0.002628 seconds (35 allocations: 39.922 KiB)
  0.124453 seconds (17.07 k allocations: 1015.288 KiB)
  0.126742 seconds (56.09 k allocations: 2.993 MiB)
  0.038700 seconds (15.91 k allocations: 1001.677 KiB)
  0.073078 seconds (1.44 k allocations: 157.578 KiB)
  0.004657 seconds (39 allocations: 40.844 KiB)
  0.022348 seconds (2.47 k allocations: 256.344 KiB)
  0.071308 seconds (17.09 k allocations: 1.103 MiB)
  0.018662 seconds (7.49 k allocations: 547.095 KiB)
  0.000256 seconds (1.42 k allocations: 138.984 KiB)
  0.000422 seconds (1.90 k allocations: 183.328 KiB)
  0.000328 seconds (1.41 k allocations: 140.188 KiB)
  0.006268 seconds (1.53 k allocations: 147.656 KiB)
  0.001033 seconds (1.67 k allocations: 268.469 KiB)
  0.073589 seconds (34 allocations: 36.922 KiB)
  0.083252 seconds (15.91 k allocations: 1020.005 KiB)
  0.084345 seconds (38 allocations: 38.734 KiB)
  0.000490 seconds (1.63 k allocations: 228.297 KiB)
  0.000038 seconds (7 allocations: 5.047 KiB)
  0.000930 seconds (2.65 k allocations: 274.906 KiB)
  0.000567 seconds (2.61 k allocations: 253.672 KiB)
  0.000277 seconds (849 allocations: 110.469 KiB)
  0.084809 seconds (30.94 k allocations: 1.650 MiB)
  0.111836 seconds (553 allocations: 69.234 KiB)
  0.000411 seconds (915 allocations: 110.797 KiB)
  0.031846 seconds (557 allocations: 68.812 KiB)
  0.006290 seconds (28 allocations: 29.938 KiB)
  0.000269 seconds (823 allocations: 96.203 KiB)
  0.000395 seconds (889 allocations: 96.531 KiB)
  0.000207 seconds (530 allocations: 56.828 KiB)
  0.000671 seconds (787 allocations: 83.297 KiB)
  0.001963 seconds (557 allocations: 68.812 KiB)
  0.000172 seconds (534 allocations: 56.406 KiB)
  0.000520 seconds (841 allocations: 144.500 KiB)
  0.001332 seconds (26 allocations: 28.672 KiB)
  0.000559 seconds (842 allocations: 157.172 KiB)
  0.004729 seconds (28 allocations: 28.703 KiB)
  0.000187 seconds (820 allocations: 118.625 KiB)
  0.004839 seconds (611 allocations: 42.659 KiB)
  0.000365 seconds (915 allocations: 110.797 KiB)
  0.000223 seconds (889 allocations: 96.531 KiB)
  0.000771 seconds (2.38 k allocations: 271.078 KiB)
  0.024320 seconds (1.41 k allocations: 152.078 KiB)
  0.000855 seconds (2.65 k allocations: 277.031 KiB)
  0.005825 seconds (1.47 k allocations: 154.531 KiB)
  0.000504 seconds (2.34 k allocations: 248.594 KiB)
  0.012757 seconds (3.50 k allocations: 346.047 KiB)
  0.000506 seconds (2.61 k allocations: 254.547 KiB)
  0.005830 seconds (1.41 k allocations: 152.078 KiB)
  0.004082 seconds (35 allocations: 39.922 KiB)
  0.006033 seconds (1.47 k allocations: 154.531 KiB)
  0.005868 seconds (1.47 k allocations: 154.531 KiB)
  0.003812 seconds (39 allocations: 40.844 KiB)
  0.001011 seconds (1.67 k allocations: 272.000 KiB)
  0.005612 seconds (34 allocations: 36.922 KiB)
  0.001125 seconds (1.67 k allocations: 297.328 KiB)
  0.004503 seconds (38 allocations: 38.734 KiB)
  0.000422 seconds (1.63 k allocations: 230.062 KiB)
  0.000038 seconds (7 allocations: 5.047 KiB)
  0.000869 seconds (2.65 k allocations: 277.031 KiB)
  0.000519 seconds (2.61 k allocations: 254.547 KiB)
  0.000264 seconds (52 allocations: 19.297 KiB)
  0.007932 seconds (138 allocations: 9.375 KiB)
  0.000119 seconds (17 allocations: 2.109 KiB)
  0.010094 seconds (6.45 k allocations: 379.791 KiB)
  0.027646 seconds (104 allocations: 8.312 KiB)
  0.000111 seconds (18 allocations: 2.125 KiB)
  0.000109 seconds (19 allocations: 2.141 KiB)
  0.018126 seconds (4.90 k allocations: 295.407 KiB)
  0.120817 seconds (41.72 k allocations: 1.990 MiB)
  0.000103 seconds (19 allocations: 2.141 KiB)
  0.000113 seconds (19 allocations: 2.141 KiB)
  0.000095 seconds (20 allocations: 2.156 KiB)
  0.006023 seconds (125 allocations: 8.391 KiB)
  0.000065 seconds (19 allocations: 2.141 KiB)
  0.000078 seconds (19 allocations: 2.141 KiB)
  0.000129 seconds (20 allocations: 2.156 KiB)
  0.000398 seconds (43 allocations: 32.531 KiB)
  0.000052 seconds (10 allocations: 2.984 KiB)
  0.028683 seconds (7.87 k allocations: 419.680 KiB)
  0.023622 seconds (7.68 k allocations: 420.303 KiB)
  0.000201 seconds (578 allocations: 66.078 KiB)
  0.000123 seconds (554 allocations: 56.500 KiB)
  0.000134 seconds (561 allocations: 56.797 KiB)
  0.000364 seconds (834 allocations: 82.844 KiB)
  0.000150 seconds (534 allocations: 56.469 KiB)
  0.000140 seconds (585 allocations: 56.797 KiB)
  0.000114 seconds (558 allocations: 56.469 KiB)
  0.000206 seconds (557 allocations: 56.453 KiB)
  0.000150 seconds (586 allocations: 56.812 KiB)
  0.000140 seconds (535 allocations: 56.484 KiB)
  0.000140 seconds (564 allocations: 56.844 KiB)
  0.000134 seconds (557 allocations: 56.453 KiB)
  0.000119 seconds (586 allocations: 56.812 KiB)
  0.000125 seconds (535 allocations: 56.484 KiB)
  0.000125 seconds (564 allocations: 56.844 KiB)
  0.000325 seconds (403 allocations: 67.562 KiB)
  0.000100 seconds (384 allocations: 51.375 KiB)
  0.006083 seconds (492 allocations: 63.500 KiB)
  0.000281 seconds (576 allocations: 65.766 KiB)
  0.000105 seconds (550 allocations: 56.156 KiB)
  0.000098 seconds (550 allocations: 56.156 KiB)
  0.000315 seconds (406 allocations: 73.234 KiB)
  0.000107 seconds (385 allocations: 57.016 KiB)
  0.000661 seconds (1.23 k allocations: 132.953 KiB)
  0.009853 seconds (1.32 k allocations: 125.375 KiB)
  0.000407 seconds (1.19 k allocations: 117.812 KiB)
  0.000592 seconds (1.20 k allocations: 118.422 KiB)
  0.000466 seconds (1.27 k allocations: 119.672 KiB)
  0.000696 seconds (1.15 k allocations: 117.484 KiB)
  0.000490 seconds (1.21 k allocations: 118.516 KiB)
  0.028607 seconds (15.86 k allocations: 984.830 KiB)
  0.004491 seconds (1.61 k allocations: 143.906 KiB)
  0.005689 seconds (1.70 k allocations: 162.250 KiB)
  0.003377 seconds (1.66 k allocations: 144.438 KiB)
  0.033042 seconds (6.09 k allocations: 417.907 KiB)
  0.000403 seconds (1.21 k allocations: 118.250 KiB)
  0.000340 seconds (1.15 k allocations: 117.281 KiB)
  0.000458 seconds (1.27 k allocations: 119.469 KiB)
  0.000548 seconds (1.21 k allocations: 118.500 KiB)
  0.005987 seconds (1.31 k allocations: 124.250 KiB)
  0.000320 seconds (1.15 k allocations: 117.281 KiB)
  0.000573 seconds (1.27 k allocations: 119.469 KiB)
  0.000481 seconds (1.21 k allocations: 118.500 KiB)
  0.142714 seconds (43.35 k allocations: 2.125 MiB)
  0.009103 seconds (1.70 k allocations: 162.266 KiB)
  0.009003 seconds (1.61 k allocations: 143.922 KiB)
  0.000582 seconds (1.65 k allocations: 161.797 KiB)
  0.000545 seconds (794 allocations: 126.734 KiB)
  0.000171 seconds (761 allocations: 100.000 KiB)
  0.007392 seconds (870 allocations: 119.812 KiB)
  0.042499 seconds (7.29 k allocations: 448.036 KiB)
  0.000283 seconds (1.19 k allocations: 117.641 KiB)
  0.000209 seconds (1.19 k allocations: 117.641 KiB)
  0.000217 seconds (1.19 k allocations: 117.641 KiB)
  0.026227 seconds (6.67 k allocations: 441.722 KiB)
  0.155224 seconds (42.45 k allocations: 2.093 MiB)
  0.000357 seconds (63 allocations: 23.188 KiB)
  0.134073 seconds (59.74 k allocations: 3.073 MiB)
  0.060862 seconds (30.59 k allocations: 1.481 MiB)
  0.176205 seconds (95.62 k allocations: 4.754 MiB)
  0.000504 seconds (61 allocations: 40.984 KiB)
  0.068712 seconds (30.41 k allocations: 1.486 MiB)
  0.011957 seconds (150 allocations: 13.188 KiB)
  0.020165 seconds (6.47 k allocations: 391.400 KiB)
  0.000135 seconds (24 allocations: 9.156 KiB)
  0.020458 seconds (4.91 k allocations: 300.376 KiB)
  0.145370 seconds (41.73 k allocations: 2.002 MiB)
  0.000140 seconds (24 allocations: 9.156 KiB)
  0.008191 seconds (134 allocations: 17.797 KiB)
Test Summary:                                                      | Pass  Error  Total
Test MatrixEquations.jl                                            |  850     12    862
  Testing continuous Lyapunov equation solvers                     |   97            97
  Testing discrete Lyapunov equation solvers                       |  100           100
  Matrix Equations Utilities                                       |   17            17
  Testing algebraic Riccati equation solvers                       |   16      9     25
    Continuous Riccati equation (Float64)                          |    5      1      6
    Continuous control Riccati equation (Float64)                  |    6             6
    Generalized continuous control Riccati equation (Float64)      |           1      1
    Discrete control Riccati equation (Float64)                    |           1      1
    Generalized discrete control Riccati equation (Float64)        |           1      1
    Continuous Riccati equation (Float32)                          |    5      1      6
    Continuous control Riccati equation (Float32)                  |           1      1
    Generalized continuous control Riccati equation (Float32)      |           1      1
    Discrete control Riccati equation (Float32)                    |           1      1
    Generalized discrete control Riccati equation (Float32)        |           1      1
  Testing Sylvester equation solvers                               |  257           257
  Testing Sylvester equation solvers based on Kronecker expansions |   21            21
  Testing positive continuous Lyapunov equation solvers            |  110           110
  Testing positive discrete Lyapunov equation solvers              |   12      3     15
    Positive discrete Lyapunov equations                           |    2      1      3
    Positive discrete generalized Lyapunov equations               |    2      1      3
    Positive discrete 2x2 Lyapunov equations                       |    8             8
    Positive discrete Lyapunov equations - Schur form              |           1      1
  Testing Lyapunov and Sylvester operators                         |  220           220
ERROR: LoadError: Some tests did not pass: 850 passed, 0 failed, 12 errored, 0 broken.
in expression starting at /root/.julia/packages/MatrixEquations/MBfWx/test/runtests.jl:5
ERROR: Package MatrixEquations errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1379
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:287
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:274
 [5] #test#56 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [7] #test#55 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [11] top-level scope at none:10
