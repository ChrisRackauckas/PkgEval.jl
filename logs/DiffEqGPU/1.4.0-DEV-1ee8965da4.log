 Resolving package versions...
 Installed RecipesBase ───────────────── v0.7.0
 Installed DiffEqDiffTools ───────────── v1.4.0
 Installed DiffEqGPU ─────────────────── v0.4.0
 Installed ArrayInterface ────────────── v1.2.1
 Installed RecursiveFactorization ────── v0.1.0
 Installed AbstractFFTs ──────────────── v0.4.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed GPUArrays ─────────────────── v2.0.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed CEnum ─────────────────────── v0.2.0
 Installed Parameters ────────────────── v0.12.0
 Installed DiffEqBase ────────────────── v6.6.0
 Installed NNlib ─────────────────────── v0.6.0
 Installed DataStructures ────────────── v0.17.6
 Installed LLVM ──────────────────────── v1.3.2
 Installed CUDAnative ────────────────── v2.5.5
 Installed FunctionWrappers ──────────── v1.0.0
 Installed MuladdMacro ───────────────── v0.2.1
 Installed Requires ──────────────────── v0.5.2
 Installed StaticArrays ──────────────── v0.12.1
 Installed RecursiveArrayTools ───────── v1.0.2
 Installed CUDAapi ───────────────────── v2.0.0
 Installed IterativeSolvers ──────────── v0.8.1
 Installed CuArrays ──────────────────── v1.4.7
 Installed Roots ─────────────────────── v0.8.3
 Installed Cassette ──────────────────── v0.2.6
 Installed DocStringExtensions ───────── v0.8.1
 Installed TableTraits ───────────────── v1.0.0
 Installed TimerOutputs ──────────────── v0.5.3
 Installed MacroTools ────────────────── v0.5.2
 Installed OrderedCollections ────────── v1.1.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed CUDAdrv ───────────────────── v4.0.4
 Installed Compat ────────────────────── v2.2.0
 Installed GPUifyLoops ───────────────── v0.2.9
  Updating `~/.julia/environments/v1.4/Project.toml`
  [071ae1c0] + DiffEqGPU v0.4.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [621f4979] + AbstractFFTs v0.4.1
  [79e6a3ab] + Adapt v1.0.0
  [4fba245c] + ArrayInterface v1.2.1
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v2.0.0
  [c5f51814] + CUDAdrv v4.0.4
  [be33ccc6] + CUDAnative v2.5.5
  [7057c7e9] + Cassette v0.2.6
  [34da2185] + Compat v2.2.0
  [3a865a2d] + CuArrays v1.4.7
  [864edb3b] + DataStructures v0.17.6
  [2b5f629d] + DiffEqBase v6.6.0
  [01453d9d] + DiffEqDiffTools v1.4.0
  [071ae1c0] + DiffEqGPU v0.4.0
  [ffbed154] + DocStringExtensions v0.8.1
  [069b7b12] + FunctionWrappers v1.0.0
  [0c68f7d7] + GPUArrays v2.0.0
  [ba82f77b] + GPUifyLoops v0.2.9
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [929cbde3] + LLVM v1.3.2
  [1914dd2f] + MacroTools v0.5.2
  [46d2c3a1] + MuladdMacro v0.2.1
  [872c559c] + NNlib v0.6.0
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [ae029012] + Requires v0.5.2
  [f2b01f46] + Roots v0.8.3
  [90137ffa] + StaticArrays v0.12.1
  [3783bdb8] + TableTraits v1.0.0
  [a759f4b9] + TimerOutputs v0.5.3
  [a2a6695c] + TreeViews v0.3.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing DiffEqGPU
 Resolving package versions...
 Installed DiffResults ────────── v0.0.4
 Installed BinDeps ────────────── v0.8.10
 Installed Reexport ───────────── v0.2.0
 Installed GenericSVD ─────────── v0.2.2
 Installed Inflate ────────────── v0.1.1
 Installed ExponentialUtilities ─ v1.5.1
 Installed ForwardDiff ────────── v0.10.6
 Installed VertexSafeGraphs ───── v0.1.0
 Installed DiffRules ──────────── v0.1.0
 Installed SimpleTraits ───────── v0.9.1
 Installed URIParser ──────────── v0.4.0
 Installed CommonSubexpressions ─ v0.2.0
 Installed NaNMath ────────────── v0.3.3
 Installed OrdinaryDiffEq ─────── v5.23.0
 Installed ArnoldiMethod ──────── v0.0.4
 Installed SparseDiffTools ────── v0.10.3
 Installed LightGraphs ────────── v1.3.0
 Installed BinaryProvider ─────── v0.5.8
 Installed SpecialFunctions ───── v0.8.0
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
Status `/tmp/jl_ArDUEw/Manifest.toml`
  [621f4979] AbstractFFTs v0.4.1
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v1.2.1
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v2.0.0
  [c5f51814] CUDAdrv v4.0.4
  [be33ccc6] CUDAnative v2.5.5
  [7057c7e9] Cassette v0.2.6
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [3a865a2d] CuArrays v1.4.7
  [864edb3b] DataStructures v0.17.6
  [2b5f629d] DiffEqBase v6.6.0
  [01453d9d] DiffEqDiffTools v1.4.0
  [071ae1c0] DiffEqGPU v0.4.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.5.1
  [f6369f11] ForwardDiff v0.10.6
  [069b7b12] FunctionWrappers v1.0.0
  [0c68f7d7] GPUArrays v2.0.0
  [ba82f77b] GPUifyLoops v0.2.9
  [01680d73] GenericSVD v0.2.2
  [d25df0c9] Inflate v0.1.1
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [929cbde3] LLVM v1.3.2
  [093fc24a] LightGraphs v1.3.0
  [1914dd2f] MacroTools v0.5.2
  [46d2c3a1] MuladdMacro v0.2.1
  [872c559c] NNlib v0.6.0
  [77ba4419] NaNMath v0.3.3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.23.0
  [d96e819e] Parameters v0.12.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v1.0.2
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [f2b01f46] Roots v0.8.3
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v0.10.3
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [3783bdb8] TableTraits v1.0.0
  [a759f4b9] TimerOutputs v0.5.3
  [a2a6695c] TreeViews v0.3.0
  [30578b45] URIParser v0.4.0
  [19fa3120] VertexSafeGraphs v0.1.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Method definition overdub(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:524 overwritten in module GPUifyLoops at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:524.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition recurse(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:537 overwritten in module GPUifyLoops at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:537.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition recurse(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:537 overwritten in module GPUifyLoops at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:537.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition overdub(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:524 overwritten in module GPUifyLoops at /root/.julia/packages/Cassette/YCOeN/src/overdub.jl:524.
  ** incremental compilation may be fatally broken for this module **

[ Info: CUDAdrv.jl failed to initialize, GPU functionality unavailable (set JULIA_CUDA_SILENT or JULIA_CUDA_VERBOSE to silence or expand this message)
ERROR: LoadError: could not load library "libcuda"
libcuda.so: cannot open shared object file: No such file or directory
Stacktrace:
 [1] dlopen(::String, ::UInt32; throw_error::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Libdl/src/Libdl.jl:109
 [2] dlopen at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Libdl/src/Libdl.jl:109 [inlined]
 [3] #dlopen#2 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Libdl/src/Libdl.jl:105 [inlined]
 [4] dlopen at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Libdl/src/Libdl.jl:105 [inlined] (repeats 2 times)
 [5] (::CUDAdrv.var"#603#lookup_fptr#132")() at /root/.julia/packages/CUDAapi/CCgJL/src/call.jl:29
 [6] macro expansion at /root/.julia/packages/CUDAapi/CCgJL/src/call.jl:37 [inlined]
 [7] macro expansion at /root/.julia/packages/CUDAdrv/3EzC1/src/error.jl:121 [inlined]
 [8] cuMemAlloc_v2(::Base.RefValue{CUDAdrv.CuPtr{Nothing}}, ::Int64) at /root/.julia/packages/CUDAdrv/3EzC1/src/libcuda.jl:312
 [9] alloc at /root/.julia/packages/CUDAdrv/3EzC1/src/memory.jl:64 [inlined]
 [10] macro expansion at /root/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
 [11] macro expansion at /root/.julia/packages/CuArrays/7z7MV/src/memory.jl:55 [inlined]
 [12] macro expansion at ./util.jl:221 [inlined]
 [13] actual_alloc(::Int64) at /root/.julia/packages/CuArrays/7z7MV/src/memory.jl:54
 [14] actual_alloc at /root/.julia/packages/CuArrays/7z7MV/src/memory/binned.jl:53 [inlined]
 [15] macro expansion at /root/.julia/packages/CuArrays/7z7MV/src/memory/binned.jl:194 [inlined]
 [16] macro expansion at /root/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
 [17] pool_alloc(::Int64, ::Int64) at /root/.julia/packages/CuArrays/7z7MV/src/memory/binned.jl:193
 [18] (::CuArrays.BinnedPool.var"#9#10"{Int64,Int64,Set{CuArrays.BinnedPool.Block},Array{CuArrays.BinnedPool.Block,1}})() at /root/.julia/packages/CuArrays/7z7MV/src/memory/binned.jl:296
 [19] lock(::CuArrays.BinnedPool.var"#9#10"{Int64,Int64,Set{CuArrays.BinnedPool.Block},Array{CuArrays.BinnedPool.Block,1}}, ::ReentrantLock) at ./lock.jl:161
 [20] alloc(::Int64) at /root/.julia/packages/CuArrays/7z7MV/src/memory/binned.jl:295
 [21] macro expansion at /root/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:214 [inlined]
 [22] macro expansion at /root/.julia/packages/CuArrays/7z7MV/src/memory.jl:121 [inlined]
 [23] macro expansion at ./util.jl:221 [inlined]
 [24] alloc at /root/.julia/packages/CuArrays/7z7MV/src/memory.jl:120 [inlined]
 [25] CuArray{Float32,2,P} where P(::UndefInitializer, ::Tuple{Int64,Int64}) at /root/.julia/packages/CuArrays/7z7MV/src/array.jl:90
 [26] CuArray at /root/.julia/packages/CuArrays/7z7MV/src/array.jl:174 [inlined]
 [27] CuArray(::Array{Float32,2}) at /root/.julia/packages/CuArrays/7z7MV/src/array.jl:188
 [28] batch_solve(::EnsembleProblem{ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},ODEFunction{true,typeof(lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},var"#5#6",DiffEqBase.var"#332#338",DiffEqBase.var"#334#340",Array{Any,1}}, ::Tsit5, ::EnsembleGPUArray, ::UnitRange{Int64}; kwargs::Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}}) at /root/.julia/packages/DiffEqGPU/sqGNF/src/DiffEqGPU.jl:174
 [29] (::DiffEqGPU.var"#4#5"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},EnsembleProblem{ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},ODEFunction{true,typeof(lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},var"#5#6",DiffEqBase.var"#332#338",DiffEqBase.var"#334#340",Array{Any,1}},Tsit5,EnsembleGPUArray})(::Int64) at /root/.julia/packages/DiffEqGPU/sqGNF/src/DiffEqGPU.jl:159
 [30] iterate(::Base.Generator{UnitRange{Int64},DiffEqGPU.var"#4#5"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},EnsembleProblem{ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},ODEFunction{true,typeof(lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},var"#5#6",DiffEqBase.var"#332#338",DiffEqBase.var"#334#340",Array{Any,1}},Tsit5,EnsembleGPUArray}}) at ./generator.jl:47
 [31] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},DiffEqGPU.var"#4#5"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},EnsembleProblem{ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},ODEFunction{true,typeof(lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},var"#5#6",DiffEqBase.var"#332#338",DiffEqBase.var"#334#340",Array{Any,1}},Tsit5,EnsembleGPUArray}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:649
 [32] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},DiffEqGPU.var"#4#5"{Int64,Int64,Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}},EnsembleProblem{ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},ODEFunction{true,typeof(lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},var"#5#6",DiffEqBase.var"#332#338",DiffEqBase.var"#334#340",Array{Any,1}},Tsit5,EnsembleGPUArray}}) at ./array.jl:578
 [33] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2073
 [34] macro expansion at /root/.julia/packages/DiffEqGPU/sqGNF/src/DiffEqGPU.jl:153 [inlined]
 [35] macro expansion at ./util.jl:221 [inlined]
 [36] __solve(::EnsembleProblem{ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},ODEFunction{true,typeof(lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},var"#5#6",DiffEqBase.var"#332#338",DiffEqBase.var"#334#340",Array{Any,1}}, ::Tsit5, ::EnsembleGPUArray; trajectories::Int64, batch_size::Int64, kwargs::Base.Iterators.Pairs{Symbol,Float32,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float32}}}) at /root/.julia/packages/DiffEqGPU/sqGNF/src/DiffEqGPU.jl:152
 [37] #solve#433 at /root/.julia/packages/DiffEqBase/IDJcQ/src/solve.jl:71 [inlined]
 [38] top-level scope at ./util.jl:162 [inlined]
 [39] top-level scope at /root/.julia/packages/DiffEqGPU/sqGNF/test/runtests.jl:0
 [40] include(::String) at ./client.jl:439
 [41] top-level scope at none:6
in expression starting at /root/.julia/packages/DiffEqGPU/sqGNF/test/runtests.jl:23
ERROR: Package DiffEqGPU errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1379
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:287
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:274
 [5] #test#56 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [7] #test#55 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
