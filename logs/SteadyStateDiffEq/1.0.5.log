 Resolving package versions...
 Installed SteadyStateDiffEq ─────────── v1.5.0
 Installed Requires ──────────────────── v0.5.2
 Installed NaNMath ───────────────────── v0.3.3
 Installed Inflate ───────────────────── v0.1.1
 Installed DiffEqDiffTools ───────────── v1.4.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed BinaryProvider ────────────── v0.5.8
 Installed RecipesBase ───────────────── v0.7.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed RecursiveArrayTools ───────── v1.0.2
 Installed DiffRules ─────────────────── v0.1.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed ArrayInterface ────────────── v1.2.1
 Installed MacroTools ────────────────── v0.5.2
 Installed DataStructures ────────────── v0.17.6
 Installed Adapt ─────────────────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed VertexSafeGraphs ──────────── v0.1.0
 Installed NLsolve ───────────────────── v4.2.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed BinDeps ───────────────────── v0.8.10
 Installed SpecialFunctions ──────────── v0.8.0
 Installed URIParser ─────────────────── v0.4.0
 Installed DiffEqCallbacks ───────────── v2.9.0
 Installed Distances ─────────────────── v0.8.2
 Installed Roots ─────────────────────── v0.8.3
 Installed DiffEqBase ────────────────── v6.6.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed IterativeSolvers ──────────── v0.8.1
 Installed StaticArrays ──────────────── v0.12.1
 Installed DiffResults ───────────────── v0.0.4
 Installed LineSearches ──────────────── v7.0.1
 Installed GenericSVD ────────────────── v0.2.2
 Installed SimpleTraits ──────────────── v0.9.1
 Installed OrderedCollections ────────── v1.1.0
 Installed NLSolversBase ─────────────── v7.5.0
 Installed TableTraits ───────────────── v1.0.0
 Installed OrdinaryDiffEq ────────────── v5.23.0
 Installed SparseDiffTools ───────────── v0.10.3
 Installed Parameters ────────────────── v0.12.0
 Installed MuladdMacro ───────────────── v0.2.1
 Installed Calculus ──────────────────── v0.5.1
 Installed ForwardDiff ───────────────── v0.10.6
 Installed ExponentialUtilities ──────── v1.5.1
 Installed LightGraphs ───────────────── v1.3.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed Compat ────────────────────── v2.2.0
  Updating `~/.julia/environments/v1.0/Project.toml`
  [9672c7b4] + SteadyStateDiffEq v1.5.0
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v1.2.1
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.6
  [2b5f629d] + DiffEqBase v6.6.0
  [459566f4] + DiffEqCallbacks v2.9.0
  [01453d9d] + DiffEqDiffTools v1.4.0
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [d4d017d3] + ExponentialUtilities v1.5.1
  [f6369f11] + ForwardDiff v0.10.6
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [d25df0c9] + Inflate v0.1.1
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.2
  [46d2c3a1] + MuladdMacro v0.2.1
  [d41bc354] + NLSolversBase v7.5.0
  [2774e3e8] + NLsolve v4.2.0
  [77ba4419] + NaNMath v0.3.3
  [bac558e1] + OrderedCollections v1.1.0
  [1dea7af3] + OrdinaryDiffEq v5.23.0
  [d96e819e] + Parameters v0.12.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [f2b01f46] + Roots v0.8.3
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v0.10.3
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.12.1
  [9672c7b4] + SteadyStateDiffEq v1.5.0
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [30578b45] + URIParser v0.4.0
  [19fa3120] + VertexSafeGraphs v0.1.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
   Testing SteadyStateDiffEq
 Resolving package versions...
 Installed Sundials ─ v3.8.0
  Building Sundials → `~/.julia/packages/Sundials/fVIue/deps/build.log`
    Status `/tmp/tmp5SX8Nh/Manifest.toml`
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v1.2.1
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [864edb3b] DataStructures v0.17.6
  [2b5f629d] DiffEqBase v6.6.0
  [459566f4] DiffEqCallbacks v2.9.0
  [01453d9d] DiffEqDiffTools v1.4.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.5.1
  [f6369f11] ForwardDiff v0.10.6
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [d25df0c9] Inflate v0.1.1
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.2
  [46d2c3a1] MuladdMacro v0.2.1
  [d41bc354] NLSolversBase v7.5.0
  [2774e3e8] NLsolve v4.2.0
  [77ba4419] NaNMath v0.3.3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.23.0
  [d96e819e] Parameters v0.12.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v1.0.2
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [f2b01f46] Roots v0.8.3
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v0.10.3
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [9672c7b4] SteadyStateDiffEq v1.5.0
  [c3572dad] Sundials v3.8.0
  [3783bdb8] TableTraits v1.0.0
  [a2a6695c] TreeViews v0.3.0
  [30578b45] URIParser v0.4.0
  [19fa3120] VertexSafeGraphs v0.1.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
ERROR: LoadError: UndefVarError: eachrow not defined
Stacktrace:
 [1] (::getfield(SparseDiffTools, Symbol("##11#12")){2})(::Int64) at /root/.julia/packages/SparseDiffTools/rmIp6/src/differentiation/compute_jacobian_ad.jl:62
 [2] iterate at ./generator.jl:47 [inlined]
 [3] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},getfield(SparseDiffTools, Symbol("##11#12")){2}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:632
 [4] collect_similar at ./array.jl:561 [inlined]
 [5] map at ./abstractarray.jl:1987 [inlined]
 [6] generate_chunked_partials(::Array{Float64,1}, ::UnitRange{Int64}, ::Val{2}) at /root/.julia/packages/SparseDiffTools/rmIp6/src/differentiation/compute_jacobian_ad.jl:62
 [7] #ForwardColorJacCache#10(::Nothing, ::UnitRange{Int64}, ::Nothing, ::Type, ::Function, ::Array{Float64,1}, ::Nothing) at /root/.julia/packages/SparseDiffTools/rmIp6/src/differentiation/compute_jacobian_ad.jl:33
 [8] Type at ./none:0 [inlined] (repeats 2 times)
 [9] build_jac_config at /root/.julia/packages/OrdinaryDiffEq/ROQW3/src/derivative_wrappers.jl:135 [inlined]
 [10] alg_cache(::Rodas5{0,true,DefaultLinSolve,DataType}, ::Array{Float64,1}, ::Array{Float64,1}, ::Type, ::Type, ::Type, ::Array{Float64,1}, ::Array{Float64,1}, ::ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing}, ::Float64, ::Float64, ::Float64, ::DiffEqBase.NullParameters, ::Bool, ::Val{true}) at /root/.julia/packages/OrdinaryDiffEq/ROQW3/src/caches/rosenbrock_caches.jl:546
 [11] #__init#329(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Nothing, ::Bool, ::Bool, ::Bool, ::Bool, ::DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##48#50")){Float64,Float64,typeof(DiffEqCallbacks.allDerivPass)},getfield(DiffEqCallbacks, Symbol("##49#51")),typeof(DiffEqBase.INITIALIZE_DEFAULT)}, ::Bool, ::Bool, ::Float64, ::Float64, ::Float64, ::Bool, ::Bool, ::Rational{Int64}, ::Nothing, ::Nothing, ::Rational{Int64}, ::Int64, ::Int64, ::Rational{Int64}, ::Rational{Int64}, ::Bool, ::Int64, ::Nothing, ::Nothing, ::Int64, ::typeof(DiffEqBase.ODE_DEFAULT_NORM), ::typeof(LinearAlgebra.opnorm), ::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), ::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::String, ::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), ::Nothing, ::Bool, ::Bool, ::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(DiffEqBase.__init), ::ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Rodas5{0,true,DefaultLinSolve,DataType}, ::Array{Array{Float64,1},1}, ::Array{Float64,1}, ::Array{Any,1}, ::Type{Val{true}}) at /root/.julia/packages/OrdinaryDiffEq/ROQW3/src/solve.jl:255
 [12] (::getfield(DiffEqBase, Symbol("#kw##__init")))(::NamedTuple{(:callback, :save_everystep, :save_start),Tuple{DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##48#50")){Float64,Float64,typeof(DiffEqCallbacks.allDerivPass)},getfield(DiffEqCallbacks, Symbol("##49#51")),typeof(DiffEqBase.INITIALIZE_DEFAULT)},Bool,Bool}}, ::typeof(DiffEqBase.__init), ::ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Rodas5{0,true,DefaultLinSolve,DataType}, ::Array{Array{Float64,1},1}, ::Array{Float64,1}, ::Array{Any,1}, ::Type{Val{true}}) at ./none:0 (repeats 4 times)
 [13] #__solve#328(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:callback, :save_everystep, :save_start),Tuple{DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##48#50")){Float64,Float64,typeof(DiffEqCallbacks.allDerivPass)},getfield(DiffEqCallbacks, Symbol("##49#51")),typeof(DiffEqBase.INITIALIZE_DEFAULT)},Bool,Bool}}}, ::Function, ::ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Rodas5{0,true,DefaultLinSolve,DataType}) at /root/.julia/packages/OrdinaryDiffEq/ROQW3/src/solve.jl:4
 [14] #solve_call#433(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:callback, :save_everystep, :save_start),Tuple{DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##48#50")){Float64,Float64,typeof(DiffEqCallbacks.allDerivPass)},getfield(DiffEqCallbacks, Symbol("##49#51")),typeof(DiffEqBase.INITIALIZE_DEFAULT)},Bool,Bool}}}, ::Function, ::ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Rodas5{0,true,DefaultLinSolve,DataType}) at ./none:0
 [15] #__solve#16(::Bool, ::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::SteadyStateProblem{Array{Float64,1},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}}, ::DynamicSS{Rodas5{0,true,DefaultLinSolve,DataType},Float64,Float64,Float64}) at ./none:0
 [16] __solve at /root/.julia/packages/SteadyStateDiffEq/q0UMK/src/solve.jl:47 [inlined]
 [17] #solve_call#433(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::SteadyStateProblem{Array{Float64,1},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}}, ::DynamicSS{Rodas5{0,true,DefaultLinSolve,DataType},Float64,Float64,Float64}) at /root/.julia/packages/DiffEqBase/IDJcQ/src/solve.jl:38
 [18] solve_call at /root/.julia/packages/DiffEqBase/IDJcQ/src/solve.jl:37 [inlined]
 [19] #solve#434 at /root/.julia/packages/DiffEqBase/IDJcQ/src/solve.jl:57 [inlined]
 [20] solve(::SteadyStateProblem{Array{Float64,1},true,DiffEqBase.NullParameters,ODEFunction{true,typeof(f),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}}, ::DynamicSS{Rodas5{0,true,DefaultLinSolve,DataType},Float64,Float64,Float64}) at /root/.julia/packages/DiffEqBase/IDJcQ/src/solve.jl:45
 [21] top-level scope at none:0
 [22] include at ./boot.jl:317 [inlined]
 [23] include_relative(::Module, ::String) at ./loading.jl:1044
 [24] include(::Module, ::String) at ./sysimg.jl:29
 [25] include(::String) at ./client.jl:392
 [26] top-level scope at none:0
in expression starting at /root/.julia/packages/SteadyStateDiffEq/q0UMK/test/runtests.jl:34
ERROR: Package SteadyStateDiffEq errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/Types.jl:120
 [2] #test#65(::Bool, ::Function, ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/Operations.jl:1357
 [3] #test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:0 [inlined]
 [4] #test#44(::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:278
 [5] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:263 [inlined]
 [6] #test#43 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:260 [inlined]
 [7] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:260 [inlined]
 [8] #test#42 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:259 [inlined]
 [9] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:259 [inlined]
 [10] #test#41 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:258 [inlined]
 [11] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:258
 [12] top-level scope at none:0
