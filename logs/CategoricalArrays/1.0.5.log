 Resolving package versions...
 Installed Reexport ────────── v0.2.0
 Installed Missings ────────── v0.4.3
 Installed DataAPI ─────────── v1.1.0
 Installed Parsers ─────────── v0.3.10
 Installed Compat ──────────── v3.0.0
 Installed JSON ────────────── v0.21.0
 Installed CategoricalArrays ─ v0.7.3
  Updating `~/.julia/environments/v1.0/Project.toml`
  [324d7699] + CategoricalArrays v0.7.3
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.3
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [69de0a69] + Parsers v0.3.10
  [189a3867] + Reexport v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing CategoricalArrays
 Resolving package versions...
    Status `/tmp/tmpD7YXWI/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.3
  [34da2185] Compat v3.0.0
  [9a962f9c] DataAPI v1.1.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [69de0a69] Parsers v0.3.10
  [189a3867] Reexport v0.2.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/runtests.jl:11
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/src/extras.jl:1
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/01_typedef.jl:3
┌ Warning: `eltype(x::CategoricalString)` is deprecated, use `eltype(String(x))` instead.
│   caller = macro expansion at 01_typedef.jl:56 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/01_typedef.jl:56
Test Summary: | Pass  Total
01_typedef.jl |   99     99
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/02_buildorder.jl:3
Test Summary:    | Pass  Total
02_buildorder.jl |    6      6
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/03_buildfields.jl:3
Test Summary:     | Pass  Total
03_buildfields.jl |    6      6
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/04_constructors.jl:3
Test Summary:      | Pass  Total
04_constructors.jl |  121    121
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/05_convert.jl:3
┌ Warning: `eltype(x::CategoricalString)` is deprecated, use `eltype(String(x))` instead.
│   caller = macro expansion at 05_convert.jl:76 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/05_convert.jl:76
Test Summary: | Pass  Total
05_convert.jl |  124    124
Test Summary: | Pass  Total
05_copy.jl    |   14     14
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/06_show.jl:3
WARNING: Compat.Dates is deprecated, use Dates instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/06_show.jl:4
Test Summary: | Pass  Total
06_show.jl    |   52     52
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/06_length.jl:3
Test Summary: | Pass  Total
06_length.jl  |    2      2
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/07_levels.jl:3
Test Summary: | Pass  Total
07_levels.jl  |  362    362
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/08_equality.jl:3
Test Summary:  | Pass  Total
08_equality.jl |  110    110
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:3
WARNING: Compat.Unicode is deprecated, use Unicode instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:4
┌ Warning: `isempty(x::CategoricalString)` is deprecated, use `isempty(String(x))` instead.
│   caller = macro expansion at 08_string.jl:32 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:32
┌ Warning: `isempty(x::CategoricalString)` is deprecated, use `isempty(String(x))` instead.
│   caller = macro expansion at 08_string.jl:33 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:33
┌ Warning: `eltype(x::CategoricalString)` is deprecated, use `eltype(String(x))` instead.
│   caller = macro expansion at 08_string.jl:35 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:35
┌ Warning: `eltype(x::CategoricalString)` is deprecated, use `eltype(String(x))` instead.
│   caller = macro expansion at 08_string.jl:36 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:36
┌ Warning: `length(x::CategoricalString)` is deprecated, use `length(String(x))` instead.
│   caller = macro expansion at 08_string.jl:38 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:38
┌ Warning: `length(x::CategoricalString)` is deprecated, use `length(String(x))` instead.
│   caller = macro expansion at 08_string.jl:39 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:39
┌ Warning: `sizeof(x::CategoricalString)` is deprecated, use `sizeof(String(x))` instead.
│   caller = macro expansion at 08_string.jl:41 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:41
┌ Warning: `sizeof(x::CategoricalString)` is deprecated, use `sizeof(String(x))` instead.
│   caller = macro expansion at 08_string.jl:42 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:42
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:44 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:44
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:45 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:45
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:47 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:47
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:48 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:48
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = macro expansion at 08_string.jl:50 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:50
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = macro expansion at 08_string.jl:51 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:51
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = macro expansion at 08_string.jl:53 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:53
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = macro expansion at 08_string.jl:54 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:54
┌ Warning: `collect(x::CategoricalString)` is deprecated, use `collect(String(x))` instead.
│   caller = macro expansion at 08_string.jl:56 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:56
┌ Warning: `collect(x::CategoricalString)` is deprecated, use `collect(String(x))` instead.
│   caller = macro expansion at 08_string.jl:57 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:57
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:59 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:59
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:60 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:60
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:61 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:61
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:62 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:62
┌ Warning: `codeunit(x::CategoricalString, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:64 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:64
┌ Warning: `codeunit(x::CategoricalString, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:65 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:65
┌ Warning: `codeunit(x::CategoricalString, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:66 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:66
┌ Warning: `codeunit(x::CategoricalString, i::Integer)` is deprecated, use `codeunit(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:67 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:67
┌ Warning: `ascii(x::CategoricalString)` is deprecated, use `ascii(String(x))` instead.
│   caller = macro expansion at 08_string.jl:69 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:69
┌ Warning: `ascii(x::CategoricalString)` is deprecated, use `ascii(String(x))` instead.
│   caller = macro expansion at 08_string.jl:70 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:70
┌ Warning: `normalize(x::CategoricalString, s::Symbol)` is deprecated, use `normalize(String(x), s)` instead.
│   caller = macro expansion at 08_string.jl:74 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:74
┌ Warning: `graphemes(x::CategoricalString)` is deprecated, use `graphemes(String(x))` instead.
│   caller = macro expansion at 08_string.jl:76 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:76
┌ Warning: `graphemes(x::CategoricalString)` is deprecated, use `graphemes(String(x))` instead.
│   caller = macro expansion at 08_string.jl:77 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:77
┌ Warning: `isvalid(x::CategoricalString)` is deprecated, use `isvalid(String(x))` instead.
│   caller = macro expansion at 08_string.jl:79 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:79
┌ Warning: `isvalid(x::CategoricalString)` is deprecated, use `isvalid(String(x))` instead.
│   caller = macro expansion at 08_string.jl:80 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:80
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:81 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:81
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:82 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:82
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:83 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:83
┌ Warning: `length(x::CategoricalString, i::Int, j::Int)` is deprecated, use `length(String(x), i, j)` instead.
│   caller = macro expansion at 08_string.jl:85 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:85
┌ Warning: `length(x::CategoricalString, i::Int, j::Int)` is deprecated, use `length(String(x), i, j)` instead.
│   caller = macro expansion at 08_string.jl:86 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:86
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = nextind(::CategoricalArrays.CategoricalString{UInt32}, ::Int64, ::Int64) at basic.jl:519
└ @ Base ./strings/basic.jl:519
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = nextind(::CategoricalArrays.CategoricalString{UInt32}, ::Int64, ::Int64) at basic.jl:523
└ @ Base ./strings/basic.jl:523
┌ Warning: `repeat(x::CategoricalString, i::Integer)` is deprecated, use `repeat(String(x), i)` instead.
│   caller = ^ at basic.jl:674 [inlined]
└ @ Core ./strings/basic.jl:674
┌ Warning: `repeat(x::CategoricalString, i::Integer)` is deprecated, use `repeat(String(x), i)` instead.
│   caller = ^ at basic.jl:674 [inlined]
└ @ Core ./strings/basic.jl:674
┌ Warning: `repeat(x::CategoricalString, i::Integer)` is deprecated, use `repeat(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:112 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:112
┌ Warning: `repeat(x::CategoricalString, i::Integer)` is deprecated, use `repeat(String(x), i)` instead.
│   caller = macro expansion at 08_string.jl:113 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:113
┌ Warning: `eachmatch(r::Regex, x::CategoricalString; overlap=false)` is deprecated, use `eachmatch(r, String(x), overlap=overlap)` instead.
│   caller = macro expansion at 08_string.jl:115 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:115
┌ Warning: `eachmatch(r::Regex, x::CategoricalString; overlap=false)` is deprecated, use `eachmatch(r, String(x), overlap=overlap)` instead.
│   caller = macro expansion at 08_string.jl:116 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:116
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = match(::Regex, ::CategoricalArrays.CategoricalString{UInt32}) at deprecated.jl:54
└ @ CategoricalArrays ./deprecated.jl:54
┌ Warning: `match(r::Regex, s::CategoricalString, idx::Integer=firstindex(s), add_opts::UInt32=UInt32(0); kwargs...)` is deprecated, use `match(r, String(s), idx, add_opts; kwargs...)` instead.
│   caller = match(::Regex, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at deprecated.jl:54
└ @ CategoricalArrays ./deprecated.jl:54
┌ Warning: `match(r::Regex, s::CategoricalString, idx::Integer=firstindex(s), add_opts::UInt32=UInt32(0); kwargs...)` is deprecated, use `match(r, String(s), idx, add_opts; kwargs...)` instead.
│   caller = macro expansion at 08_string.jl:121 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:121
┌ Warning: `eachmatch(r::Regex, x::CategoricalString; overlap=false)` is deprecated, use `eachmatch(r, String(x), overlap=overlap)` instead.
│   caller = macro expansion at 08_string.jl:123 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:123
┌ Warning: `eachmatch(r::Regex, x::CategoricalString; overlap=false)` is deprecated, use `eachmatch(r, String(x), overlap=overlap)` instead.
│   caller = macro expansion at 08_string.jl:124 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:124
┌ Warning: `eachmatch(r::Regex, x::CategoricalString; overlap=false)` is deprecated, use `eachmatch(r, String(x), overlap=overlap)` instead.
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: `lpad(x::CategoricalString, n::Integer, c::Union{AbstractChar, AbstractString}=' ')` is deprecated, use `lpad(String(x), n)` instead.
│   caller = lpad(::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at deprecated.jl:54
└ @ CategoricalArrays ./deprecated.jl:54
┌ Warning: `rpad(x::CategoricalString, n::Integer, c::Union{AbstractChar, AbstractString}=' ')` is deprecated, use `rpad(String(x), n)` instead.
│   caller = rpad(::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at deprecated.jl:54
└ @ CategoricalArrays ./deprecated.jl:54
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = findfirst(::String, ::CategoricalArrays.CategoricalString{UInt32}) at search.jl:104
└ @ Base ./strings/search.jl:104
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = _searchindex(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64) at search.jl:126
└ @ Base ./strings/search.jl:126
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = _searchindex(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64) at search.jl:126
└ @ Base ./strings/search.jl:126
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = findnext(::Base.Fix2{typeof(isequal),Char}, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at search.jl:109
└ @ Base ./strings/search.jl:109
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = findnext(::Base.Fix2{typeof(isequal),Char}, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at search.jl:111
└ @ Base ./strings/search.jl:111
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = Type at substring.jl:39 [inlined]
└ @ Core ./strings/substring.jl:39
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = checkbounds at basic.jl:187 [inlined]
└ @ Core ./strings/basic.jl:187
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = SubString{CategoricalArrays.CategoricalString{UInt32}}(::CategoricalArrays.CategoricalString{UInt32}, ::Int64, ::Int64) at substring.jl:31
└ @ Base ./strings/substring.jl:31
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = SubString{CategoricalArrays.CategoricalString{UInt32}}(::CategoricalArrays.CategoricalString{UInt32}, ::Int64, ::Int64) at substring.jl:32
└ @ Base ./strings/substring.jl:32
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = SubString{CategoricalArrays.CategoricalString{UInt32}}(::CategoricalArrays.CategoricalString{UInt32}, ::Int64, ::Int64) at substring.jl:34
└ @ Base ./strings/substring.jl:34
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = isvalid at substring.jl:82 [inlined]
└ @ Core ./strings/substring.jl:82
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = findnext(::Base.Fix2{typeof(isequal),Char}, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at substring.jl:68
└ @ Base ./strings/substring.jl:68
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = iterate at substring.jl:68 [inlined]
└ @ Core ./strings/substring.jl:68
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = _searchindex(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64) at search.jl:133
└ @ Base ./strings/search.jl:133
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = Type at substring.jl:39 [inlined]
└ @ Core ./strings/substring.jl:39
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = findnext(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at search.jl:109
└ @ Base ./strings/search.jl:109
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = findnext(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at search.jl:111
└ @ Base ./strings/search.jl:111
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = Type at substring.jl:39 [inlined]
└ @ Core ./strings/substring.jl:39
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = findnext(::Base.Fix2{typeof(==),Char}, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at substring.jl:68
└ @ Base ./strings/substring.jl:68
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = iterate at substring.jl:68 [inlined]
└ @ Core ./strings/substring.jl:68
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = findlast(::String, ::CategoricalArrays.CategoricalString{UInt32}) at search.jl:273
└ @ Base ./strings/search.jl:273
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = findprev(::Function, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at search.jl:281
└ @ Base ./strings/search.jl:281
┌ Warning: `reverse(x::CategoricalString)` is deprecated, use `reverse(String(x))` instead.
│   caller = findprev(::Function, ::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at search.jl:287
└ @ Base ./strings/search.jl:287
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = reverseind at basic.jl:644 [inlined]
└ @ Core ./strings/basic.jl:644
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = thisind(::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at basic.jl:399
└ @ Base ./strings/basic.jl:399
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = thisind(::CategoricalArrays.CategoricalString{UInt32}, ::Int64) at basic.jl:402
└ @ Base ./strings/basic.jl:402
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = _rsearchindex(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64) at search.jl:303
└ @ Base ./strings/search.jl:303
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = getindex at substring.jl:76 [inlined]
└ @ Core ./strings/substring.jl:76
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = _rsearchindex(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64) at search.jl:310
└ @ Base ./strings/search.jl:310
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = last at basic.jl:537 [inlined]
└ @ Core ./strings/basic.jl:537
┌ Warning: `occursin(x::AbstractString, y::CategoricalString)` is deprecated, use `occursin(x, String(y))` instead.
│   caller = macro expansion at 08_string.jl:145 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:145
┌ Warning: `occursin(x::AbstractString, y::CategoricalString)` is deprecated, use `occursin(x, String(y))` instead.
│   caller = macro expansion at 08_string.jl:146 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:146
┌ Warning: `occursin(x::AbstractString, y::CategoricalString)` is deprecated, use `occursin(x, String(y))` instead.
│   caller = macro expansion at 08_string.jl:147 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:147
┌ Warning: `occursin(x::Regex, y::CategoricalString)` is deprecated, use `occursin(x, String(y))` instead.
│   caller = macro expansion at 08_string.jl:149 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:149
┌ Warning: `occursin(x::Regex, y::CategoricalString)` is deprecated, use `occursin(x, String(y))` instead.
│   caller = macro expansion at 08_string.jl:150 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:150
┌ Warning: `startswith(x::CategoricalString, y::AbstractString)` is deprecated, use `startswith(String(x), y)` instead.
│   caller = macro expansion at 08_string.jl:152 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:152
┌ Warning: `startswith(x::CategoricalString, y::AbstractString)` is deprecated, use `startswith(String(x), y)` instead.
│   caller = macro expansion at 08_string.jl:153 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:153
┌ Warning: `startswith(x::CategoricalString, y::AbstractString)` is deprecated, use `startswith(String(x), y)` instead.
│   caller = macro expansion at 08_string.jl:154 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:154
┌ Warning: `endswith(x::CategoricalString, y::AbstractString)` is deprecated, use `endswith(String(x), y)` instead.
│   caller = macro expansion at 08_string.jl:156 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:156
┌ Warning: `endswith(x::CategoricalString, y::AbstractString)` is deprecated, use `endswith(String(x), y)` instead.
│   caller = macro expansion at 08_string.jl:157 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:157
┌ Warning: `endswith(x::CategoricalString, y::AbstractString)` is deprecated, use `endswith(String(x), y)` instead.
│   caller = macro expansion at 08_string.jl:158 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:158
┌ Warning: `reverse(x::CategoricalString)` is deprecated, use `reverse(String(x))` instead.
│   caller = macro expansion at 08_string.jl:160 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:160
┌ Warning: `reverse(x::CategoricalString)` is deprecated, use `reverse(String(x))` instead.
│   caller = macro expansion at 08_string.jl:161 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:161
┌ Warning: `split(x::CategoricalString; kwargs...)` is deprecated, use `split(String(x); kwargs...)` instead.
│   caller = macro expansion at 08_string.jl:167 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:167
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = _split(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:322
└ @ Base ./strings/util.jl:322
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = findfirst at search.jl:104 [inlined]
└ @ Core ./strings/search.jl:104
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = _split(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:325
└ @ Base ./strings/util.jl:325
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = Type at substring.jl:39 [inlined]
└ @ Core ./strings/substring.jl:39
┌ Warning: `split(x::CategoricalString; kwargs...)` is deprecated, use `split(String(x); kwargs...)` instead.
│   caller = macro expansion at 08_string.jl:169 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:169
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = _split(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:329
└ @ Base ./strings/util.jl:329
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = _split(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:336
└ @ Base ./strings/util.jl:336
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = cmp(::SubString{CategoricalArrays.CategoricalString{UInt32}}, ::String) at substring.jl:68
└ @ Base ./strings/substring.jl:68
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = iterate at substring.jl:68 [inlined]
└ @ Core ./strings/substring.jl:68
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = _rsplit(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:395
└ @ Base ./strings/util.jl:395
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = findlast at search.jl:273 [inlined]
└ @ Core ./strings/search.jl:273
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = isvalid at substring.jl:82 [inlined]
└ @ Core ./strings/substring.jl:82
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = isvalid at substring.jl:82 [inlined]
└ @ Core ./strings/substring.jl:82
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = isvalid at substring.jl:82 [inlined]
└ @ Core ./strings/substring.jl:82
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = getindex at substring.jl:76 [inlined]
└ @ Core ./strings/substring.jl:76
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = _rsplit(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:399
└ @ Base ./strings/util.jl:399
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = _rsplit(::CategoricalArrays.CategoricalString{UInt32}, ::String, ::Int64, ::Bool, ::Array{SubString{CategoricalArrays.CategoricalString{UInt32}},1}) at util.jl:400
└ @ Base ./strings/util.jl:400
┌ Warning: `strip(x::CategoricalString)` is deprecated, use `strip(String(x))` instead.
│   caller = macro expansion at 08_string.jl:175 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:175
┌ Warning: `strip(x::CategoricalString)` is deprecated, use `strip(String(x))` instead.
│   caller = macro expansion at 08_string.jl:176 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:176
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = iterate at basic.jl:678 [inlined]
└ @ Core ./strings/basic.jl:678
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = iterate at basic.jl:678 [inlined]
└ @ Core ./strings/basic.jl:678
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = zip_iterate(::Base.Iterators.Reverse{Base.EachStringIndex{CategoricalArrays.CategoricalString{UInt32}}}, ::Base.Iterators.Reverse{CategoricalArrays.CategoricalString{UInt32}}, ::Tuple{}, ::Tuple{}) at basic.jl:678
└ @ Base.Iterators ./strings/basic.jl:678
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = iterate at basic.jl:677 [inlined]
└ @ Core ./strings/basic.jl:677
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = iterate at basic.jl:677 [inlined]
└ @ Core ./strings/basic.jl:677
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = iterate at basic.jl:677 [inlined]
└ @ Core ./strings/basic.jl:677
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = zip_iterate(::Base.Iterators.Reverse{Base.EachStringIndex{CategoricalArrays.CategoricalString{UInt32}}}, ::Base.Iterators.Reverse{CategoricalArrays.CategoricalString{UInt32}}, ::Tuple{}, ::Tuple{}) at basic.jl:677
└ @ Base.Iterators ./strings/basic.jl:677
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = iterate at basic.jl:678 [inlined]
└ @ Core ./strings/basic.jl:678
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = zip_iterate(::Base.Iterators.Reverse{Base.EachStringIndex{CategoricalArrays.CategoricalString{UInt32}}}, ::Base.Iterators.Reverse{CategoricalArrays.CategoricalString{UInt32}}, ::Tuple{Int64}, ::Tuple{Int64}) at basic.jl:678
└ @ Base.Iterators ./strings/basic.jl:678
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = iterate at basic.jl:677 [inlined]
└ @ Core ./strings/basic.jl:677
┌ Warning: `getindex(x::CategoricalString, i::Int)` is deprecated, use `getindex(String(x), i)` instead.
│   caller = iterate at basic.jl:677 [inlined]
└ @ Core ./strings/basic.jl:677
┌ Warning: `prevind(x::CategoricalString, i::Int)` is deprecated, use `prevind(String(x), i)` instead.
│   caller = zip_iterate(::Base.Iterators.Reverse{Base.EachStringIndex{CategoricalArrays.CategoricalString{UInt32}}}, ::Base.Iterators.Reverse{CategoricalArrays.CategoricalString{UInt32}}, ::Tuple{Int64}, ::Tuple{Int64}) at basic.jl:677
└ @ Base.Iterators ./strings/basic.jl:677
┌ Warning: `isvalid(x::CategoricalString, i::Integer)` is deprecated, use `isvalid(String(x), i)` instead.
│   caller = isvalid at substring.jl:82 [inlined]
└ @ Core ./strings/substring.jl:82
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = lstrip(::Base.Fix2{typeof(in),Char}, ::SubString{CategoricalArrays.CategoricalString{UInt32}}) at substring.jl:68
└ @ Base ./strings/substring.jl:68
┌ Warning: `iterate(x::CategoricalString, i::Int)` is deprecated, use `iterate(String(x), i)` instead.
│   caller = zip_iterate(::Base.Iterators.Stateful{SubString{CategoricalArrays.CategoricalString{UInt32}},Union{Nothing, Tuple{Char,Int64}}}, ::Base.Iterators.Stateful{String,Union{Nothing, Tuple{Char,Int64}}}, ::Tuple{Nothing}, ::Tuple{Nothing}) at substring.jl:68
└ @ Base.Iterators ./strings/substring.jl:68
┌ Warning: `lstrip(x::CategoricalString)` is deprecated, use `lstrip(String(x))` instead.
│   caller = macro expansion at 08_string.jl:179 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:179
┌ Warning: `lstrip(x::CategoricalString)` is deprecated, use `lstrip(String(x))` instead.
│   caller = macro expansion at 08_string.jl:180 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:180
┌ Warning: `lastindex(x::CategoricalString)` is deprecated, use `lastindex(String(x))` instead.
│   caller = lstrip(::Base.Fix2{typeof(in),Char}, ::CategoricalArrays.CategoricalString{UInt32}) at util.jl:160
└ @ Base ./strings/util.jl:160
┌ Warning: `firstindex(x::CategoricalString)` is deprecated, use `firstindex(String(x))` instead.
│   caller = iterate at basic.jl:538 [inlined]
└ @ Core ./strings/basic.jl:538
┌ Warning: `ncodeunits(x::CategoricalString)` is deprecated, use `ncodeunits(String(x))` instead.
│   caller = iterate at basic.jl:538 [inlined]
└ @ Core ./strings/basic.jl:538
┌ Warning: `nextind(x::CategoricalString, i::Int)` is deprecated, use `nextind(String(x), i)` instead.
│   caller = iterate at basic.jl:538 [inlined]
└ @ Core ./strings/basic.jl:538
┌ Warning: `iterate(x::CategoricalString)` is deprecated, use `iterate(String(x))` instead.
│   caller = zip_iterate at iterators.jl:304 [inlined]
└ @ Core ./iterators.jl:304
┌ Warning: `rstrip(x::CategoricalString)` is deprecated, use `rstrip(String(x))` instead.
│   caller = macro expansion at 08_string.jl:183 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:183
┌ Warning: `rstrip(x::CategoricalString)` is deprecated, use `rstrip(String(x))` instead.
│   caller = macro expansion at 08_string.jl:184 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:184
┌ Warning: `uppercase(x::CategoricalString)` is deprecated, use `uppercase(String(x))` instead.
│   caller = macro expansion at 08_string.jl:187 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:187
┌ Warning: `uppercase(x::CategoricalString)` is deprecated, use `uppercase(String(x))` instead.
│   caller = macro expansion at 08_string.jl:188 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:188
┌ Warning: `lowercase(x::CategoricalString)` is deprecated, use `lowercase(String(x))` instead.
│   caller = macro expansion at 08_string.jl:190 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:190
┌ Warning: `lowercase(x::CategoricalString)` is deprecated, use `lowercase(String(x))` instead.
│   caller = macro expansion at 08_string.jl:191 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:191
┌ Warning: `titlecase(x::CategoricalString)` is deprecated, use `titlecase(String(x))` instead.
│   caller = macro expansion at 08_string.jl:193 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:193
┌ Warning: `titlecase(x::CategoricalString)` is deprecated, use `titlecase(String(x))` instead.
│   caller = macro expansion at 08_string.jl:194 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:194
┌ Warning: `uppercasefirst(x::CategoricalString)` is deprecated, use `uppercasefirst(String(x))` instead.
│   caller = macro expansion at 08_string.jl:196 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:196
┌ Warning: `uppercasefirst(x::CategoricalString)` is deprecated, use `uppercasefirst(String(x))` instead.
│   caller = macro expansion at 08_string.jl:197 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:197
┌ Warning: `lowercasefirst(x::CategoricalString)` is deprecated, use `lowercasefirst(String(x))` instead.
│   caller = macro expansion at 08_string.jl:199 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:199
┌ Warning: `lowercasefirst(x::CategoricalString)` is deprecated, use `lowercasefirst(String(x))` instead.
│   caller = macro expansion at 08_string.jl:200 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:200
┌ Warning: `chop(x::CategoricalString; kwargs...)` is deprecated, use `chop(String(x); kwargs...)` instead.
│   caller = macro expansion at 08_string.jl:208 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:208
┌ Warning: `chomp(x::CategoricalString)` is deprecated, use `chomp(String(x))` instead.
│   caller = macro expansion at 08_string.jl:210 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:210
┌ Warning: `chomp(x::CategoricalString)` is deprecated, use `chomp(String(x))` instead.
│   caller = macro expansion at 08_string.jl:211 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:211
┌ Warning: `textwidth(x::CategoricalString)` is deprecated, use `textwidth(String(x))` instead.
│   caller = macro expansion at 08_string.jl:213 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:213
┌ Warning: `textwidth(x::CategoricalString)` is deprecated, use `textwidth(String(x))` instead.
│   caller = macro expansion at 08_string.jl:214 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:214
┌ Warning: `isascii(x::CategoricalString)` is deprecated, use `isascii(String(x))` instead.
│   caller = macro expansion at 08_string.jl:216 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:216
┌ Warning: `isascii(x::CategoricalString)` is deprecated, use `isascii(String(x))` instead.
│   caller = macro expansion at 08_string.jl:217 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:217
┌ Warning: `escape_string(x::CategoricalString)` is deprecated, use `escape_string(String(x))` instead.
│   caller = macro expansion at 08_string.jl:219 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:219
┌ Warning: `escape_string(x::CategoricalString)` is deprecated, use `escape_string(String(x))` instead.
│   caller = macro expansion at 08_string.jl:220 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:220
┌ Warning: `collect(x::CategoricalString)` is deprecated, use `collect(String(x))` instead.
│   caller = macro expansion at 08_string.jl:222 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:222
┌ Warning: `collect(x::CategoricalString)` is deprecated, use `collect(String(x))` instead.
│   caller = macro expansion at 08_string.jl:223 [inlined]
└ @ Core ~/.julia/packages/CategoricalArrays/U3LvJ/test/08_string.jl:223
Test Summary: | Pass  Total
08_string.jl  |  150    150
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/09_hash.jl:3
Test Summary: | Pass  Total
09_hash.jl    |   54     54
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/10_isless.jl:3
Test Summary: | Pass  Total
10_isless.jl  |  429    429
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/11_array.jl:3
Test Summary: | Pass  Total
11_array.jl   | 9054   9054
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/12_missingarray.jl:3
Test Summary:      |  Pass  Total
12_missingarray.jl | 12672  12672
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/13_arraycommon.jl:3
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copy!(::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}, ::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}) at array.jl:426
└ @ CategoricalArrays ~/.julia/packages/CategoricalArrays/U3LvJ/src/array.jl:426
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copyto!(::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}, ::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}) at array.jl:415
└ @ CategoricalArrays ~/.julia/packages/CategoricalArrays/U3LvJ/src/array.jl:415
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copyto!(::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}, ::Int64, ::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}, ::Int64) at abstractarray.jl:754
└ @ Base ./abstractarray.jl:754
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copy!(::SubArray{CategoricalArrays.CategoricalString{UInt32},1,CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}},Tuple{UnitRange{Int64}},true}, ::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}) at array.jl:426
└ @ CategoricalArrays ~/.julia/packages/CategoricalArrays/U3LvJ/src/array.jl:426
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copyto!(::SubArray{CategoricalArrays.CategoricalString{UInt32},1,CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}},Tuple{UnitRange{Int64}},true}, ::CategoricalArrays.CategoricalArray{String,1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Union{}}) at array.jl:415
└ @ CategoricalArrays ~/.julia/packages/CategoricalArrays/U3LvJ/src/array.jl:415
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copy!(::CategoricalArrays.CategoricalArray{Union{Missing, String},1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Missing}, ::CategoricalArrays.CategoricalArray{Union{Missing, String},1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Missing}) at array.jl:426
└ @ CategoricalArrays ~/.julia/packages/CategoricalArrays/U3LvJ/src/array.jl:426
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copyto!(::CategoricalArrays.CategoricalArray{Union{Missing, String},1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Missing}, ::CategoricalArrays.CategoricalArray{Union{Missing, String},1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Missing}) at array.jl:415
└ @ CategoricalArrays ~/.julia/packages/CategoricalArrays/U3LvJ/src/array.jl:415
┌ Warning: adding new levels to ordered CategoricalArray destination will throw an error in the future
│   caller = copyto!(::CategoricalArrays.CategoricalArray{Union{Missing, String},1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Missing}, ::Int64, ::CategoricalArrays.CategoricalArray{Union{Missing, String},1,UInt32,String,CategoricalArrays.CategoricalString{UInt32},Missing}, ::Int64) at abstractarray.jl:754
└ @ Base ./abstractarray.jl:754
Test Summary:     |  Pass  Total
13_arraycommon.jl | 22817  22817
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/14_view.jl:3
Test Summary: | Pass  Total
14_view.jl    |  158    158
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/15_extras.jl:3
Test Summary: | Pass  Total
15_extras.jl  |   99     99
WARNING: Compat.Test is deprecated, use Test instead.
  likely near /root/.julia/packages/CategoricalArrays/U3LvJ/test/16_recode.jl:3
Test Summary: | Pass  Total
16_recode.jl  |  808    808
   Testing CategoricalArrays tests passed 
