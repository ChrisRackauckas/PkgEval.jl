 Resolving package versions...
 Installed Requires ──────────────────── v0.5.2
 Installed NaNMath ───────────────────── v0.3.3
 Installed QuantumOptics ─────────────── v0.6.5
 Installed VersionParsing ────────────── v1.1.3
 Installed Primes ────────────────────── v0.4.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed DocStringExtensions ───────── v0.8.1
 Installed Inflate ───────────────────── v0.1.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed RecursiveArrayTools ───────── v0.18.6
 Installed DiffRules ─────────────────── v0.1.0
 Installed DiffEqDiffTools ───────────── v1.4.0
 Installed Arpack ────────────────────── v0.3.1
 Installed FFTW ──────────────────────── v0.3.0
 Installed BandedMatrices ────────────── v0.14.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed DiffEqNoiseProcess ────────── v3.3.1
 Installed Parsers ───────────────────── v0.3.10
 Installed BlockBandedMatrices ───────── v0.6.0
 Installed MacroTools ────────────────── v0.5.2
 Installed ArrayInterface ────────────── v1.2.1
 Installed DataStructures ────────────── v0.17.6
 Installed Conda ─────────────────────── v1.3.0
 Installed Reexport ──────────────────── v0.2.0
 Installed NLsolve ───────────────────── v4.2.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed BinDeps ───────────────────── v0.8.10
 Installed VertexSafeGraphs ──────────── v0.1.0
 Installed WignerSymbols ─────────────── v0.3.1
 Installed TreeViews ─────────────────── v0.3.0
 Installed SpecialFunctions ──────────── v0.8.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DiffEqCallbacks ───────────── v2.5.2
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Roots ─────────────────────── v0.8.3
 Installed StochasticDiffEq ──────────── v6.8.0
 Installed Distances ─────────────────── v0.8.2
 Installed DiffEqBase ────────────────── v5.20.1
 Installed StaticArrays ──────────────── v0.11.1
 Installed ResettableStacks ──────────── v0.6.0
 Installed URIParser ─────────────────── v0.4.0
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed MatrixFactorizations ──────── v0.2.1
 Installed DiffResults ───────────────── v0.0.4
 Installed IterativeSolvers ──────────── v0.8.1
 Installed ArrayLayouts ──────────────── v0.1.5
 Installed LineSearches ──────────────── v7.0.1
 Installed RandomNumbers ─────────────── v1.3.0
 Installed GenericSVD ────────────────── v0.2.2
 Installed FillArrays ────────────────── v0.8.2
 Installed NLSolversBase ─────────────── v7.5.0
 Installed SimpleTraits ──────────────── v0.9.1
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed BlockArrays ───────────────── v0.10.2
 Installed SparseDiffTools ───────────── v0.9.1
 Installed Parameters ────────────────── v0.11.0
 Installed OrdinaryDiffEq ────────────── v5.14.0
 Installed MuladdMacro ───────────────── v0.2.1
 Installed ForwardDiff ───────────────── v0.10.6
 Installed Calculus ──────────────────── v0.5.1
 Installed ExponentialUtilities ──────── v1.5.1
 Installed LightGraphs ───────────────── v1.3.0
 Installed Compat ────────────────────── v2.2.0
 Installed RecursiveFactorization ────── v0.1.0
  Updating `~/.julia/environments/v1.0/Project.toml`
  [6e0679c1] + QuantumOptics v0.6.5
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.3.1
  [4fba245c] + ArrayInterface v1.2.1
  [4c555306] + ArrayLayouts v0.1.5
  [aae01518] + BandedMatrices v0.14.1
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [8e7c35d0] + BlockArrays v0.10.2
  [ffab5731] + BlockBandedMatrices v0.6.0
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.6
  [2b5f629d] + DiffEqBase v5.20.1
  [459566f4] + DiffEqCallbacks v2.5.2
  [01453d9d] + DiffEqDiffTools v1.4.0
  [77a26b50] + DiffEqNoiseProcess v3.3.1
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [d4d017d3] + ExponentialUtilities v1.5.1
  [7a1cc6ca] + FFTW v0.3.0
  [1a297f60] + FillArrays v0.8.2
  [f6369f11] + ForwardDiff v0.10.6
  [069b7b12] + FunctionWrappers v1.0.0
  [01680d73] + GenericSVD v0.2.2
  [d25df0c9] + Inflate v0.1.1
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.2
  [a3b82374] + MatrixFactorizations v0.2.1
  [46d2c3a1] + MuladdMacro v0.2.1
  [d41bc354] + NLSolversBase v7.5.0
  [2774e3e8] + NLsolve v4.2.0
  [77ba4419] + NaNMath v0.3.3
  [bac558e1] + OrderedCollections v1.1.0
  [1dea7af3] + OrdinaryDiffEq v5.14.0
  [d96e819e] + Parameters v0.11.0
  [69de0a69] + Parsers v0.3.10
  [27ebfcd6] + Primes v0.4.0
  [6e0679c1] + QuantumOptics v0.6.5
  [e6cf234a] + RandomNumbers v1.3.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v0.18.6
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [ae5879a3] + ResettableStacks v0.6.0
  [f2b01f46] + Roots v0.8.3
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v0.9.1
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.11.1
  [789caeaf] + StochasticDiffEq v6.8.0
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.1.3
  [19fa3120] + VertexSafeGraphs v0.1.0
  [9f57e263] + WignerSymbols v0.3.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Arpack ──────────→ `~/.julia/packages/Arpack/cu5By/deps/build.log`
  Building Conda ───────────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building FFTW ────────────→ `~/.julia/packages/FFTW/2okGQ/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
   Testing QuantumOptics
    Status `/tmp/tmp2YsDAd/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.3.1
  [4fba245c] ArrayInterface v1.2.1
  [4c555306] ArrayLayouts v0.1.5
  [aae01518] BandedMatrices v0.14.1
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [8e7c35d0] BlockArrays v0.10.2
  [ffab5731] BlockBandedMatrices v0.6.0
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [864edb3b] DataStructures v0.17.6
  [2b5f629d] DiffEqBase v5.20.1
  [459566f4] DiffEqCallbacks v2.5.2
  [01453d9d] DiffEqDiffTools v1.4.0
  [77a26b50] DiffEqNoiseProcess v3.3.1
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.5.1
  [7a1cc6ca] FFTW v0.3.0
  [1a297f60] FillArrays v0.8.2
  [f6369f11] ForwardDiff v0.10.6
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [d25df0c9] Inflate v0.1.1
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.2
  [a3b82374] MatrixFactorizations v0.2.1
  [46d2c3a1] MuladdMacro v0.2.1
  [d41bc354] NLSolversBase v7.5.0
  [2774e3e8] NLsolve v4.2.0
  [77ba4419] NaNMath v0.3.3
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.14.0
  [d96e819e] Parameters v0.11.0
  [69de0a69] Parsers v0.3.10
  [27ebfcd6] Primes v0.4.0
  [6e0679c1] QuantumOptics v0.6.5
  [e6cf234a] RandomNumbers v1.3.0
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v0.18.6
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [ae5879a3] ResettableStacks v0.6.0
  [f2b01f46] Roots v0.8.3
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v0.9.1
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.11.1
  [789caeaf] StochasticDiffEq v6.8.0
  [3783bdb8] TableTraits v1.0.0
  [a2a6695c] TreeViews v0.3.0
  [30578b45] URIParser v0.4.0
  [81def892] VersionParsing v1.1.3
  [19fa3120] VertexSafeGraphs v0.1.0
  [9f57e263] WignerSymbols v0.3.1
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary: | Pass  Total
sortedindices |   36     36
Test Summary: | Pass  Total
polynomials   |   10     10
Test Summary: | Pass  Total
basis         |   24     24
Test Summary: | Pass  Total
states        |   65     65
Test Summary: | Pass  Total
operators     |   36     36
Test Summary:   | Pass  Total
operators-dense |  115    115
Test Summary: | Pass  Total
sparsematrix  |    6      6
Test Summary:    | Pass  Total
operators-sparse |  105    105
Test Summary:        | Pass  Total
operators-lazytensor |   67     67
Test Summary:     | Pass  Total
operators-lazysum |   57     57
Test Summary:         | Pass  Total
operators-lazyproduct |   42     42
Test Summary: | Pass  Total
fock          |   29     29
Test Summary: | Pass  Total
spin          |  146    146
Test Summary: | Pass  Total
particle      |   87     87
Test Summary: | Pass  Total
manybody      |   56     56
Test Summary: | Pass  Total
nlevel        |   13     13
Test Summary: | Pass  Total
subspace      |    8      8
Test Summary:     | Pass  Total
state_definitions |   96     96
Test Summary: | Pass  Total
phasespace    |  260    260
Test Summary:  | Pass  Total
transformation |    6      6
Test Summary: | Pass  Total
metrics       |   41     41
Test Summary: | Pass  Total
embed         |   11     11
Test Summary:    | Pass  Total
spectralanalysis |   42     42
Test Summary: | Pass  Total
schroedinger  |   12     12
Test Summary: | Pass  Total
master        |   30     30
Test Summary: | Pass  Total
mcwf          | 1333   1333
Test Summary:          | Pass  Total
timeevolution_twolevel |    9      9
Test Summary:              | Pass  Total
timeevolution_pumpedcavity |   60     60
Test Summary:  | Pass  Total
superoperators |   67     67
Test Summary: | Pass  Total
steadystate   |   15     15
Test Summary:    | Pass  Total
timecorrelations |    8      8
Test Summary: | Pass  Total
semiclassical |   34     34
Test Summary:          | Pass  Total
stochastic_definitions |    3      3
stochastic_schroedinger: Error During Test at /root/.julia/packages/QuantumOptics/fwWGR/test/test_stochastic_schroedinger.jl:6
  Got exception outside of a @test
  DimensionMismatch("DiffEq's fast broadcast cannot broadcast (Base.OneTo(2),) with (Base.OneTo(1),)")
  Stacktrace:
   [1] throwfastbc(::Tuple{Base.OneTo{Int64}}, ::Tuple{Base.OneTo{Int64}}) at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:21
   [2] preprocess at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:27 [inlined]
   [3] preprocess_args at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:33 [inlined]
   [4] preprocess_args at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:32 [inlined]
   [5] preprocess at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:22 [inlined]
   [6] copyto! at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:48 [inlined]
   [7] materialize! at ./broadcast.jl:759 [inlined]
   [8] macro expansion at /root/.julia/packages/DiffEqBase/pqp0B/src/diffeqfastbc.jl:79 [inlined]
   [9] perform_step!(::StochasticDiffEq.SDEIntegrator{StochasticDiffEq.EulerHeun,true,Array{Complex{Float64},1},Complex{Float64},Float64,DiffEqBase.NullParameters,Complex{Float64},Float64,Complex{Float64},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},Array{Complex{Float64},1},DiffEqBase.RODESolution{Complex{Float64},2,Array{Array{Complex{Float64},1},1},Nothing,Nothing,Array{Float64,1},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEProblem{Array{Complex{Float64},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEFunction{true,getfield(QuantumOptics.timeevolution, Symbol("#df_#9")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}}},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},Nothing,Nothing},StochasticDiffEq.EulerHeun,StochasticDiffEq.LinearInterpolationData{Array{Array{Complex{Float64},1},1},Array{Float64,1}},DiffEqBase.DEStats},StochasticDiffEq.EulerHeunCache{Array{Complex{Float64},1},Array{Complex{Float64},1},Array{Complex{Float64},1},Array{Complex{Float64},1}},DiffEqBase.SDEFunction{true,getfield(QuantumOptics.timeevolution, Symbol("#df_#9")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}}},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},StochasticDiffEq.SDEOptions{Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##28#29")),DiffEqCallbacks.SavingAffect{getfield(QuantumOptics.timeevolution, Symbol("#fout_#11")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},getfield(QuantumOptics.timeevolution, Symbol("#fout#13")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}}}},Float64,Ket{SpinBasis{1//2},Array{Complex{Float64},1}},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Array{Float64,1}},typeof(DiffEqCallbacks.saving_initialize)}}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Nothing,Nothing,Int64,Float64,Float64,Complex{Float64},Array{Float64,1},Array{Float64,1},Array{Float64,1}},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},Complex{Float64},Nothing}, ::StochasticDiffEq.EulerHeunCache{Array{Complex{Float64},1},Array{Complex{Float64},1},Array{Complex{Float64},1},Array{Complex{Float64},1}}, ::Function) at /root/.julia/packages/StochasticDiffEq/3EqDI/src/perform_step/low_order.jl:73
   [10] perform_step! at /root/.julia/packages/StochasticDiffEq/3EqDI/src/perform_step/low_order.jl:67 [inlined]
   [11] solve!(::StochasticDiffEq.SDEIntegrator{StochasticDiffEq.EulerHeun,true,Array{Complex{Float64},1},Complex{Float64},Float64,DiffEqBase.NullParameters,Complex{Float64},Float64,Complex{Float64},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},Array{Complex{Float64},1},DiffEqBase.RODESolution{Complex{Float64},2,Array{Array{Complex{Float64},1},1},Nothing,Nothing,Array{Float64,1},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEProblem{Array{Complex{Float64},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEFunction{true,getfield(QuantumOptics.timeevolution, Symbol("#df_#9")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}}},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},Nothing,Nothing},StochasticDiffEq.EulerHeun,StochasticDiffEq.LinearInterpolationData{Array{Array{Complex{Float64},1},1},Array{Float64,1}},DiffEqBase.DEStats},StochasticDiffEq.EulerHeunCache{Array{Complex{Float64},1},Array{Complex{Float64},1},Array{Complex{Float64},1},Array{Complex{Float64},1}},DiffEqBase.SDEFunction{true,getfield(QuantumOptics.timeevolution, Symbol("#df_#9")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}}},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},StochasticDiffEq.SDEOptions{Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##28#29")),DiffEqCallbacks.SavingAffect{getfield(QuantumOptics.timeevolution, Symbol("#fout_#11")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},getfield(QuantumOptics.timeevolution, Symbol("#fout#13")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}}}},Float64,Ket{SpinBasis{1//2},Array{Complex{Float64},1}},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Array{Float64,1}},typeof(DiffEqCallbacks.saving_initialize)}}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Nothing,Nothing,Int64,Float64,Float64,Complex{Float64},Array{Float64,1},Array{Float64,1},Array{Float64,1}},DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},Complex{Float64},Nothing}) at /root/.julia/packages/StochasticDiffEq/3EqDI/src/solve.jl:401
   [12] #__solve#39 at /root/.julia/packages/StochasticDiffEq/3EqDI/src/solve.jl:7 [inlined]
   [13] #__solve at ./none:0 [inlined] (repeats 5 times)
   [14] #solve#386(::Base.Iterators.Pairs{Symbol,Any,NTuple{7,Symbol},NamedTuple{(:reltol, :abstol, :save_everystep, :save_start, :save_end, :callback, :dt),Tuple{Float64,Float64,Bool,Bool,Bool,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##28#29")),DiffEqCallbacks.SavingAffect{getfield(QuantumOptics.timeevolution, Symbol("#fout_#11")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},getfield(QuantumOptics.timeevolution, Symbol("#fout#13")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}}}},Float64,Ket{SpinBasis{1//2},Array{Complex{Float64},1}},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Array{Float64,1}},typeof(DiffEqCallbacks.saving_initialize)}}},Float64}}}, ::Function, ::DiffEqBase.SDEProblem{Array{Complex{Float64},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEFunction{true,getfield(QuantumOptics.timeevolution, Symbol("#df_#9")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}}},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},Nothing,Nothing}, ::StochasticDiffEq.EulerHeun) at /root/.julia/packages/DiffEqBase/pqp0B/src/solve.jl:39
   [15] (::getfield(DiffEqBase, Symbol("#kw##solve")))(::NamedTuple{(:reltol, :abstol, :save_everystep, :save_start, :save_end, :callback, :dt),Tuple{Float64,Float64,Bool,Bool,Bool,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{getfield(DiffEqCallbacks, Symbol("##28#29")),DiffEqCallbacks.SavingAffect{getfield(QuantumOptics.timeevolution, Symbol("#fout_#11")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},getfield(QuantumOptics.timeevolution, Symbol("#fout#13")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}}}},Float64,Ket{SpinBasis{1//2},Array{Complex{Float64},1}},DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Array{Float64,1}},typeof(DiffEqCallbacks.saving_initialize)}}},Float64}}, ::typeof(DiffEqBase.solve), ::DiffEqBase.SDEProblem{Array{Complex{Float64},1},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DiffEqNoiseProcess.NoiseProcess{Float64,2,Float64,Array{Float64,1},Nothing,Nothing,typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_DIST),typeof(DiffEqNoiseProcess.REAL_INPLACE_WHITE_NOISE_BRIDGE),true,DataStructures.Stack{Tuple{Float64,Array{Float64,1},Nothing}},ResettableStacks.ResettableStack{Tuple{Float64,Array{Float64,1},Nothing},true},DiffEqNoiseProcess.RSWM{:RSwM3,Float64},RandomNumbers.Xorshifts.Xoroshiro128Plus},DiffEqBase.SDEFunction{true,getfield(QuantumOptics.timeevolution, Symbol("#df_#9")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}}},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},getfield(QuantumOptics.timeevolution, Symbol("#dg_#10")){getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Int64},Nothing,Nothing}, ::StochasticDiffEq.EulerHeun) at ./none:0
   [16] #integrate_stoch#8(::Bool, ::Nothing, ::StochasticDiffEq.EulerHeun, ::Nothing, ::Nothing, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:dt,),Tuple{Float64}}}, ::typeof(QuantumOptics.timeevolution.integrate_stoch), ::Array{Float64,1}, ::getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_determ#2")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}}, ::getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#dschroedinger_stoch#3")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}},Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}}, ::Array{Complex{Float64},1}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::getfield(QuantumOptics.timeevolution, Symbol("#fout#13")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}}}, ::Int64) at /root/.julia/packages/QuantumOptics/fwWGR/src/timeevolution_base.jl:154
   [17] (::getfield(QuantumOptics.timeevolution, Symbol("#kw##integrate_stoch")))(::NamedTuple{(:ncb, :dt, :alg),Tuple{Nothing,Float64,StochasticDiffEq.EulerHeun}}, ::typeof(QuantumOptics.timeevolution.integrate_stoch), ::Array{Float64,1}, ::Function, ::Function, ::Array{Complex{Float64},1}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::getfield(QuantumOptics.timeevolution, Symbol("#fout#13")){Ket{SpinBasis{1//2},Array{Complex{Float64},1}}}, ::Int64) at ./none:0
   [18] #integrate_stoch#12 at /root/.julia/packages/QuantumOptics/fwWGR/src/timeevolution_base.jl:176 [inlined]
   [19] (::getfield(QuantumOptics.timeevolution, Symbol("#kw##integrate_stoch")))(::NamedTuple{(:ncb, :dt, :alg),Tuple{Nothing,Float64,StochasticDiffEq.EulerHeun}}, ::typeof(QuantumOptics.timeevolution.integrate_stoch), ::Array{Float64,1}, ::Function, ::Function, ::Array{Complex{Float64},1}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::Nothing, ::Int64) at ./none:0
   [20] #schroedinger#1(::Nothing, ::Bool, ::Nothing, ::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:dt, :alg),Tuple{Float64,StochasticDiffEq.EulerHeun}}}, ::Function, ::Array{Float64,1}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}, ::Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}) at /root/.julia/packages/QuantumOptics/fwWGR/src/stochastic_schroedinger.jl:65
   [21] (::getfield(QuantumOptics.stochastic.stochastic_schroedinger, Symbol("#kw##schroedinger")))(::NamedTuple{(:dt, :alg),Tuple{Float64,StochasticDiffEq.EulerHeun}}, ::typeof(QuantumOptics.stochastic.stochastic_schroedinger.schroedinger), ::Array{Float64,1}, ::Ket{SpinBasis{1//2},Array{Complex{Float64},1}}, ::SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}}, ::Array{SparseOperator{SpinBasis{1//2},SpinBasis{1//2},SparseMatrixCSC{Complex{Float64},Int64}},1}) at ./none:0
   [22] macro expansion at /root/.julia/packages/QuantumOptics/fwWGR/test/test_stochastic_schroedinger.jl:30 [inlined]
   [23] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Test/src/Test.jl:1083 [inlined]
   [24] top-level scope at /root/.julia/packages/QuantumOptics/fwWGR/test/test_stochastic_schroedinger.jl:8
   [25] include at ./boot.jl:317 [inlined]
   [26] include_relative(::Module, ::String) at ./loading.jl:1044
   [27] include(::Module, ::String) at ./sysimg.jl:29
   [28] include(::String) at ./client.jl:392
   [29] top-level scope at /root/.julia/packages/QuantumOptics/fwWGR/test/runtests.jl:68 [inlined]
   [30] top-level scope at ./none:0
   [31] include at ./boot.jl:317 [inlined]
   [32] include_relative(::Module, ::String) at ./loading.jl:1044
   [33] include(::Module, ::String) at ./sysimg.jl:29
   [34] include(::String) at ./client.jl:392
   [35] top-level scope at none:0
   [36] eval(::Module, ::Any) at ./boot.jl:319
   [37] exec_options(::Base.JLOptions) at ./client.jl:243
   [38] _start() at ./client.jl:425
Test Summary:           | Error  Total
stochastic_schroedinger |     1      1
ERROR: LoadError: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /root/.julia/packages/QuantumOptics/fwWGR/test/test_stochastic_schroedinger.jl:6
in expression starting at /root/.julia/packages/QuantumOptics/fwWGR/test/runtests.jl:66
ERROR: Package QuantumOptics errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/Types.jl:120
 [2] #test#65(::Bool, ::Function, ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/Operations.jl:1357
 [3] #test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:0 [inlined]
 [4] #test#44(::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:278
 [5] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:263 [inlined]
 [6] #test#43 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:260 [inlined]
 [7] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:260 [inlined]
 [8] #test#42 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:259 [inlined]
 [9] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:259 [inlined]
 [10] #test#41 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:258 [inlined]
 [11] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.0/Pkg/src/API.jl:258
 [12] top-level scope at none:0
