 Resolving package versions...
 Installed Requires ──────────────────── v0.5.2
 Installed DiffEqDiffTools ───────────── v1.4.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed RecursiveArrayTools ───────── v1.0.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed DocStringExtensions ───────── v0.8.1
 Installed FunctionWrappers ──────────── v1.0.0
 Installed ArrayInterface ────────────── v1.2.1
 Installed MacroTools ────────────────── v0.5.2
 Installed Parsers ───────────────────── v0.3.10
 Installed Sundials ──────────────────── v3.8.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed DataStructures ────────────── v0.17.6
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Unitful ───────────────────── v0.17.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed Roots ─────────────────────── v0.8.3
 Installed DiffEqBase ────────────────── v6.6.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IterativeSolvers ──────────── v0.8.1
 Installed PooledArrays ──────────────── v0.5.2
 Installed DataFrames ────────────────── v0.19.4
 Installed StaticArrays ──────────────── v0.12.1
 Installed Missings ──────────────────── v0.4.3
 Installed ModiaMath ─────────────────── v0.5.1
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Tables ────────────────────── v0.2.11
 Installed CategoricalArrays ─────────── v0.7.3
 Installed Compat ────────────────────── v2.2.0
 Installed MuladdMacro ───────────────── v0.2.1
 Installed Parameters ────────────────── v0.12.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed Modia3D ───────────────────── v0.3.0
  Updating `~/.julia/environments/v1.0/Project.toml`
  [07f2c1e0] + Modia3D v0.3.0
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [4fba245c] + ArrayInterface v1.2.1
  [b99e7846] + BinaryProvider v0.5.8
  [324d7699] + CategoricalArrays v0.7.3
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.6.0
  [01453d9d] + DiffEqDiffTools v1.4.0
  [ffbed154] + DocStringExtensions v0.8.1
  [069b7b12] + FunctionWrappers v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.2
  [e1d29d7a] + Missings v0.4.3
  [07f2c1e0] + Modia3D v0.3.0
  [67ccffd1] + ModiaMath v0.5.1
  [46d2c3a1] + MuladdMacro v0.2.1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.0.2
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [f2b01f46] + Roots v0.8.3
  [a2af1166] + SortingAlgorithms v0.3.1
  [90137ffa] + StaticArrays v0.12.1
  [c3572dad] + Sundials v3.8.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [a2a6695c] + TreeViews v0.3.0
  [1986cc42] + Unitful v0.17.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Sundials → `~/.julia/packages/Sundials/fVIue/deps/build.log`
   Testing Modia3D
    Status `/tmp/tmpzsmezp/Manifest.toml`
  [4fba245c] ArrayInterface v1.2.1
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.3
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.6.0
  [01453d9d] DiffEqDiffTools v1.4.0
  [ffbed154] DocStringExtensions v0.8.1
  [069b7b12] FunctionWrappers v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.2
  [e1d29d7a] Missings v0.4.3
  [07f2c1e0] Modia3D v0.3.0
  [67ccffd1] ModiaMath v0.5.1
  [46d2c3a1] MuladdMacro v0.2.1
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v1.0.2
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [f2b01f46] Roots v0.8.3
  [a2af1166] SortingAlgorithms v0.3.1
  [90137ffa] StaticArrays v0.12.1
  [c3572dad] Sundials v3.8.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [a2a6695c] TreeViews v0.3.0
  [1986cc42] Unitful v0.17.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]

Importing Modia3D Version 0.3.0 (2019-04-06)
 
Importing ModiaMath Version 0.5.1 (2019-04-07)
    PyPlot not available (plot commands will be ignored).
    Try to install PyPlot. See hints here:
    https://github.com/ModiaSim/ModiaMath.jl/wiki/Installing-PyPlot-in-a-robust-way.
┌ Warning: 
│ Environment variable "DLR_VISUALIZATION" not defined.
│ Include ENV["DLR_VISUALIZATION"] = <path-to-Visualization/Extras/SimVis> into your HOME/.julia/config/startup.jl file.
│ 
│ No Renderer is used in Modia3D (so, animation is switched off).
└ @ Modia3D.DLR_Visualization ~/.julia/packages/Modia3D/gFhNg/src/renderer/DLR_Visualization/renderer.jl:87
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of test_solidProperties.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: Pendulum
      Initialization at time = 0.0 s
        initial values:
          │ x │ name    │ start   │ fixed │ nominal │
          ├───┼─────────┼─────────┼───────┼─────────┤
          │ 1 │ rev.phi │ 0.0     │ true  │ 1.0     │
          │ 2 │ rev.w   │ 0.0     │ true  │ 1.0     │

        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
      Simulation started
      progress: integrated up to time = 0.002 s

      Simulation is terminated at time = 4.5 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 8 s (init: 6.9 s, integration: 1.1 s)
        startTime      = 0.0 s
        stopTime       = 4.5 s
        interval       = 0.002 s
        tolerance      = 1.0e-6
        nEquations     = 2 (includes 0 constraints)
        nResults       = 2251
        nSteps         = 272
        nResidues      = 339 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 26
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 2
        h0             = 5.8e-09 s
        hMin           = 5.8e-09 s
        hMax           = 0.021 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_Pendulum.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_DoublePendulum.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Collision_3Elements.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Test_Collision.jl!
WARNING: replacing module Test_Collision.
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Test_Collision.jl!
WARNING: replacing module Test_Collision.
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Test_Collision.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Test_Collision.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Test_Solids.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_ControllerDamper.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_DamperMacro.jl!
... Revolute joint connecting Fourbar.bar3.frame2 with Fourbar.bar2.frame2 is a cut-joint

... Cut-joint rev4 pushed on scene.cutJoints vector
... success of Simulate_FourBar.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_2Rev_ZylZ_BarX.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_3Rev_ZylZ_BarX_BarY.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_InertiaTensor.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_KinematicRevoluteJoints.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Dynamic_Pendulum_xAxis.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Dynamic_Pendulum_yAxis.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Dynamic_Pendulum_zAxis.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Prismatic_xAxis.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Prismatic_yAxis.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Prismatic_zAxis.jl!
... Revolute joint connecting Fourbar.bar3.frame2 with Fourbar.bar2.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector
... success of Move_FourBar_xAxis.jl!
... Revolute joint connecting Fourbar.bar3.frame2 with Fourbar.bar2.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector
... success of Move_FourBar_yAxis.jl!
... Revolute joint connecting Fourbar.bar3.frame2 with Fourbar.bar2.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector
... success of Move_FourBar_zAxis.jl!
... Revolute joint connecting Fourbar.bar3.frame2 with Fourbar.bar2.frame2 is a cut-joint
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)

... Cut-joint rev4 pushed on scene.cutJoints vector
... success of Move_FourBar_noMacros.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of test_massComputation.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Signal1Assembly.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_Signal4Assemblies.jl!
WARNING: replacing module test_massComputation.
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of test_massComputation.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of volume_computation3D_obj.jl!
initAnalysis!(world::Object3D, scene::Scene)
... success of Move_Pendulum.jl!
initAnalysis!(world::Object3D, scene::Scene)
... success of Visualize_Beam.jl!

 ...test_Examples finished!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_DoublePendulum.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: DoublePendulumWithDampers
      Initialization at time = 0.0 s
        initial values:
          │ x │ name     │ start   │ fixed │ nominal │
          ├───┼──────────┼─────────┼───────┼─────────┤
          │ 1 │ rev1.phi │ 0.0     │ true  │ 1.0     │
          │ 2 │ rev2.phi │ 0.0     │ true  │ 1.0     │
          │ 3 │ rev1.w   │ 0.0     │ true  │ 1.0     │
          │ 4 │ rev2.w   │ 0.0     │ true  │ 1.0     │

        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
      Simulation started

      Simulation is terminated at time = 5.0 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.4 s (init: 0.011 s, integration: 0.39 s)
        startTime      = 0.0 s
        stopTime       = 5.0 s
        interval       = 0.001 s
        tolerance      = 1.0e-6
        nEquations     = 4 (includes 0 constraints)
        nResults       = 5001
        nSteps         = 838
        nResidues      = 1326 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 57
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 20
        h0             = 2.3e-09 s
        hMin           = 2.3e-09 s
        hMax           = 0.021 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_DoublePendulumWithDampers.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_FallingBall1.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: FallingBall2
      Initialization at time = 0.0 s
        initial values:
          │ x │ name        │ start   │ fixed │ nominal │
          ├───┼─────────────┼─────────┼───────┼─────────┤
          │ 1 │ prismatic.s │ 1.0     │ true  │ 1.0     │
          │ 2 │ prismatic.v │ 0.0     │ true  │ 1.0     │

        distance(nothing,nothing) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
      Simulation started

      State event (zero-crossing) at time = 0.42811489685392634 s (z[1] < 0)
        distance(ground,sphere) = -7.055380585319071e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 0.44526268199969327 s (z[1] > 0)
        distance(ground,sphere) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 0.9433770396519103 s (z[1] < 0)
        distance(ground,sphere) = -3.011393218121938e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 0.9606607953821766 s (z[1] > 0)
        distance(ground,sphere) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.2478718247891494 s (z[1] < 0)
        distance(ground,sphere) = -3.0335976786144414e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.2653982702645685 s (z[1] > 0)
        distance(ground,sphere) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.4281061965969601 s (z[1] < 0)
        distance(ground,sphere) = -1.8997824147160003e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.4460882504473942 s (z[1] > 0)
        distance(ground,sphere) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.535118393005271 s (z[1] < 0)
        distance(ground,sphere) = -1.6055733131903338e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.5539852289147114 s (z[1] > 0)
        distance(ground,sphere) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.5991689120599837 s (z[1] < 0)
        distance(ground,sphere) = -1.0005017647696235e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.6202004913280015 s (z[1] > 0)
        distance(ground,sphere) = 42.0 (became >= 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      State event (zero-crossing) at time = 1.6381224727696475 s (z[1] < 0)
        distance(ground,sphere) = -1.0934829430819804e-14 (became < 0)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
        restart = Restart

      Simulation is terminated at time = 2.0 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.27 s (init: 0.00095 s, integration: 0.27 s)
        startTime      = 0.0 s
        stopTime       = 2.0 s
        interval       = 0.004 s
        tolerance      = 0.0001
        nEquations     = 2 (includes 0 constraints)
        nResults       = 527
        nSteps         = 533
        nResidues      = 1202 (includes residue calls for Jacobian)
        nZeroCrossings = 2436
        nJac           = 225
        nTimeEvents    = 0
        nStateEvents   = 13
        nRestartEvents = 13
        nErrTestFails  = 31
        h0             = 1.3e-07 s
        hMin           = 1.3e-07 s
        hMax           = 0.38 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_FallingBall2.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: FallingBall3
      Initialization at time = 0.0 s
        initial values:
          │ x  │ name      │ start   │ fixed │ nominal │
          ├────┼───────────┼─────────┼───────┼─────────┤
          │ 1  │ ball.r[1] │ 0.5     │ true  │ 0.5     │
          │ 2  │ ball.r[2] │ 1.0     │ true  │ 1.0     │
          │ 3  │ ball.r[3] │ 0.0     │ true  │ 1.0     │
          │ 4  │ ball.v[1] │ 0.0     │ true  │ 1.0     │
          │ 5  │ ball.v[2] │ 0.0     │ true  │ 1.0     │
          │ 6  │ ball.v[3] │ 0.0     │ true  │ 1.0     │
          │ 7  │ ball.q[1] │ 0.0     │ false │ 1.0     │
          │ 8  │ ball.q[2] │ 0.0     │ false │ 1.0     │
          │ 9  │ ball.q[3] │ 0.0     │ false │ 1.0     │
          │ 10 │ ball.q[4] │ 1.0     │ false │ 1.0     │
          │ 11 │ ball.w[1] │ 0.0     │ true  │ 1.0     │
          │ 12 │ ball.w[2] │ 0.0     │ true  │ 1.0     │
          │ 13 │ ball.w[3] │ 0.0     │ true  │ 1.0     │

        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
      Simulation started

      Simulation is terminated at time = 0.6 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.32 s (init: 0.05 s, integration: 0.27 s)
        startTime      = 0.0 s
        stopTime       = 0.6 s
        interval       = 0.0012 s
        tolerance      = 0.0001
        nEquations     = 13 (includes 1 constraints)
        nResults       = 501
        nSteps         = 20
        nResidues      = 254 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 18
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 0
        h0             = 1.2e-06 s
        hMin           = 1.2e-06 s
        hMax           = 0.29 s
        orderMax       = 3
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_FallingBall3.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: FallingBall4
      Initialization at time = 0.0 s
        initial values:
          │ x  │ name      │ start   │ fixed │ nominal │
          ├────┼───────────┼─────────┼───────┼─────────┤
          │ 1  │ ball.r[1] │ 0.5     │ true  │ 0.5     │
          │ 2  │ ball.r[2] │ 1.0     │ true  │ 1.0     │
          │ 3  │ ball.r[3] │ 0.0     │ true  │ 1.0     │
          │ 4  │ ball.v[1] │ 0.2     │ true  │ 0.2     │
          │ 5  │ ball.v[2] │ 0.0     │ true  │ 1.0     │
          │ 6  │ ball.v[3] │ 0.0     │ true  │ 1.0     │
          │ 7  │ ball.q[1] │ 0.0     │ false │ 1.0     │
          │ 8  │ ball.q[2] │ 0.0     │ false │ 1.0     │
          │ 9  │ ball.q[3] │ 0.0     │ false │ 1.0     │
          │ 10 │ ball.q[4] │ 1.0     │ false │ 1.0     │
          │ 11 │ ball.w[1] │ 0.0     │ true  │ 1.0     │
          │ 12 │ ball.w[2] │ 0.0     │ true  │ 1.0     │
          │ 13 │ ball.w[3] │ 0.0     │ true  │ 1.0     │

        distance(nothing,nothing) = 42.0 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
      Simulation started

      State event (zero-crossing) at time = 0.43986518414421594 s (z[1] < 0)
        distance(ground,ball) = -5.6145151590756154e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 0.45700301358945034 s (z[1] > 0)
        distance(ground,ball) = 2.4430610461620254e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 0.9693926170985809 s (z[1] < 0)
        distance(ground,ball) = -1.0044060784366975e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 0.9866633286225688 s (z[1] > 0)
        distance(ground,ball) = 2.580128680016369e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.2820458049527153 s (z[1] < 0)
        distance(ground,ball) = -4.9466176089334266e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.2995513003162171 s (z[1] > 0)
        distance(ground,ball) = 2.1788710463969355e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.4669165044327848 s (z[1] < 0)
        distance(ground,ball) = -3.4955460699375926e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.4848647386071148 s (z[1] > 0)
        distance(ground,ball) = 2.0172104038421266e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.5762449415336237 s (z[1] < 0)
        distance(ground,ball) = -2.3190974355181797e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.59507117621331 s (z[1] > 0)
        distance(ground,ball) = 1.0006582117549814e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.6414448930042866 s (z[1] < 0)
        distance(ground,ball) = -1.4316556803722815e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.6623351572427054 s (z[1] > 0)
        distance(ground,ball) = 1.0153864206418391e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.6811022828693776 s (z[1] < 0)
        distance(ground,ball) = -1.000492362703909e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      Simulation is terminated at time = 2.5 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.41 s (init: 0.0024 s, integration: 0.41 s)
        startTime      = 0.0 s
        stopTime       = 2.5 s
        interval       = 0.005 s
        tolerance      = 0.0001
        nEquations     = 13 (includes 1 constraints)
        nResults       = 527
        nSteps         = 647
        nResidues      = 4116 (includes residue calls for Jacobian)
        nZeroCrossings = 1610
        nJac           = 243
        nTimeEvents    = 0
        nStateEvents   = 13
        nRestartEvents = 13
        nErrTestFails  = 44
        h0             = 1e-08 s
        hMin           = 1e-08 s
        hMax           = 0.24 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_FallingBall4.jl!
WARNING: replacing module Simulate_FallingBall4.
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: FallingBall4
      Initialization at time = 0.0 s
        initial values:
          │ x  │ name      │ start   │ fixed │ nominal │
          ├────┼───────────┼─────────┼───────┼─────────┤
          │ 1  │ ball.r[1] │ 0.5     │ true  │ 0.5     │
          │ 2  │ ball.r[2] │ 1.0     │ true  │ 1.0     │
          │ 3  │ ball.r[3] │ 0.0     │ true  │ 1.0     │
          │ 4  │ ball.v[1] │ 0.2     │ true  │ 0.2     │
          │ 5  │ ball.v[2] │ 0.0     │ true  │ 1.0     │
          │ 6  │ ball.v[3] │ 0.0     │ true  │ 1.0     │
          │ 7  │ ball.q[1] │ 0.0     │ false │ 1.0     │
          │ 8  │ ball.q[2] │ 0.0     │ false │ 1.0     │
          │ 9  │ ball.q[3] │ 0.0     │ false │ 1.0     │
          │ 10 │ ball.q[4] │ 1.0     │ false │ 1.0     │
          │ 11 │ ball.w[1] │ 0.0     │ true  │ 1.0     │
          │ 12 │ ball.w[2] │ 0.0     │ true  │ 1.0     │
          │ 13 │ ball.w[3] │ 0.0     │ true  │ 1.0     │

        distance(nothing,nothing) = 42.0 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
      Simulation started

      State event (zero-crossing) at time = 0.43986518414421594 s (z[1] < 0)
        distance(ground,ball) = -5.6145151590756154e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 0.45700301358945034 s (z[1] > 0)
        distance(ground,ball) = 2.4430610461620254e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 0.9693926170985809 s (z[1] < 0)
        distance(ground,ball) = -1.0044060784366975e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 0.9866633286225688 s (z[1] > 0)
        distance(ground,ball) = 2.580128680016369e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.2820458049527153 s (z[1] < 0)
        distance(ground,ball) = -4.9466176089334266e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.2995513003162171 s (z[1] > 0)
        distance(ground,ball) = 2.1788710463969355e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.4669165044327848 s (z[1] < 0)
        distance(ground,ball) = -3.4955460699375926e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.4848647386071148 s (z[1] > 0)
        distance(ground,ball) = 2.0172104038421266e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.5762449415336237 s (z[1] < 0)
        distance(ground,ball) = -2.3190974355181797e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.59507117621331 s (z[1] > 0)
        distance(ground,ball) = 1.0006582117549814e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.6414448930042866 s (z[1] < 0)
        distance(ground,ball) = -1.4316556803722815e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.6623351572427054 s (z[1] > 0)
        distance(ground,ball) = 1.0153864206418391e-14 (became >= 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      State event (zero-crossing) at time = 1.6811022828693776 s (z[1] < 0)
        distance(ground,ball) = -1.000492362703909e-14 (became < 0)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
        restart = Restart

      Simulation is terminated at time = 2.5 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.45 s (init: 0.002 s, integration: 0.45 s)
        startTime      = 0.0 s
        stopTime       = 2.5 s
        interval       = 0.005 s
        tolerance      = 0.0001
        nEquations     = 13 (includes 1 constraints)
        nResults       = 527
        nSteps         = 647
        nResidues      = 4116 (includes residue calls for Jacobian)
        nZeroCrossings = 1610
        nJac           = 243
        nTimeEvents    = 0
        nStateEvents   = 13
        nRestartEvents = 13
        nErrTestFails  = 44
        h0             = 1e-08 s
        hMin           = 1e-08 s
        hMax           = 0.24 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_FallingBall4.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: Pendulum
      Initialization at time = 0.0 s
        initial values:
          │ x │ name    │ start   │ fixed │ nominal │
          ├───┼─────────┼─────────┼───────┼─────────┤
          │ 1 │ rev.phi │ 0.0     │ true  │ 1.0     │
          │ 2 │ rev.w   │ 0.0     │ true  │ 1.0     │

        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
      Simulation started

      Simulation is terminated at time = 4.5 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.1 s (init: 0.00097 s, integration: 0.1 s)
        startTime      = 0.0 s
        stopTime       = 4.5 s
        interval       = 0.002 s
        tolerance      = 1.0e-6
        nEquations     = 2 (includes 0 constraints)
        nResults       = 2251
        nSteps         = 272
        nResidues      = 339 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 26
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 2
        h0             = 5.8e-09 s
        hMin           = 5.8e-09 s
        hMax           = 0.021 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_Pendulum.jl!
WARNING: replacing module Simulate_Pendulum.
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_Pendulum.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: PendulumWithController
      Initialization at time = 0.0 s
        initial values:
          │ x │ name    │ start   │ fixed │ nominal │
          ├───┼─────────┼─────────┼───────┼─────────┤
          │ 1 │ rev.phi │ 0.0     │ true  │ 1.0     │
          │ 2 │ c.PI_x  │ 0.0     │ false │ 1.0     │
          │ 3 │ rev.w   │ 0.0     │ true  │ 1.0     │

        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
      Simulation started

      Simulation is terminated at time = 5.0 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.14 s (init: 0.026 s, integration: 0.12 s)
        startTime      = 0.0 s
        stopTime       = 5.0 s
        interval       = 0.002 s
        tolerance      = 0.0001
        nEquations     = 3 (includes 0 constraints)
        nResults       = 2501
        nSteps         = 376
        nResidues      = 568 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 25
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 7
        h0             = 7.1e-07 s
        hMin           = 7.1e-07 s
        hMax           = 0.044 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_PendulumWithController.jl!
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: PendulumWithDamper
      Initialization at time = 0.0 s
        initial values:
          │ x │ name    │ start   │ fixed │ nominal │
          ├───┼─────────┼─────────┼───────┼─────────┤
          │ 1 │ rev.phi │ 0.0     │ true  │ 1.0     │
          │ 2 │ rev.w   │ 0.0     │ true  │ 1.0     │

        for given x, determine consistent DAE variables der(x) (solving a linear equation system)
      Simulation started

      Simulation is terminated at time = 5.0 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.013 s (init: 0.008 s, integration: 0.0055 s)
        startTime      = 0.0 s
        stopTime       = 5.0 s
        interval       = 0.1 s
        tolerance      = 0.0001
        nEquations     = 2 (includes 0 constraints)
        nResults       = 51
        nSteps         = 136
        nResidues      = 230 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 22
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 7
        h0             = 5.8e-07 s
        hMin           = 5.8e-07 s
        hMax           = 0.085 s
        orderMax       = 5
        sparseSolver   = false
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Simulate_PendulumWithDamper.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Move_DoublePendulum.jl!
... Revolute joint connecting Fourbar.bar3.frame2 with Fourbar.bar2.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector
... success of Move_FourBar.jl!
... Revolute joint connecting Fourbar2.bar3.frame2 with Fourbar2.bar2.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector
... ModiaMath.simulate! (version 0.5.1 2019-04-07) to simulate model: Move2
      Initialization at time = 0.0 s
        initial values:
          │ x │ name             │ start   │ fixed │ nominal │
          ├───┼──────────────────┼─────────┼───────┼─────────┤
          │ 1 │ fourbar.rev2.phi │ -1.5708 │ true  │ 1.5708  │
          │ 2 │ fourbar.rev3.phi │ 1.10715 │ true  │ 1.10715 │

        determine consistent DAE variables x,der(x) (with analytical integral over time instant)
      Simulation started

      Simulation is terminated at time = 3.0 s

      Statistics (get help with ?ModiaMath.SimulationStatistics):
        structureOfDAE = DAE_LinearDerivativesAndConstraints
        cpuTime        = 0.038 s (init: 0.011 s, integration: 0.027 s)
        startTime      = 0.0 s
        stopTime       = 3.0 s
        interval       = 0.002 s
        tolerance      = 0.0001
        nEquations     = 2 (includes 2 constraints)
        nResults       = 1501
        nSteps         = 112
        nResidues      = 219 (includes residue calls for Jacobian)
        nZeroCrossings = 0
        nJac           = 19
        nTimeEvents    = 0
        nStateEvents   = 0
        nRestartEvents = 0
        nErrTestFails  = 4
        h0             = 2e-06 s
        hMin           = 2e-06 s
        hMax           = 0.056 s
        orderMax       = 5
        sparseSolver   = false
... success of Move_FourBar2.jl!
... Revolute joint connecting Fourbar.bar3.frame1 with Fourbar.bar4.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector
... success of Move_FourBarCollision1.jl!
WARNING: replacing module Move_FourBar.
... Revolute joint connecting Fourbar.bar3.frame1 with Fourbar.bar4.frame0 is a cut-joint
... Revolute joint connecting Fourbar.bar6.frame1 with Fourbar.bar4.frame2 is a cut-joint

... Cut-joint fourbar.rev4 pushed on scene.cutJoints vector

... Cut-joint fourbar.rev7 pushed on scene.cutJoints vector
... success of Move_FourBar_Collision2.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_SignalAngle.jl!
... ModiaMath.plot(..): Call is ignored, since PyPlot not available.
... success of Test_SignalTorque.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Move_AllVisualObjects.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Move_SolidFileMesh.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_AllVisualObjects.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_Assembly.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_GeometriesWithMaterial.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_GeometriesWithoutMaterial.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_SolidFileMesh.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_Solids.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_Text.jl!
initAnalysis!(assembly::Modia3D.AbstractAssembly;                        analysis::ModiaMath.AnalysisType=ModiaMath.KinematicAnalysis)
... success of Visualize_TextFonts.jl!

... success of runexamples.jl

... success of all tests!
Test Summary: | Pass  Total
Test Modia3D  |   63     63
   Testing Modia3D tests passed 
