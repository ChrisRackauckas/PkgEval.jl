 Resolving package versions...
 Installed RecipesBase ───────────────── v0.7.0
 Installed Trajectories ──────────────── v0.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Arpack ────────────────────── v0.3.1
 Installed DynamicIterators ──────────── v0.3.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed DataStructures ────────────── v0.17.6
 Installed DataValueInterfaces ───────── v1.0.0
 Installed BinDeps ───────────────────── v0.8.10
 Installed GaussianDistributions ─────── v0.3.3
 Installed SpecialFunctions ──────────── v0.8.0
 Installed Kalman ────────────────────── v0.1.1
 Installed PDMats ────────────────────── v0.9.10
 Installed Distributions ─────────────── v0.21.8
 Installed URIParser ─────────────────── v0.4.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed Missings ──────────────────── v0.4.3
 Installed StatsBase ─────────────────── v0.32.0
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Tables ────────────────────── v0.2.11
 Installed Rmath ─────────────────────── v0.5.1
 Installed QuadGK ────────────────────── v2.1.1
 Installed Compat ────────────────────── v2.2.0
 Installed StatsFuns ─────────────────── v0.9.0
  Updating `~/.julia/environments/v1.0/Project.toml`
  [d59c0ba6] + Kalman v0.1.1
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [7d9fca2a] + Arpack v0.3.1
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [31c24e10] + Distributions v0.21.8
  [6c76993d] + DynamicIterators v0.3.0
  [43dcc890] + GaussianDistributions v0.3.3
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [d59c0ba6] + Kalman v0.1.1
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [1fd47b50] + QuadGK v2.1.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [79098fc4] + Rmath v0.5.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.8.0
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2c80a279] + Trajectories v0.1.0
  [30578b45] + URIParser v0.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Arpack ──────────→ `~/.julia/packages/Arpack/cu5By/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
  Building Rmath ───────────→ `~/.julia/packages/Rmath/4wt82/deps/build.log`
   Testing Kalman
 Resolving package versions...
 Installed JSON ──────────────── v0.21.0
 Installed DocStringExtensions ─ v0.8.1
 Installed Parsers ───────────── v0.3.10
 Installed StaticArrays ──────── v0.12.1
 Installed Documenter ────────── v0.24.0
    Status `/tmp/tmpIMktSl/Manifest.toml`
  [7d9fca2a] Arpack v0.3.1
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.21.8
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.0
  [6c76993d] DynamicIterators v0.3.0
  [43dcc890] GaussianDistributions v0.3.3
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [d59c0ba6] Kalman v0.1.1
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [69de0a69] Parsers v0.3.10
  [1fd47b50] QuadGK v2.1.1
  [3cdcf5f2] RecipesBase v0.7.0
  [79098fc4] Rmath v0.5.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2c80a279] Trajectories v0.1.0
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
norm(mean(values(X)) - b) < eps() = false
cov(values(X)) = [5.16049 1.34241; 1.34241 2.43201]
cov((values(U))[end]) = [5.0639 1.29686; 1.29686 2.34206]
Y = Trajectory{Array{Int64,1},Array{Float64,1}}([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1.98489, 0.149009, 0.20528, 3.16066, -1.37346, -0.813855, -1.23085, 0.241737, 1.59123, 2.65036])
X = Trajectory{Array{Int64,1},Array{Tuple{Float64,Float64},1}}([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], Tuple{Float64,Float64}[(1.68325, 1.98489), (-1.84945, 0.149009), (0.523562, 0.20528), (1.78336, 3.16066), (-1.41387, -1.37346), (-1.22192, -0.813855), (-0.726256, -1.23085), (-0.0345313, 0.241737), (2.67509, 1.59123), (2.48379, 2.65036), (0.520712, -0.269145), (1.60464, 0.199253), (-0.0551344, -0.625446), (1.27811, 2.82651), (1.64236, 2.60009), (-0.677314, 0.0935289), (-3.28564, -3.98433), (-0.831862, -0.240067), (-1.19253, -0.850756), (-1.40413, -0.325578), (0.0483287, -0.723203), (-2.60086, -3.14056), (-2.49713, -2.26683), (-2.48154, -1.37612), (-0.837531, -2.59664), (0.711492, -0.207693), (0.0838392, 1.32114), (0.793798, 0.399188), (-0.458759, 0.466834), (0.927868, 1.67848), (-1.676, -2.62191), (-1.62624, -2.08414), (-1.34717, -0.651895), (-0.0942043, -1.53372), (0.32525, -0.162773), (2.1561, 2.04211), (0.363987, 0.127414), (1.36222, 0.290775), (0.909503, 0.883337), (-0.315629, 1.22024), (0.510331, 1.17245), (-2.02452, -2.55087), (-3.89135, -5.28268), (-2.73795, -3.41349), (-2.02606, -3.19727), (-2.84116, -4.00856), (-1.12193, -0.778859), (-0.731909, -0.25969), (-0.0333056, -0.572663), (0.0635496, -1.16349), (-2.6403, -2.54969), (-3.00928, -3.46014), (-0.183866, -0.495467), (-3.26655, -5.5165), (0.488813, 1.33676), (1.74196, 2.21659), (0.889387, 0.229141), (0.282108, -0.426522), (1.2611, 0.578469), (-0.357923, -0.179233), (0.410978, -0.788502), (-0.222254, 0.515133), (0.941739, 1.39426), (0.338901, 0.299271), (2.05392, 1.12859), (2.40159, 2.36235), (0.817958, 1.62421), (0.325228, 1.42915), (0.238674, 0.816603), (1.26251, 1.4404), (-0.502289, -0.259564), (1.34152, 1.5396), (0.367386, 2.21502), (1.08033, 0.660715), (1.0484, 0.34888), (0.619885, 1.03202), (0.0270845, -1.08072), (-4.41615, -6.47754), (-0.0386028, -1.32092), (0.113742, -0.0153399), (0.633016, -0.924232), (1.16872, 2.60891), (1.41299, 1.76696), (-0.448157, -1.43107), (-1.65419, -0.512781), (-1.54481, -1.8428), (-0.148838, 1.35527), (-0.0613957, 0.228531), (0.702361, -0.7819), (0.556986, 1.31274), (-1.20183, -0.642555), (0.18449, -0.155358), (-1.04292, 0.411648), (0.663975, 2.76809), (-0.0521609, 1.11758), (1.38613, 1.72515), (1.08545, 1.04373), (0.538802, 0.497416), (2.72812, 2.30481), (2.32118, 2.71727)])
Xf1 = Trajectory{Array{Int64,1},Array{Gaussian{Float64,Float64},1}}([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], Gaussian{Float64,Float64}[Gaussian{Float64,Float64}(1.528, 0.692308), Gaussian{Float64,Float64}(0.342824, 0.684848), Gaussian{Float64,Float64}(0.1946, 0.684663), Gaussian{Float64,Float64}(2.19465, 0.684659), Gaussian{Float64,Float64}(-0.594318, 0.684658), Gaussian{Float64,Float64}(-0.650919, 0.684658), Gaussian{Float64,Float64}(-0.945345, 0.684658), Gaussian{Float64,Float64}(0.0164544, 0.684658), Gaussian{Float64,Float64}(1.09204, 0.684658), Gaussian{Float64,Float64}(1.98677, 0.684658), Gaussian{Float64,Float64}(0.128984, 0.684658), Gaussian{Float64,Float64}(0.156757, 0.684658), Gaussian{Float64,Float64}(-0.403501, 0.684658), Gaussian{Float64,Float64}(1.87158, 0.684658), Gaussian{Float64,Float64}(2.07526, 0.684658), Gaussian{Float64,Float64}(0.391244, 0.684658), Gaussian{Float64,Float64}(-2.66622, 0.684658), Gaussian{Float64,Float64}(-0.584748, 0.684658), Gaussian{Float64,Float64}(-0.674675, 0.684658), Gaussian{Float64,Float64}(-0.329286, 0.684658), Gaussian{Float64,Float64}(-0.547066, 0.684658), Gaussian{Float64,Float64}(-2.23647, 0.684658), Gaussian{Float64,Float64}(-1.90463, 0.684658), Gaussian{Float64,Float64}(-1.24248, 0.684658), Gaussian{Float64,Float64}(-1.97371, 0.684658), Gaussian{Float64,Float64}(-0.453396, 0.684658), Gaussian{Float64,Float64}(0.833046, 0.684658), Gaussian{Float64,Float64}(0.404654, 0.684658), Gaussian{Float64,Float64}(0.383424, 0.684658), Gaussian{Float64,Float64}(1.20964, 0.684658), Gaussian{Float64,Float64}(-1.60439, 0.684658), Gaussian{Float64,Float64}(-1.67989, 0.684658), Gaussian{Float64,Float64}(-0.711195, 0.684658), Gaussian{Float64,Float64}(-1.16221, 0.684658), Gaussian{Float64,Float64}(-0.29469, 0.684658), Gaussian{Float64,Float64}(1.35169, 0.684658), Gaussian{Float64,Float64}(0.300356, 0.684658), Gaussian{Float64,Float64}(0.246439, 0.684658), Gaussian{Float64,Float64}(0.64364, 0.684658), Gaussian{Float64,Float64}(0.936932, 0.684658), Gaussian{Float64,Float64}(0.950456, 0.684658), Gaussian{Float64,Float64}(-1.59661, 0.684658), Gaussian{Float64,Float64}(-3.86857, 0.684658), Gaussian{Float64,Float64}(-2.94703, 0.684658), Gaussian{Float64,Float64}(-2.6537, 0.684658), Gaussian{Float64,Float64}(-3.1629, 0.684658), Gaussian{Float64,Float64}(-1.03195, 0.684658), Gaussian{Float64,Float64}(-0.340507, 0.684658), Gaussian{Float64,Float64}(-0.445766, 0.684658), Gaussian{Float64,Float64}(-0.866875, 0.684658), Gaussian{Float64,Float64}(-1.88235, 0.684658), Gaussian{Float64,Float64}(-2.6658, 0.684658), Gaussian{Float64,Float64}(-0.759545, 0.684658), Gaussian{Float64,Float64}(-3.89668, 0.684658), Gaussian{Float64,Float64}(0.300832, 0.684658), Gaussian{Float64,Float64}(1.56504, 0.684658), Gaussian{Float64,Float64}(0.403644, 0.684658), Gaussian{Float64,Float64}(-0.228379, 0.684658), Gaussian{Float64,Float64}(0.360045, 0.684658), Gaussian{Float64,Float64}(-0.0659446, 0.684658), Gaussian{Float64,Float64}(-0.550252, 0.684658), Gaussian{Float64,Float64}(0.265931, 0.684658), Gaussian{Float64,Float64}(0.996525, 0.684658), Gaussian{Float64,Float64}(0.362022, 0.684658), Gaussian{Float64,Float64}(0.829782, 0.684658), Gaussian{Float64,Float64}(1.74824, 0.684658), Gaussian{Float64,Float64}(1.38767, 0.684658), Gaussian{Float64,Float64}(1.19728, 0.684658), Gaussian{Float64,Float64}(0.74787, 0.684658), Gaussian{Float64,Float64}(1.1041, 0.684658), Gaussian{Float64,Float64}(-0.00362859, 0.684658), Gaussian{Float64,Float64}(1.05353, 0.684658), Gaussian{Float64,Float64}(1.68265, 0.684658), Gaussian{Float64,Float64}(0.717668, 0.684658), Gaussian{Float64,Float64}(0.352019, 0.684658), Gaussian{Float64,Float64}(0.762086, 0.684658), Gaussian{Float64,Float64}(-0.619764, 0.684658), Gaussian{Float64,Float64}(-4.53262, 0.684658), Gaussian{Float64,Float64}(-1.61904, 0.684658), Gaussian{Float64,Float64}(-0.265778, 0.684658), Gaussian{Float64,Float64}(-0.674688, 0.684658), Gaussian{Float64,Float64}(1.67984, 0.684658), Gaussian{Float64,Float64}(1.47463, 0.684658), Gaussian{Float64,Float64}(-0.74729, 0.684658), Gaussian{Float64,Float64}(-0.468906, 0.684658), Gaussian{Float64,Float64}(-1.33562, 0.684658), Gaussian{Float64,Float64}(0.717305, 0.684658), Gaussian{Float64,Float64}(0.269564, 0.684658), Gaussian{Float64,Float64}(-0.492832, 0.684658), Gaussian{Float64,Float64}(0.821075, 0.684658), Gaussian{Float64,Float64}(-0.310471, 0.684658), Gaussian{Float64,Float64}(-0.155319, 0.684658), Gaussian{Float64,Float64}(0.257349, 0.684658), Gaussian{Float64,Float64}(1.93577, 0.684658), Gaussian{Float64,Float64}(1.07038, 0.684658), Gaussian{Float64,Float64}(1.34991, 0.684658), Gaussian{Float64,Float64}(0.927437, 0.684658), Gaussian{Float64,Float64}(0.48679, 0.684658), Gaussian{Float64,Float64}(1.65476, 0.684658), Gaussian{Float64,Float64}(2.12131, 0.684658)])
Xf2 = Trajectory{Array{Int64,1},Array{Gaussian{Float64,Float64},1}}([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], Gaussian{Float64,Float64}[Gaussian{Float64,Float64}(1.528, 0.692308), Gaussian{Float64,Float64}(0.342824, 0.684848), Gaussian{Float64,Float64}(0.1946, 0.684663), Gaussian{Float64,Float64}(2.19465, 0.684659), Gaussian{Float64,Float64}(-0.594318, 0.684658), Gaussian{Float64,Float64}(-0.650919, 0.684658), Gaussian{Float64,Float64}(-0.945345, 0.684658), Gaussian{Float64,Float64}(0.0164544, 0.684658), Gaussian{Float64,Float64}(1.09204, 0.684658), Gaussian{Float64,Float64}(1.98677, 0.684658), Gaussian{Float64,Float64}(0.128984, 0.684658), Gaussian{Float64,Float64}(0.156757, 0.684658), Gaussian{Float64,Float64}(-0.403501, 0.684658), Gaussian{Float64,Float64}(1.87158, 0.684658), Gaussian{Float64,Float64}(2.07526, 0.684658), Gaussian{Float64,Float64}(0.391244, 0.684658), Gaussian{Float64,Float64}(-2.66622, 0.684658), Gaussian{Float64,Float64}(-0.584748, 0.684658), Gaussian{Float64,Float64}(-0.674675, 0.684658), Gaussian{Float64,Float64}(-0.329286, 0.684658), Gaussian{Float64,Float64}(-0.547066, 0.684658), Gaussian{Float64,Float64}(-2.23647, 0.684658), Gaussian{Float64,Float64}(-1.90463, 0.684658), Gaussian{Float64,Float64}(-1.24248, 0.684658), Gaussian{Float64,Float64}(-1.97371, 0.684658), Gaussian{Float64,Float64}(-0.453396, 0.684658), Gaussian{Float64,Float64}(0.833046, 0.684658), Gaussian{Float64,Float64}(0.404654, 0.684658), Gaussian{Float64,Float64}(0.383424, 0.684658), Gaussian{Float64,Float64}(1.20964, 0.684658), Gaussian{Float64,Float64}(-1.60439, 0.684658), Gaussian{Float64,Float64}(-1.67989, 0.684658), Gaussian{Float64,Float64}(-0.711195, 0.684658), Gaussian{Float64,Float64}(-1.16221, 0.684658), Gaussian{Float64,Float64}(-0.29469, 0.684658), Gaussian{Float64,Float64}(1.35169, 0.684658), Gaussian{Float64,Float64}(0.300356, 0.684658), Gaussian{Float64,Float64}(0.246439, 0.684658), Gaussian{Float64,Float64}(0.64364, 0.684658), Gaussian{Float64,Float64}(0.936932, 0.684658), Gaussian{Float64,Float64}(0.950456, 0.684658), Gaussian{Float64,Float64}(-1.59661, 0.684658), Gaussian{Float64,Float64}(-3.86857, 0.684658), Gaussian{Float64,Float64}(-2.94703, 0.684658), Gaussian{Float64,Float64}(-2.6537, 0.684658), Gaussian{Float64,Float64}(-3.1629, 0.684658), Gaussian{Float64,Float64}(-1.03195, 0.684658), Gaussian{Float64,Float64}(-0.340507, 0.684658), Gaussian{Float64,Float64}(-0.445766, 0.684658), Gaussian{Float64,Float64}(-0.866875, 0.684658), Gaussian{Float64,Float64}(-1.88235, 0.684658), Gaussian{Float64,Float64}(-2.6658, 0.684658), Gaussian{Float64,Float64}(-0.759545, 0.684658), Gaussian{Float64,Float64}(-3.89668, 0.684658), Gaussian{Float64,Float64}(0.300832, 0.684658), Gaussian{Float64,Float64}(1.56504, 0.684658), Gaussian{Float64,Float64}(0.403644, 0.684658), Gaussian{Float64,Float64}(-0.228379, 0.684658), Gaussian{Float64,Float64}(0.360045, 0.684658), Gaussian{Float64,Float64}(-0.0659446, 0.684658), Gaussian{Float64,Float64}(-0.550252, 0.684658), Gaussian{Float64,Float64}(0.265931, 0.684658), Gaussian{Float64,Float64}(0.996525, 0.684658), Gaussian{Float64,Float64}(0.362022, 0.684658), Gaussian{Float64,Float64}(0.829782, 0.684658), Gaussian{Float64,Float64}(1.74824, 0.684658), Gaussian{Float64,Float64}(1.38767, 0.684658), Gaussian{Float64,Float64}(1.19728, 0.684658), Gaussian{Float64,Float64}(0.74787, 0.684658), Gaussian{Float64,Float64}(1.1041, 0.684658), Gaussian{Float64,Float64}(-0.00362859, 0.684658), Gaussian{Float64,Float64}(1.05353, 0.684658), Gaussian{Float64,Float64}(1.68265, 0.684658), Gaussian{Float64,Float64}(0.717668, 0.684658), Gaussian{Float64,Float64}(0.352019, 0.684658), Gaussian{Float64,Float64}(0.762086, 0.684658), Gaussian{Float64,Float64}(-0.619764, 0.684658), Gaussian{Float64,Float64}(-4.53262, 0.684658), Gaussian{Float64,Float64}(-1.61904, 0.684658), Gaussian{Float64,Float64}(-0.265778, 0.684658), Gaussian{Float64,Float64}(-0.674688, 0.684658), Gaussian{Float64,Float64}(1.67984, 0.684658), Gaussian{Float64,Float64}(1.47463, 0.684658), Gaussian{Float64,Float64}(-0.74729, 0.684658), Gaussian{Float64,Float64}(-0.468906, 0.684658), Gaussian{Float64,Float64}(-1.33562, 0.684658), Gaussian{Float64,Float64}(0.717305, 0.684658), Gaussian{Float64,Float64}(0.269564, 0.684658), Gaussian{Float64,Float64}(-0.492832, 0.684658), Gaussian{Float64,Float64}(0.821075, 0.684658), Gaussian{Float64,Float64}(-0.310471, 0.684658), Gaussian{Float64,Float64}(-0.155319, 0.684658), Gaussian{Float64,Float64}(0.257349, 0.684658), Gaussian{Float64,Float64}(1.93577, 0.684658), Gaussian{Float64,Float64}(1.07038, 0.684658), Gaussian{Float64,Float64}(1.34991, 0.684658), Gaussian{Float64,Float64}(0.927437, 0.684658), Gaussian{Float64,Float64}(0.48679, 0.684658), Gaussian{Float64,Float64}(1.65476, 0.684658), Gaussian{Float64,Float64}(2.12131, 0.684658)])
Xf = Trajectory{Array{Int64,1},Array{Tuple{Gaussian{Float64,Float64},Gaussian{Float64,Float64},Float64},1}}([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], Tuple{Gaussian{Float64,Float64},Gaussian{Float64,Float64},Float64}[(Gaussian{Float64,Float64}(1.528, 0.692308), Gaussian{Float64,Float64}(0.5, 2.25), -1.84748), (Gaussian{Float64,Float64}(0.342824, 0.684848), Gaussian{Float64,Float64}(0.763999, 2.17308), -3.40337), (Gaussian{Float64,Float64}(0.1946, 0.684663), Gaussian{Float64,Float64}(0.171412, 2.17121), -4.89954), (Gaussian{Float64,Float64}(2.19465, 0.684659), Gaussian{Float64,Float64}(0.0973, 2.17117), -7.87514), (Gaussian{Float64,Float64}(-0.594318, 0.684658), Gaussian{Float64,Float64}(1.09733, 2.17116), -10.3337), (Gaussian{Float64,Float64}(-0.650919, 0.684658), Gaussian{Float64,Float64}(-0.297159, 2.17116), -11.8718), (Gaussian{Float64,Float64}(-0.945345, 0.684658), Gaussian{Float64,Float64}(-0.32546, 2.17116), -13.497), (Gaussian{Float64,Float64}(0.0164544, 0.684658), Gaussian{Float64,Float64}(-0.472672, 2.17116), -15.0735), (Gaussian{Float64,Float64}(1.09204, 0.684658), Gaussian{Float64,Float64}(0.0082272, 2.17116), -16.9645), (Gaussian{Float64,Float64}(1.98677, 0.684658), Gaussian{Float64,Float64}(0.54602, 2.17116), -19.1587), (Gaussian{Float64,Float64}(0.128984, 0.684658), Gaussian{Float64,Float64}(0.993387, 2.17116), -20.9061), (Gaussian{Float64,Float64}(0.156757, 0.684658), Gaussian{Float64,Float64}(0.0644919, 2.17116), -22.4049), (Gaussian{Float64,Float64}(-0.403501, 0.684658), Gaussian{Float64,Float64}(0.0783787, 2.17116), -23.979), (Gaussian{Float64,Float64}(1.87158, 0.684658), Gaussian{Float64,Float64}(-0.20175, 2.17116), -26.9209), (Gaussian{Float64,Float64}(2.07526, 0.684658), Gaussian{Float64,Float64}(0.935788, 2.17116), -28.8536), (Gaussian{Float64,Float64}(0.391244, 0.684658), Gaussian{Float64,Float64}(1.03763, 2.17116), -30.4901), (Gaussian{Float64,Float64}(-2.66622, 0.684658), Gaussian{Float64,Float64}(0.195622, 2.17116), -34.7409), (Gaussian{Float64,Float64}(-0.584748, 0.684658), Gaussian{Float64,Float64}(-1.33311, 2.17116), -36.4253), (Gaussian{Float64,Float64}(-0.674675, 0.684658), Gaussian{Float64,Float64}(-0.292374, 2.17116), -37.9705), (Gaussian{Float64,Float64}(-0.329286, 0.684658), Gaussian{Float64,Float64}(-0.337337, 2.17116), -39.4665), (Gaussian{Float64,Float64}(-0.547066, 0.684658), Gaussian{Float64,Float64}(-0.164643, 2.17116), -41.0116), (Gaussian{Float64,Float64}(-2.23647, 0.684658), Gaussian{Float64,Float64}(-0.273533, 2.17116), -43.8037), (Gaussian{Float64,Float64}(-1.90463, 0.684658), Gaussian{Float64,Float64}(-1.11823, 2.17116), -45.5077), (Gaussian{Float64,Float64}(-1.24248, 0.684658), Gaussian{Float64,Float64}(-0.952316, 2.17116), -47.032), (Gaussian{Float64,Float64}(-1.97371, 0.684658), Gaussian{Float64,Float64}(-0.62124, 2.17116), -49.1432), (Gaussian{Float64,Float64}(-0.453396, 0.684658), Gaussian{Float64,Float64}(-0.986857, 2.17116), -50.7349), (Gaussian{Float64,Float64}(0.833046, 0.684658), Gaussian{Float64,Float64}(-0.226698, 2.17116), -52.6087), (Gaussian{Float64,Float64}(0.404654, 0.684658), Gaussian{Float64,Float64}(0.416523, 2.17116), -54.1047), (Gaussian{Float64,Float64}(0.383424, 0.684658), Gaussian{Float64,Float64}(0.202327, 2.17116), -55.6117), (Gaussian{Float64,Float64}(1.20964, 0.684658), Gaussian{Float64,Float64}(0.191712, 2.17116), -57.4562), (Gaussian{Float64,Float64}(-1.60439, 0.684658), Gaussian{Float64,Float64}(0.60482, 2.17116), -60.5939), (Gaussian{Float64,Float64}(-1.67989, 0.684658), Gaussian{Float64,Float64}(-0.802193, 2.17116), -62.349), (Gaussian{Float64,Float64}(-0.711195, 0.684658), Gaussian{Float64,Float64}(-0.839945, 2.17116), -63.8505), (Gaussian{Float64,Float64}(-1.16221, 0.684658), Gaussian{Float64,Float64}(-0.355597, 2.17116), -65.5654), (Gaussian{Float64,Float64}(-0.29469, 0.684658), Gaussian{Float64,Float64}(-0.581104, 2.17116), -67.0889), (Gaussian{Float64,Float64}(1.35169, 0.684658), Gaussian{Float64,Float64}(-0.147345, 2.17116), -69.3408), (Gaussian{Float64,Float64}(0.300356, 0.684658), Gaussian{Float64,Float64}(0.675843, 2.17116), -70.8842), (Gaussian{Float64,Float64}(0.246439, 0.684658), Gaussian{Float64,Float64}(0.150178, 2.17116), -72.3833), (Gaussian{Float64,Float64}(0.64364, 0.684658), Gaussian{Float64,Float64}(0.123219, 2.17116), -73.9704), (Gaussian{Float64,Float64}(0.936932, 0.684658), Gaussian{Float64,Float64}(0.32182, 2.17116), -75.5936), (Gaussian{Float64,Float64}(0.950456, 0.684658), Gaussian{Float64,Float64}(0.468466, 2.17116), -77.1677), (Gaussian{Float64,Float64}(-1.59661, 0.684658), Gaussian{Float64,Float64}(0.475228, 2.17116), -80.1076), (Gaussian{Float64,Float64}(-3.86857, 0.684658), Gaussian{Float64,Float64}(-0.798307, 2.17116), -84.7742), (Gaussian{Float64,Float64}(-2.94703, 0.684658), Gaussian{Float64,Float64}(-1.93428, 2.17116), -86.6152), (Gaussian{Float64,Float64}(-2.6537, 0.684658), Gaussian{Float64,Float64}(-1.47352, 2.17116), -88.5797), (Gaussian{Float64,Float64}(-3.1629, 0.684658), Gaussian{Float64,Float64}(-1.32685, 2.17116), -91.2096), (Gaussian{Float64,Float64}(-1.03195, 0.684658), Gaussian{Float64,Float64}(-1.58145, 2.17116), -92.8071), (Gaussian{Float64,Float64}(-0.340507, 0.684658), Gaussian{Float64,Float64}(-0.515975, 2.17116), -94.3135), (Gaussian{Float64,Float64}(-0.445766, 0.684658), Gaussian{Float64,Float64}(-0.170254, 2.17116), -95.835), (Gaussian{Float64,Float64}(-0.866875, 0.684658), Gaussian{Float64,Float64}(-0.222883, 2.17116), -97.4705), (Gaussian{Float64,Float64}(-1.88235, 0.684658), Gaussian{Float64,Float64}(-0.433437, 2.17116), -99.6726), (Gaussian{Float64,Float64}(-2.6658, 0.684658), Gaussian{Float64,Float64}(-0.941174, 2.17116), -102.169), (Gaussian{Float64,Float64}(-0.759545, 0.684658), Gaussian{Float64,Float64}(-1.3329, 2.17116), -103.776), (Gaussian{Float64,Float64}(-3.89668, 0.684658), Gaussian{Float64,Float64}(-0.379773, 2.17116), -109.432), (Gaussian{Float64,Float64}(0.300832, 0.684658), Gaussian{Float64,Float64}(-1.94834, 2.17116), -112.629), (Gaussian{Float64,Float64}(1.56504, 0.684658), Gaussian{Float64,Float64}(0.150416, 2.17116), -114.799), (Gaussian{Float64,Float64}(0.403644, 0.684658), Gaussian{Float64,Float64}(0.78252, 2.17116), -116.343), (Gaussian{Float64,Float64}(-0.228379, 0.684658), Gaussian{Float64,Float64}(0.201822, 2.17116), -117.901), (Gaussian{Float64,Float64}(0.360045, 0.684658), Gaussian{Float64,Float64}(-0.114189, 2.17116), -119.473), (Gaussian{Float64,Float64}(-0.0659446, 0.684658), Gaussian{Float64,Float64}(0.180022, 2.17116), -120.989), (Gaussian{Float64,Float64}(-0.550252, 0.684658), Gaussian{Float64,Float64}(-0.0329723, 2.17116), -122.575), (Gaussian{Float64,Float64}(0.265931, 0.684658), Gaussian{Float64,Float64}(-0.275126, 2.17116), -124.169), (Gaussian{Float64,Float64}(0.996525, 0.684658), Gaussian{Float64,Float64}(0.132966, 2.17116), -125.916), (Gaussian{Float64,Float64}(0.362022, 0.684658), Gaussian{Float64,Float64}(0.498262, 2.17116), -127.419), (Gaussian{Float64,Float64}(0.829782, 0.684658), Gaussian{Float64,Float64}(0.181011, 2.17116), -129.056), (Gaussian{Float64,Float64}(1.74824, 0.684658), Gaussian{Float64,Float64}(0.414891, 2.17116), -131.15), (Gaussian{Float64,Float64}(1.38767, 0.684658), Gaussian{Float64,Float64}(0.874118, 2.17116), -132.735), (Gaussian{Float64,Float64}(1.19728, 0.684658), Gaussian{Float64,Float64}(0.693837, 2.17116), -134.316), (Gaussian{Float64,Float64}(0.74787, 0.684658), Gaussian{Float64,Float64}(0.598638, 2.17116), -135.819), (Gaussian{Float64,Float64}(1.1041, 0.684658), Gaussian{Float64,Float64}(0.373935, 2.17116), -137.495), (Gaussian{Float64,Float64}(-0.00362859, 0.684658), Gaussian{Float64,Float64}(0.55205, 2.17116), -139.095), (Gaussian{Float64,Float64}(1.05353, 0.684658), Gaussian{Float64,Float64}(-0.00181429, 2.17116), -140.965), (Gaussian{Float64,Float64}(1.68265, 0.684658), Gaussian{Float64,Float64}(0.526764, 2.17116), -142.911), (Gaussian{Float64,Float64}(0.717668, 0.684658), Gaussian{Float64,Float64}(0.841323, 2.17116), -144.412), (Gaussian{Float64,Float64}(0.352019, 0.684658), Gaussian{Float64,Float64}(0.358834, 2.17116), -145.908), (Gaussian{Float64,Float64}(0.762086, 0.684658), Gaussian{Float64,Float64}(0.176009, 2.17116), -147.519), (Gaussian{Float64,Float64}(-0.619764, 0.684658), Gaussian{Float64,Float64}(0.381043, 2.17116), -149.352), (Gaussian{Float64,Float64}(-4.53262, 0.684658), Gaussian{Float64,Float64}(-0.309882, 2.17116), -156.846), (Gaussian{Float64,Float64}(-1.61904, 0.684658), Gaussian{Float64,Float64}(-2.26631, 2.17116), -158.483), (Gaussian{Float64,Float64}(-0.265778, 0.684658), Gaussian{Float64,Float64}(-0.809519, 2.17116), -160.078), (Gaussian{Float64,Float64}(-0.674688, 0.684658), Gaussian{Float64,Float64}(-0.132889, 2.17116), -161.673), (Gaussian{Float64,Float64}(1.67984, 0.684658), Gaussian{Float64,Float64}(-0.337344, 2.17116), -164.538), (Gaussian{Float64,Float64}(1.47463, 0.684658), Gaussian{Float64,Float64}(0.839918, 2.17116), -166.169), (Gaussian{Float64,Float64}(-0.74729, 0.684658), Gaussian{Float64,Float64}(0.737313, 2.17116), -168.407), (Gaussian{Float64,Float64}(-0.468906, 0.684658), Gaussian{Float64,Float64}(-0.373645, 2.17116), -169.906), (Gaussian{Float64,Float64}(-1.33562, 0.684658), Gaussian{Float64,Float64}(-0.234453, 2.17116), -171.809), (Gaussian{Float64,Float64}(0.717305, 0.684658), Gaussian{Float64,Float64}(-0.66781, 2.17116), -173.951), (Gaussian{Float64,Float64}(0.269564, 0.684658), Gaussian{Float64,Float64}(0.358653, 2.17116), -175.449), (Gaussian{Float64,Float64}(-0.492832, 0.684658), Gaussian{Float64,Float64}(0.134782, 2.17116), -177.078), (Gaussian{Float64,Float64}(0.821075, 0.684658), Gaussian{Float64,Float64}(-0.246416, 2.17116), -178.957), (Gaussian{Float64,Float64}(-0.310471, 0.684658), Gaussian{Float64,Float64}(0.410538, 2.17116), -180.628), (Gaussian{Float64,Float64}(-0.155319, 0.684658), Gaussian{Float64,Float64}(-0.155235, 2.17116), -182.124), (Gaussian{Float64,Float64}(0.257349, 0.684658), Gaussian{Float64,Float64}(-0.0776597, 2.17116), -183.658), (Gaussian{Float64,Float64}(1.93577, 0.684658), Gaussian{Float64,Float64}(0.128674, 2.17116), -186.252), (Gaussian{Float64,Float64}(1.07038, 0.684658), Gaussian{Float64,Float64}(0.967887, 2.17116), -187.752), (Gaussian{Float64,Float64}(1.34991, 0.684658), Gaussian{Float64,Float64}(0.535189, 2.17116), -189.471), (Gaussian{Float64,Float64}(0.927437, 0.684658), Gaussian{Float64,Float64}(0.674954, 2.17116), -190.988), (Gaussian{Float64,Float64}(0.48679, 0.684658), Gaussian{Float64,Float64}(0.463718, 2.17116), -192.484), (Gaussian{Float64,Float64}(1.65476, 0.684658), Gaussian{Float64,Float64}(0.243395, 2.17116), -194.65), (Gaussian{Float64,Float64}(2.12131, 0.684658), Gaussian{Float64,Float64}(0.827381, 2.17116), -196.71)])
x = (0.8416261045264904, 1.143260830523346)
Y = Pair{Int64,Float64}[1=>1.14326, 2=>-0.271804, 3=>-0.00512675]
Xs = Trajectory{Array{Int64,1},Array{Gaussian{Float64,Float64},1}}([1, 2, 3], Gaussian{Float64,Float64}[Gaussian{Float64,Float64}(0.864351, 0.653607), Gaussian{Float64,Float64}(-0.0357287, 0.647874), Gaussian{Float64,Float64}(-0.00937261, 0.684663)])
μ = [0.5, 0.25, 0.125, 0.5, 0.25, 0.125]
Σ = [2.25 1.125 0.5625 2.25 1.125 0.5625; 1.125 2.5625 1.28125 1.125 2.5625 1.28125; 0.5625 1.28125 2.64063 0.5625 1.28125 2.64063; 2.25 1.125 0.5625 3.25 1.125 0.5625; 1.125 2.5625 1.28125 1.125 3.5625 1.28125; 0.5625 1.28125 2.64063 0.5625 1.28125 3.64063]
v = [1.14326, -0.271804, -0.00512675]
x = (1.683252209052981, 1.9848869350498366)
Y = Pair{Int64,Float64}[1=>1.98489, 2=>0.149009, 3=>0.20528]
Xs = Trajectory{Array{Int64,1},Array{Gaussian{Float64,Float64},1}}([1, 2, 3], Gaussian{Float64,Float64}[Gaussian{Float64,Float64}(1.44511, 0.479495), Gaussian{Float64,Float64}(0.343895, 0.643533), Gaussian{Float64,Float64}(0.194169, 0.684543)])
μ = [1.0, 0.5, 0.25, 1.0, 0.5, 0.25]
Σ = [1.0 0.5 0.25 1.0 0.5 0.25; 0.5 2.25 1.125 0.5 2.25 1.125; 0.25 1.125 2.5625 0.25 1.125 2.5625; 1.0 0.5 0.25 2.0 0.5 0.25; 0.5 2.25 1.125 0.5 3.25 1.125; 0.25 1.125 2.5625 0.25 1.125 3.5625]
v = [1.98489, 0.149009, 0.20528]
Xf = Trajectory{Array{Int64,1},Array{Gaussian{Array{Float64,1},Array{Float64,2}},1}}([1, 2, 3], Gaussian{Array{Float64,1},Array{Float64,2}}[Gaussian{Array{Float64,1},Array{Float64,2}}([0.979021, -0.0474434], [0.521531 0.15311; 0.15311 1.601]), Gaussian{Array{Float64,1},Array{Float64,2}}([0.229674, -0.481382], [0.513741 0.335039; 0.335039 1.77451]), Gaussian{Array{Float64,1},Array{Float64,2}}([-0.0282583, -0.388032], [0.553662 0.386698; 0.386698 1.75219])])
(X, ll) = (Trajectory{Array{Int64,1},Array{Gaussian{Array{Float64,1},Array{Float64,2}},1}}([1, 2, 3], Gaussian{Array{Float64,1},Array{Float64,2}}[Gaussian{Array{Float64,1},Array{Float64,2}}([0.979021, -0.0474434], [0.521531 0.15311; 0.15311 1.601]), Gaussian{Array{Float64,1},Array{Float64,2}}([0.229674, -0.481382], [0.513741 0.335039; 0.335039 1.77451]), Gaussian{Array{Float64,1},Array{Float64,2}}([-0.0282583, -0.388032], [0.553662 0.386698; 0.386698 1.75219])]), -4.176618954097374)
Test Summary: |
Online        | No tests
   Testing Kalman tests passed 
