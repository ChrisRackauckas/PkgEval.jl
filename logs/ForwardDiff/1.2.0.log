 Resolving package versions...
 Installed DiffRules ──────────── v0.1.0
 Installed Compat ─────────────── v2.2.0
 Installed DiffResults ────────── v0.0.4
 Installed CommonSubexpressions ─ v0.2.0
 Installed BinaryProvider ─────── v0.5.8
 Installed StaticArrays ───────── v0.12.1
 Installed SpecialFunctions ───── v0.8.0
 Installed ForwardDiff ────────── v0.10.6
 Installed NaNMath ────────────── v0.3.3
 Installed URIParser ──────────── v0.4.0
 Installed BinDeps ────────────── v0.8.10
  Updating `~/.julia/environments/v1.2/Project.toml`
  [f6369f11] + ForwardDiff v0.10.6
  Updating `~/.julia/environments/v1.2/Manifest.toml`
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [f6369f11] + ForwardDiff v0.10.6
  [77ba4419] + NaNMath v0.3.3
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.12.1
  [30578b45] + URIParser v0.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
   Testing ForwardDiff
 Resolving package versions...
 Installed Calculus ── v0.5.1
 Installed DiffTests ─ v0.1.0
    Status `/tmp/jl_mX8mrD/Manifest.toml`
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [de460e47] DiffTests v0.1.0
  [f6369f11] ForwardDiff v0.10.6
  [77ba4419] NaNMath v0.3.3
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Testing Partials...
  ...testing Partials{0,Int64}
  ...testing Partials{0,Float32}
  ...testing Partials{0,Float64}
  ...testing Partials{3,Int64}
  ...testing Partials{3,Float32}
  ...testing Partials{3,Float64}
done (took 7.525284507 seconds).
Testing Dual...
  ...testing Dual{TestTag(),Int64,0} and Dual{TestTag(),Dual{TestTag(),Int64,0},0}
  ...testing Dual{TestTag(),Float32,0} and Dual{TestTag(),Dual{TestTag(),Float32,0},0}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
  ...testing Dual{TestTag(),Int64,0} and Dual{TestTag(),Dual{TestTag(),Int64,4},0}
  ...testing Dual{TestTag(),Float32,0} and Dual{TestTag(),Dual{TestTag(),Float32,4},0}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
  ...testing Dual{TestTag(),Int64,3} and Dual{TestTag(),Dual{TestTag(),Int64,0},3}
  ...testing Dual{TestTag(),Float32,3} and Dual{TestTag(),Dual{TestTag(),Float32,0},3}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
  ...testing Dual{TestTag(),Int64,3} and Dual{TestTag(),Dual{TestTag(),Int64,4},3}
  ...testing Dual{TestTag(),Float32,3} and Dual{TestTag(),Dual{TestTag(),Float32,4},3}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
Test Summary:          | Pass  Total
Exponentiation of zero |    3      3
done (took 32.525923534 seconds).
Testing derivative functionality...
  ...testing num2num_1
  ...testing num2num_2
  ...testing num2num_3
  ...testing num2num_4
  ...testing num2num_5
  ...testing identity
  ...testing num2arr_1
  ...testing num2arr_1!
Test Summary:                     | Pass  Total
exponential function at base zero |    4      4
done (took 6.965402205 seconds).
Testing gradient functionality...
  ...running hardcoded test with chunk size = 1 and tag = nothing
  ...running hardcoded test with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...running hardcoded test with chunk size = 2 and tag = nothing
  ...running hardcoded test with chunk size = 2 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...running hardcoded test with chunk size = 3 and tag = nothing
  ...running hardcoded test with chunk size = 3 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing vec2num_1 with chunk size = 1 and tag = nothing
  ...testing vec2num_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 4 and tag = nothing
  ...testing vec2num_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 6 and tag = nothing
  ...testing vec2num_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 12 and tag = nothing
  ...testing vec2num_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 13 and tag = nothing
  ...testing vec2num_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_2 with chunk size = 1 and tag = nothing
  ...testing vec2num_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 4 and tag = nothing
  ...testing vec2num_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 6 and tag = nothing
  ...testing vec2num_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 12 and tag = nothing
  ...testing vec2num_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 13 and tag = nothing
  ...testing vec2num_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_3 with chunk size = 1 and tag = nothing
  ...testing vec2num_3 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 4 and tag = nothing
  ...testing vec2num_3 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 6 and tag = nothing
  ...testing vec2num_3 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 12 and tag = nothing
  ...testing vec2num_3 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 13 and tag = nothing
  ...testing vec2num_3 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_4 with chunk size = 1 and tag = nothing
  ...testing vec2num_4 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 4 and tag = nothing
  ...testing vec2num_4 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 6 and tag = nothing
  ...testing vec2num_4 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 12 and tag = nothing
  ...testing vec2num_4 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 13 and tag = nothing
  ...testing vec2num_4 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_5 with chunk size = 1 and tag = nothing
  ...testing vec2num_5 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 4 and tag = nothing
  ...testing vec2num_5 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 6 and tag = nothing
  ...testing vec2num_5 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 12 and tag = nothing
  ...testing vec2num_5 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 13 and tag = nothing
  ...testing vec2num_5 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_6 with chunk size = 1 and tag = nothing
  ...testing vec2num_6 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 4 and tag = nothing
  ...testing vec2num_6 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 6 and tag = nothing
  ...testing vec2num_6 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 12 and tag = nothing
  ...testing vec2num_6 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 13 and tag = nothing
  ...testing vec2num_6 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_7 with chunk size = 1 and tag = nothing
  ...testing vec2num_7 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 4 and tag = nothing
  ...testing vec2num_7 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 6 and tag = nothing
  ...testing vec2num_7 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 12 and tag = nothing
  ...testing vec2num_7 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 13 and tag = nothing
  ...testing vec2num_7 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing rosenbrock_1 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_2 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_3 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_4 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing ackley with chunk size = 1 and tag = nothing
  ...testing ackley with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 4 and tag = nothing
  ...testing ackley with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 6 and tag = nothing
  ...testing ackley with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 12 and tag = nothing
  ...testing ackley with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 13 and tag = nothing
  ...testing ackley with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing self_weighted_logit with chunk size = 1 and tag = nothing
  ...testing self_weighted_logit with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 4 and tag = nothing
  ...testing self_weighted_logit with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 6 and tag = nothing
  ...testing self_weighted_logit with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 12 and tag = nothing
  ...testing self_weighted_logit with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 13 and tag = nothing
  ...testing self_weighted_logit with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing first with chunk size = 1 and tag = nothing
  ...testing first with chunk size = 1 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 4 and tag = nothing
  ...testing first with chunk size = 4 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 6 and tag = nothing
  ...testing first with chunk size = 6 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 12 and tag = nothing
  ...testing first with chunk size = 12 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 13 and tag = nothing
  ...testing first with chunk size = 13 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing specialized StaticArray codepaths
Test Summary:                     | Pass  Total
exponential function at base zero |    4      4
done (took 134.68803602 seconds).
Testing jacobian functionality...
  ...running hardcoded test with chunk size = 1 and tag = (nothing, nothing)
  ...running hardcoded test with chunk size = 1 and tag = (ForwardDiff.Tag{getfield(Main.JacobianTest, Symbol("##3#4")),Int64}(), ForwardDiff.Tag{getfield(Main.JacobianTest, Symbol("##1#2")),Int64}())
  ...running hardcoded test with chunk size = 2 and tag = (nothing, nothing)
  ...running hardcoded test with chunk size = 2 and tag = (ForwardDiff.Tag{getfield(Main.JacobianTest, Symbol("##3#4")),Int64}(), ForwardDiff.Tag{getfield(Main.JacobianTest, Symbol("##1#2")),Int64}())
  ...running hardcoded test with chunk size = 3 and tag = (nothing, nothing)
  ...running hardcoded test with chunk size = 3 and tag = (ForwardDiff.Tag{getfield(Main.JacobianTest, Symbol("##3#4")),Int64}(), ForwardDiff.Tag{getfield(Main.JacobianTest, Symbol("##1#2")),Int64}())
  ...testing - with chunk size = 1 and tag = nothing
  ...testing - with chunk size = 1 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 4 and tag = nothing
  ...testing - with chunk size = 4 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 6 and tag = nothing
  ...testing - with chunk size = 6 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 12 and tag = nothing
  ...testing - with chunk size = 12 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 13 and tag = nothing
  ...testing - with chunk size = 13 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing chebyquad with chunk size = 1 and tag = nothing
  ...testing chebyquad with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 4 and tag = nothing
  ...testing chebyquad with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 6 and tag = nothing
  ...testing chebyquad with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 12 and tag = nothing
  ...testing chebyquad with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 13 and tag = nothing
  ...testing chebyquad with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing brown_almost_linear with chunk size = 1 and tag = nothing
  ...testing brown_almost_linear with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 4 and tag = nothing
  ...testing brown_almost_linear with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 6 and tag = nothing
  ...testing brown_almost_linear with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 12 and tag = nothing
  ...testing brown_almost_linear with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 13 and tag = nothing
  ...testing brown_almost_linear with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing trigonometric with chunk size = 1 and tag = nothing
  ...testing trigonometric with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 4 and tag = nothing
  ...testing trigonometric with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 6 and tag = nothing
  ...testing trigonometric with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 12 and tag = nothing
  ...testing trigonometric with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 13 and tag = nothing
  ...testing trigonometric with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing arr2arr_1 with chunk size = 1 and tag = nothing
  ...testing arr2arr_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 4 and tag = nothing
  ...testing arr2arr_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 6 and tag = nothing
  ...testing arr2arr_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 12 and tag = nothing
  ...testing arr2arr_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 13 and tag = nothing
  ...testing arr2arr_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_2 with chunk size = 1 and tag = nothing
  ...testing arr2arr_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 4 and tag = nothing
  ...testing arr2arr_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 6 and tag = nothing
  ...testing arr2arr_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 12 and tag = nothing
  ...testing arr2arr_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 13 and tag = nothing
  ...testing arr2arr_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing mutation_test_1 with chunk size = 1 and tag = nothing
  ...testing mutation_test_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 4 and tag = nothing
  ...testing mutation_test_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 6 and tag = nothing
  ...testing mutation_test_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 12 and tag = nothing
  ...testing mutation_test_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 13 and tag = nothing
  ...testing mutation_test_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_2 with chunk size = 1 and tag = nothing
  ...testing mutation_test_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 4 and tag = nothing
  ...testing mutation_test_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 6 and tag = nothing
  ...testing mutation_test_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 12 and tag = nothing
  ...testing mutation_test_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 13 and tag = nothing
  ...testing mutation_test_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing identity with chunk size = 1 and tag = nothing
  ...testing identity with chunk size = 1 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 4 and tag = nothing
  ...testing identity with chunk size = 4 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 6 and tag = nothing
  ...testing identity with chunk size = 6 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 12 and tag = nothing
  ...testing identity with chunk size = 12 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 13 and tag = nothing
  ...testing identity with chunk size = 13 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing chebyquad! with chunk size = 1 and tag = nothing
  ...testing chebyquad! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 4 and tag = nothing
  ...testing chebyquad! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 6 and tag = nothing
  ...testing chebyquad! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 12 and tag = nothing
  ...testing chebyquad! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 13 and tag = nothing
  ...testing chebyquad! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing brown_almost_linear! with chunk size = 1 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 4 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 6 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 12 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 13 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing trigonometric! with chunk size = 1 and tag = nothing
  ...testing trigonometric! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 4 and tag = nothing
  ...testing trigonometric! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 6 and tag = nothing
  ...testing trigonometric! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 12 and tag = nothing
  ...testing trigonometric! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 13 and tag = nothing
  ...testing trigonometric! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing mutation_test_1! with chunk size = 1 and tag = nothing
  ...testing mutation_test_1! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 4 and tag = nothing
  ...testing mutation_test_1! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 6 and tag = nothing
  ...testing mutation_test_1! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 12 and tag = nothing
  ...testing mutation_test_1! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 13 and tag = nothing
  ...testing mutation_test_1! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_2! with chunk size = 1 and tag = nothing
  ...testing mutation_test_2! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 4 and tag = nothing
  ...testing mutation_test_2! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 6 and tag = nothing
  ...testing mutation_test_2! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 12 and tag = nothing
  ...testing mutation_test_2! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 13 and tag = nothing
  ...testing mutation_test_2! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing specialized StaticArray codepaths
done (took 112.801064549 seconds).
Testing hessian functionality...
  ...running hardcoded test with chunk size = 1 and tag = nothing
  ...running hardcoded test with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...running hardcoded test with chunk size = 2 and tag = nothing
  ...running hardcoded test with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...running hardcoded test with chunk size = 3 and tag = nothing
  ...running hardcoded test with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_1 with chunk size = 1 and tag = nothing
  ...testing vec2num_1 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_1 with chunk size = 2 and tag = nothing
  ...testing vec2num_1 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_1 with chunk size = 3 and tag = nothing
  ...testing vec2num_1 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_2 with chunk size = 1 and tag = nothing
  ...testing vec2num_2 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_2 with chunk size = 2 and tag = nothing
  ...testing vec2num_2 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_2 with chunk size = 3 and tag = nothing
  ...testing vec2num_2 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_3 with chunk size = 1 and tag = nothing
  ...testing vec2num_3 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_3 with chunk size = 2 and tag = nothing
  ...testing vec2num_3 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_3 with chunk size = 3 and tag = nothing
  ...testing vec2num_3 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_4 with chunk size = 1 and tag = nothing
  ...testing vec2num_4 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_4 with chunk size = 2 and tag = nothing
  ...testing vec2num_4 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_4 with chunk size = 3 and tag = nothing
  ...testing vec2num_4 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_5 with chunk size = 1 and tag = nothing
  ...testing vec2num_5 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_5),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_5 with chunk size = 2 and tag = nothing
  ...testing vec2num_5 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_5),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_5 with chunk size = 3 and tag = nothing
  ...testing vec2num_5 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_5),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_6 with chunk size = 1 and tag = nothing
  ...testing vec2num_6 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_6),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_6 with chunk size = 2 and tag = nothing
  ...testing vec2num_6 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_6),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_6 with chunk size = 3 and tag = nothing
  ...testing vec2num_6 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_6),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_7 with chunk size = 1 and tag = nothing
  ...testing vec2num_7 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_7),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_7 with chunk size = 2 and tag = nothing
  ...testing vec2num_7 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_7),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_7 with chunk size = 3 and tag = nothing
  ...testing vec2num_7 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_7),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_1 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_1 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_1 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_2 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_2 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_2 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_3 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_3 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_3 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_4 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_4 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_4 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing ackley with chunk size = 1 and tag = nothing
  ...testing ackley with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.ackley),typeof(ForwardDiff.gradient)},Float64}()
  ...testing ackley with chunk size = 2 and tag = nothing
  ...testing ackley with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.ackley),typeof(ForwardDiff.gradient)},Float64}()
  ...testing ackley with chunk size = 3 and tag = nothing
  ...testing ackley with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.ackley),typeof(ForwardDiff.gradient)},Float64}()
  ...testing self_weighted_logit with chunk size = 1 and tag = nothing
  ...testing self_weighted_logit with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.self_weighted_logit),typeof(ForwardDiff.gradient)},Float64}()
  ...testing self_weighted_logit with chunk size = 2 and tag = nothing
  ...testing self_weighted_logit with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.self_weighted_logit),typeof(ForwardDiff.gradient)},Float64}()
  ...testing self_weighted_logit with chunk size = 3 and tag = nothing
  ...testing self_weighted_logit with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.self_weighted_logit),typeof(ForwardDiff.gradient)},Float64}()
  ...testing first with chunk size = 1 and tag = nothing
  ...testing first with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(first),typeof(ForwardDiff.gradient)},Float64}()
  ...testing first with chunk size = 2 and tag = nothing
  ...testing first with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(first),typeof(ForwardDiff.gradient)},Float64}()
  ...testing first with chunk size = 3 and tag = nothing
  ...testing first with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(first),typeof(ForwardDiff.gradient)},Float64}()
  ...testing specialized StaticArray codepaths
done (took 242.76942647 seconds).
Testing perturbation confusion functionality...
done (took 11.135102988 seconds).
Testing miscellaneous functionality...
done (took 21.706248629 seconds).
Testing SIMD vectorization...
Test Summary:                            | Pass  Total
SIMD ForwardDiff.Dual{Nothing,Float64,3} |   10     10
Test Summary:                            | Pass  Total
SIMD ForwardDiff.Dual{Nothing,Float64,4} |   10     10
Test Summary:                                                        | Pass  Total
SIMD ForwardDiff.Dual{Nothing,ForwardDiff.Dual{Nothing,Float64,1},1} |    8      8
Test Summary:                                      | Pass  Total
SIMD square of ForwardDiff.Dual{Nothing,Float64,1} |    1      1
Test Summary:                                      | Pass  Total
SIMD square of ForwardDiff.Dual{Nothing,Float64,2} |    1      1
Test Summary:                                      | Pass  Total
SIMD square of ForwardDiff.Dual{Nothing,Float64,3} |    1      1
Test Summary:                                      | Pass  Total
SIMD square of ForwardDiff.Dual{Nothing,Float64,4} |    1      1
done (took 10.285315375 seconds).
   Testing ForwardDiff tests passed 
