 Resolving package versions...
 Installed DataAPI ─── v1.1.0
 Installed Unmarshal ─ v0.2.1
 Installed Nullables ─ v0.0.8
 Installed Missings ── v0.4.3
 Installed Parsers ─── v0.3.10
 Installed Compat ──── v2.2.0
 Installed JSON ────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [cbff2730] + Unmarshal v0.2.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [4d1e1d77] + Nullables v0.0.8
  [69de0a69] + Parsers v0.3.10
  [cbff2730] + Unmarshal v0.2.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing Unmarshal
Status `/tmp/jl_CTu2gM/Manifest.toml`
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [4d1e1d77] Nullables v0.0.8
  [69de0a69] Parsers v0.3.10
  [cbff2730] Unmarshal v0.2.1
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Unmarshal.unmarshal(BazNullable, JSON.parse(input2)) === BazNullable(Nullable{Float64}(), Bar(17)) = true
Foo AbstractDict
\--> bar <: Bar 
	Bar AbstractDict
	\--> baz <: Int64 
Array{Float64, 3}
	Array{Float64, 2}
		Vector{Float64}
		Vector{Float64}
		Vector{Float64}
	Array{Float64, 2}
		Vector{Float64}
		Vector{Float64}
		Vector{Float64}
	Array{Float64, 2}
		Vector{Float64}
		Vector{Float64}
		Vector{Float64}
	Array{Float64, 2}
		Vector{Float64}
		Vector{Float64}
		Vector{Float64}
String (String)
Tuple{Tuple{Float64}} 1 Dimensions, length 2
	Tuple{Float64} 1 Dimensions, length 4
	Tuple{Float64} 1 Dimensions, length 2
DictTest AbstractDict
\--> testDict <: Dict{Int64,String} 
	Dict{Int64,String} Dict 
	\--> 1 
		String (String)
	\--> 2 
		String (String)
dictTest2 = Dict("k" => "val") = Dict("k" => "val")
Dict{String,String} Dict 
\--> k 
	String (String)
Unmarshal.unmarshal(TestUnmarshal, j) = TestUnmarshal("", "Test", Dict("self" => "TestDict"))
   Testing Unmarshal tests passed 
