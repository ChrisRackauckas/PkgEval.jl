 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
 Installed Rmath ─────────────────────── v0.5.1
 Installed Primes ────────────────────── v0.4.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsModels ───────────────── v0.6.7
 Installed BinDeps ───────────────────── v0.8.10
 Installed ExperimentalDesign ────────── v0.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Arpack ────────────────────── v0.3.1
 Installed DataStructures ────────────── v0.17.6
 Installed QuadGK ────────────────────── v2.1.1
 Installed CategoricalArrays ─────────── v0.7.3
 Installed Distributions ─────────────── v0.21.8
 Installed Documenter ────────────────── v0.24.0
 Installed URIParser ─────────────────── v0.4.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed StatsFuns ─────────────────── v0.9.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed ShiftedArrays ─────────────── v1.0.0
 Installed PDMats ────────────────────── v0.9.10
 Installed DocStringExtensions ───────── v0.8.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed TableTraits ───────────────── v1.0.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed Compat ────────────────────── v2.2.0
 Installed OrderedCollections ────────── v1.1.0
 Installed SpecialFunctions ──────────── v0.8.0
 Installed DataFrames ────────────────── v0.19.4
  Updating `~/.julia/environments/v1.4/Project.toml`
  [4babbea4] + ExperimentalDesign v0.1.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [7d9fca2a] + Arpack v0.3.1
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [324d7699] + CategoricalArrays v0.7.3
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [31c24e10] + Distributions v0.21.8
  [ffbed154] + DocStringExtensions v0.8.1
  [e30172f5] + Documenter v0.24.0
  [4babbea4] + ExperimentalDesign v0.1.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [27ebfcd6] + Primes v0.4.0
  [1fd47b50] + QuadGK v2.1.1
  [189a3867] + Reexport v0.2.0
  [79098fc4] + Rmath v0.5.1
  [1277b4bf] + ShiftedArrays v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.8.0
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.0
  [3eaba693] + StatsModels v0.6.7
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [30578b45] + URIParser v0.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath ───────────→ `~/.julia/packages/Rmath/4wt82/deps/build.log`
  Building Arpack ──────────→ `~/.julia/packages/Arpack/cu5By/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
   Testing ExperimentalDesign
Status `/tmp/jl_kMHvrS/Manifest.toml`
  [7d9fca2a] Arpack v0.3.1
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.3
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.21.8
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.0
  [4babbea4] ExperimentalDesign v0.1.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [27ebfcd6] Primes v0.4.0
  [1fd47b50] QuadGK v2.1.1
  [189a3867] Reexport v0.2.0
  [79098fc4] Rmath v0.5.1
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.8.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.0
  [3eaba693] StatsModels v0.6.7
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:130-148
│ 
│ ```jldoctest
│ julia> FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), @formula(y ~ A + B +C), explicit = true)
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), @formula(y ~ A + B +C), explicit = true)
│ 
│ Evaluated output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], [:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
│ 
│ Expected output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
│ 
│   diff =
│    Warning: Diff output requires color.
│    FullFactorial(12×3 DataFrames.DataFrame
│    │ Row │ A   │ B   │ C    │
│    │     │ Any │ Any │ Any  │
│    ├─────┼─────┼─────┼──────┤
│    │ 1   │ 1   │ a   │ 1.0  │
│    │ 2   │ 2   │ a   │ 1.0  │
│    │ 3   │ 4   │ a   │ 1.0  │
│    │ 4   │ 1   │ b   │ 1.0  │
│    │ 5   │ 2   │ b   │ 1.0  │
│    │ 6   │ 4   │ b   │ 1.0  │
│    │ 7   │ 1   │ a   │ -1.0 │
│    │ 8   │ 2   │ a   │ -1.0 │
│    │ 9   │ 4   │ a   │ -1.0 │
│    │ 10  │ 1   │ b   │ -1.0 │
│    │ 11  │ 2   │ b   │ -1.0 │
│    │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, [:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, [:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/STY11/src/DocTests.jl:364
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:166-184
│ 
│ ```jldoctest
│ julia> FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), explicit = true)
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), explicit = true)
│ 
│ Evaluated output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], [:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
│ 
│ Expected output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
│ 
│   diff =
│    Warning: Diff output requires color.
│    FullFactorial(12×3 DataFrames.DataFrame
│    │ Row │ A   │ B   │ C    │
│    │     │ Any │ Any │ Any  │
│    ├─────┼─────┼─────┼──────┤
│    │ 1   │ 1   │ a   │ 1.0  │
│    │ 2   │ 2   │ a   │ 1.0  │
│    │ 3   │ 4   │ a   │ 1.0  │
│    │ 4   │ 1   │ b   │ 1.0  │
│    │ 5   │ 2   │ b   │ 1.0  │
│    │ 6   │ 4   │ b   │ 1.0  │
│    │ 7   │ 1   │ a   │ -1.0 │
│    │ 8   │ 2   │ a   │ -1.0 │
│    │ 9   │ 4   │ a   │ -1.0 │
│    │ 10  │ 1   │ b   │ -1.0 │
│    │ 11  │ 2   │ b   │ -1.0 │
│    │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, [:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, [:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/STY11/src/DocTests.jl:364
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:194-212
│ 
│ ```jldoctest
│ julia> FullFactorial(([1, 2, 4], [:a, :b], [1.0, -1.0]), explicit = true)
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │
│ │     │ Any     │ Any     │ Any     │
│ ├─────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1       │ a       │ 1.0     │
│ │ 2   │ 2       │ a       │ 1.0     │
│ │ 3   │ 4       │ a       │ 1.0     │
│ │ 4   │ 1       │ b       │ 1.0     │
│ │ 5   │ 2       │ b       │ 1.0     │
│ │ 6   │ 4       │ b       │ 1.0     │
│ │ 7   │ 1       │ a       │ -1.0    │
│ │ 8   │ 2       │ a       │ -1.0    │
│ │ 9   │ 4       │ a       │ -1.0    │
│ │ 10  │ 1       │ b       │ -1.0    │
│ │ 11  │ 2       │ b       │ -1.0    │
│ │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ FullFactorial(([1, 2, 4], [:a, :b], [1.0, -1.0]), explicit = true)
│ 
│ Evaluated output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │
│ │     │ Any     │ Any     │ Any     │
│ ├─────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1       │ a       │ 1.0     │
│ │ 2   │ 2       │ a       │ 1.0     │
│ │ 3   │ 4       │ a       │ 1.0     │
│ │ 4   │ 1       │ b       │ 1.0     │
│ │ 5   │ 2       │ b       │ 1.0     │
│ │ 6   │ 4       │ b       │ 1.0     │
│ │ 7   │ 1       │ a       │ -1.0    │
│ │ 8   │ 2       │ a       │ -1.0    │
│ │ 9   │ 4       │ a       │ -1.0    │
│ │ 10  │ 1       │ b       │ -1.0    │
│ │ 11  │ 2       │ b       │ -1.0    │
│ │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], [:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = [:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
│ 
│ Expected output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │
│ │     │ Any     │ Any     │ Any     │
│ ├─────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1       │ a       │ 1.0     │
│ │ 2   │ 2       │ a       │ 1.0     │
│ │ 3   │ 4       │ a       │ 1.0     │
│ │ 4   │ 1       │ b       │ 1.0     │
│ │ 5   │ 2       │ b       │ 1.0     │
│ │ 6   │ 4       │ b       │ 1.0     │
│ │ 7   │ 1       │ a       │ -1.0    │
│ │ 8   │ 2       │ a       │ -1.0    │
│ │ 9   │ 4       │ a       │ -1.0    │
│ │ 10  │ 1       │ b       │ -1.0    │
│ │ 11  │ 2       │ b       │ -1.0    │
│ │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    FullFactorial(12×3 DataFrames.DataFrame
│    │ Row │ factor1 │ factor2 │ factor3 │
│    │     │ Any     │ Any     │ Any     │
│    ├─────┼─────────┼─────────┼─────────┤
│    │ 1   │ 1       │ a       │ 1.0     │
│    │ 2   │ 2       │ a       │ 1.0     │
│    │ 3   │ 4       │ a       │ 1.0     │
│    │ 4   │ 1       │ b       │ 1.0     │
│    │ 5   │ 2       │ b       │ 1.0     │
│    │ 6   │ 4       │ b       │ 1.0     │
│    │ 7   │ 1       │ a       │ -1.0    │
│    │ 8   │ 2       │ a       │ -1.0    │
│    │ 9   │ 4       │ a       │ -1.0    │
│    │ 10  │ 1       │ b       │ -1.0    │
│    │ 11  │ 2       │ b       │ -1.0    │
│    │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, [:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, [:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/STY11/src/DocTests.jl:364
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /root/.julia/packages/Documenter/STY11/src/Builder.jl:204
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /root/.julia/packages/Documenter/STY11/src/Utilities/Selectors.jl:167
│     [4] #2 at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:237 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:236
│     [7] (::Documenter.var"#all_doctests#30"{Bool,Array{Module,1}})() at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:745
│     [8] macro expansion at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:761 [inlined]
│     [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
│     [10] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:761
│     [11] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:704
│     [12] doctest(::Module) at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:691
│     [13] top-level scope at /root/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:19
│     [14] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110
│     [15] top-level scope at /root/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:13
│     [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110
│     [17] top-level scope at /root/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:8
│     [18] include(::String) at ./client.jl:439
│     [19] top-level scope at none:6
│     [20] eval(::Module, ::Any) at ./boot.jl:331
│     [21] exec_options(::Base.JLOptions) at ./client.jl:264
│     [22] _start() at ./client.jl:484
└ @ Documenter ~/.julia/packages/Documenter/STY11/src/Documenter.jl:754
Doctests: ExperimentalDesign: Test Failed at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:761
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:761 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1110 [inlined]
 [3] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /root/.julia/packages/Documenter/STY11/src/Documenter.jl:761
Test Summary:                    | Pass  Fail  Total
ExperimentalDesign               |    4     1      5
  variance_predictions           |    4            4
  Doctests                       |          1      1
    Doctests: ExperimentalDesign |          1      1
ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /root/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:7
ERROR: Package ExperimentalDesign errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1379
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:287
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:274
 [5] #test#56 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [7] #test#55 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [11] top-level scope at none:10
